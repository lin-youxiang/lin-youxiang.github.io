<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>User Center</title>
      <link href="/2024/03/13/User-Center/"/>
      <url>/2024/03/13/User-Center/</url>
      
        <content type="html"><![CDATA[<ul><li><p>前端：ant design pro</p></li><li><p>初始化项目</p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20230806212355.png" alt="image-20230806212355222" style="zoom:50%;" /></li><li><p>Spring：依赖注入，管理 Java 对象</p><p>SpringMVC：Web 框架，接口访问能力</p><p>SpringBoot：整合、启动、免配置</p></li><li><p>一张表的基本字段（业务无关）</p><blockquote><p>Java开发手册（黄山版）：</p><p>【强制】表必备三字段：id，create_time，update_time。</p><p>说明：其中 id 必为主键，类型为 bigint unsigned、单表时自增、步长为 1。create_time，update_time 的类型均为 datetime 类型，如果要记录时区信息，那么类型设置为 timestamp。</p></blockquote><ul><li><p>id（主键）：bigint unsigned</p></li><li><p>is_deleted（逻辑删除）</p><ul><li>数据类型 usigned tinyint</li><li>0：未删除</li><li>1：已删除</li></ul></li><li><p>create_time：datetime</p></li><li><p>update_time：datetime</p></li></ul></li><li><p>数据库字段索引</p><p>建立索引的时候，想一下查询的时候，最经常用哪个字段作为条件</p></li><li><p>mybatis-plus</p></li><li><p>mybatisX 插件</p><ul><li>domain： 对象和表的映射</li><li>mapper： 对表的操作（方法）</li><li>mapper.xml：对表的操作（SQL）</li></ul><p>mapper 和 mapper.xml 一一对应</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>IYUUPLUS 辅种</title>
      <link href="/2024/03/12/IYUUPLUS-%E8%BE%85%E7%A7%8D/"/>
      <url>/2024/03/12/IYUUPLUS-%E8%BE%85%E7%A7%8D/</url>
      
        <content type="html"><![CDATA[<h2 id="种子目录"><a href="#种子目录" class="headerlink" title="种子目录"></a>种子目录</h2><h3 id="qBittorrent-种子目录"><a href="#qBittorrent-种子目录" class="headerlink" title="qBittorrent 种子目录"></a>qBittorrent 种子目录</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name BT_backup</span><br></pre></td></tr></table></figure><p>Result: <code>/opt/qBittorrent/data/BT_backup</code></p><h3 id="Transmission-种子目录"><a href="#Transmission-种子目录" class="headerlink" title="Transmission 种子目录"></a>Transmission 种子目录</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name torrents</span><br></pre></td></tr></table></figure><p>Result: <code>/opt/transmission/torrents</code></p><h2 id="拉取镜像、创建容器，运行"><a href="#拉取镜像、创建容器，运行" class="headerlink" title="拉取镜像、创建容器，运行"></a>拉取镜像、创建容器，运行</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --name IYUUPlus \</span><br><span class="line">  --net=host</span><br><span class="line">  -v /docker/IYUU:/IYUU/db</span><br><span class="line">  -v /opt/qBittorrent/data/BT_backup/:/BT_backup</span><br><span class="line">  -v /opt/transmission/torrents/:/torrents</span><br><span class="line">  -p 8787:8787 \</span><br><span class="line">  -e TZ=<span class="string">&quot;Asia/Shanghai&quot;</span> \</span><br><span class="line">  -e UID=0 \</span><br><span class="line">  -e GID=0 \</span><br><span class="line">  -e GIDLIST=0 \</span><br><span class="line">  --restart=always \</span><br><span class="line">  iyuucn/iyuuplus</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/02/19/PT-%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A%E4%B9%8B%E5%BD%B1%E8%A7%86%E8%B5%84%E6%BA%90%E6%A0%87%E9%A2%98%E5%85%83%E7%B4%A0%E6%8B%86%E8%A7%A3/"/>
      <url>/2024/02/19/PT-%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A%E4%B9%8B%E5%BD%B1%E8%A7%86%E8%B5%84%E6%BA%90%E6%A0%87%E9%A2%98%E5%85%83%E7%B4%A0%E6%8B%86%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="title：-PT-必知必会之影视资源标题元素拆解categories：-记录date：-2024-02-19-23：48：27"><a href="#title：-PT-必知必会之影视资源标题元素拆解categories：-记录date：-2024-02-19-23：48：27" class="headerlink" title="title： PT 必知必会之影视资源标题元素拆解categories：  - 记录date： 2024-02-19 23：48：27"></a>title： PT 必知必会之影视资源标题元素拆解<br>categories：<br>  - 记录<br>date： 2024-02-19 23：48：27</h2><h2 id="媒介"><a href="#媒介" class="headerlink" title="媒介"></a>媒介</h2><ul><li>Blu-ray：蓝光原盘 2k</li><li>UHD Blu-ray：蓝光原盘 4k</li><li>Remux：无损提取蓝光原盘的视频和音频，丢弃其他多余元素，体积比蓝光原盘略小。</li><li>Encode：有损压缩，体积一般较小。</li><li>HDTV：从电视上录制的资源。</li><li>WEB-DL：从视频网站上获取的资源。</li></ul><h2 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h2><h3 id="视频编码"><a href="#视频编码" class="headerlink" title="视频编码"></a>视频编码</h3><ul><li><p>H.264&#x2F;AVC (Advanced Video Coding)</p><ul><li><p><strong>介绍</strong>： H.264，也被称为AVC（高级视频编码），是一种广泛使用的视频压缩标准，为高清视频传输和存储提供了高效的视频压缩解决方案。它被广泛应用于从互联网流媒体、蓝光光盘到HDTV广播和视频会议系统。</p></li><li><p><strong>特点</strong>： H.264提供了高压缩率，能够在较低的比特率下保持良好的视频质量，支持从低分辨率到高清视频的各种应用，具有良好的网络适应性。</p></li></ul></li><li><p>VC-1</p><ul><li><p><strong>介绍</strong>： VC-1是微软开发的一种视频编码标准，最初设计用于Windows Media Video (WMV) 9。它被正式认定为SMPTE（电影电视工程师协会）标准。VC-1特别优化用于流媒体应用和高清视频内容。</p></li><li><p><strong>特点</strong>： VC-1旨在提供优异的编码效率和高质量的视频输出，对于处理交错视频和处理高分辨率内容（如1080p）特别有效。</p></li></ul></li><li><p>Xvid</p><ul><li><p><strong>介绍</strong>： Xvid是一个开源的视频编码库，遵循MPEG-4 Part 2 Advanced Simple Profile (ASP) 视频编码标准。它是DivX的一个分支，旨在提供一个自由使用的替代方案。</p></li><li><p><strong>特点</strong>： Xvid提供了很好的视频压缩效率和兼容性，能够在保持较高视频质量的同时大幅减小文件大小，广泛用于网络视频和数字视频存档。</p></li></ul></li><li><p>MPEG-4</p><ul><li><p><strong>介绍</strong>： MPEG-4是一种广泛使用的视频和音频编码标准，由国际电信联盟（ISO&#x2F;IEC）定义。它不仅包括视频和音频压缩，还涵盖了交互式多媒体（如3D渲染和数字权利管理）。</p></li><li><p><strong>特点</strong>： MPEG-4设计用于适应各种带宽条件，提供高效的媒体压缩和传输。它支持高清视频和AAC音频，是许多移动设备和互联网视频服务的首选格式。</p></li></ul></li><li><p>H.265&#x2F;HEVC (High Efficiency Video Coding)</p><ul><li><p><strong>介绍</strong>： H.265，也称为HEVC（高效视频编码），是继H.264之后的下一代视频压缩标准，提供了比H.264更高的数据压缩比，能够以更低的比特率传输高质量视频。</p></li><li><p><strong>特点</strong>： H.265在保持相同视频质量的情况下，相比H.264减少了大约50%的数据量，特别适合4K和8K视频的传输和存储。</p></li></ul></li></ul><h3 id="音频编码"><a href="#音频编码" class="headerlink" title="音频编码"></a>音频编码</h3><ul><li><p>ALAC (Apple Lossless Audio Codec)</p><ul><li><strong>介绍</strong>： ALAC是一种由苹果公司开发的无损音频编码格式。它能够无损压缩CD质量的音频文件，使文件大小减少而不损失任何原始音频数据。</li><li><strong>特点</strong>： ALAC格式支持16位和24位音频，样本率高达192kHz，因此它保留了录音室级别的声音质量。与FLAC相比，ALAC主要用于苹果生态系统中，包括iTunes和iPod。</li></ul></li><li><p>DTS (Digital Theater Systems)</p><ul><li><strong>介绍</strong>： DTS是一种多通道音频编码格式，广泛用于DVD、蓝光光盘和家庭影院系统。它旨在提供影院级别的环绕声体验。</li><li><strong>特点</strong>： DTS提供高质量的音频输出，特别是在多通道环境中，能够提供深沉且全面的声音场景。</li></ul></li><li><p>AC3 (Audio Coding 3)</p><ul><li><strong>介绍</strong>： 也被称为Dolby Digital，是Dolby Laboratories开发的一种多通道音频编码格式。它是DVD、蓝光光盘和流媒体广播中常用的格式。</li><li><strong>特点</strong>： AC3支持最多6个音频通道（5.1环绕声），在压缩效率和声音质量之间取得了良好的平衡。</li></ul></li><li><p><strong>DTS-HD (DTS-High Definition)</strong> &#x2F;&#x2F; 常见于蓝光原盘</p><ul><li><p><strong>介绍</strong>： DTS-HD是DTS的高清版本，包括两个主要部分：DTS-HD High Resolution Audio和DTS-HD Master Audio。它们提供更高的音频质量和更大的比特率。</p></li><li><p><strong>特点</strong>： DTS-HD能够无损压缩音频，保留原始录音的质量，特别适合高清蓝光光盘。</p></li></ul></li><li><p><strong>TrueHD</strong> &#x2F;&#x2F; 常见于蓝光原盘</p><ul><li><p><strong>介绍</strong>： Dolby TrueHD是Dolby Laboratories推出的一种无损音频编码格式，能够在完全无损的情况下复制影院级别的声音。</p></li><li><p><strong>特点</strong>： TrueHD支持最多8个通道的音频，提供了与原始录音室质量相匹配的声音，常用于蓝光光盘。</p></li></ul></li><li><p>LPCM (Linear Pulse Code Modulation)</p><ul><li><p><strong>介绍</strong>： LPCM是一种未压缩的音频编码格式，它保留了原始音频信号的所有信息，通常用于专业音频和视频设备。</p></li><li><p><strong>特点</strong>： LPCM提供最高质量的音频输出，但文件大小比压缩格式大得多。</p></li></ul></li><li><p>FLAC (Free Lossless Audio Codec)</p><ul><li><p><strong>介绍</strong>： FLAC是一种无损音频压缩编码，能够在不损失任何音频质量的情况下减小文件大小。</p></li><li><p><strong>特点</strong>： FLAC支持快速流媒体，文件大小通常是原始音频的一半左右，是音乐发烧友和高质量音频应用的首选。</p></li></ul></li><li><p>APE (Monkey’s Audio)</p><ul><li><p><strong>介绍</strong>： APE是另一种无损音频编码格式，提供了与FLAC类似的无损压缩，但在某些情况下可能提供更高的压缩率。</p></li><li><p><strong>特点</strong>： APE文件压缩后的大小可能比FLAC更小，但兼容性和解码要求可能更高。</p></li></ul></li><li><p>WAV (Waveform Audio File Format)</p><ul><li><p><strong>介绍</strong>： WAV是一种未压缩的音频文件格式，由Microsoft和IBM开发。它保留了未压缩音频的全部质量。</p></li><li><p><strong>特点</strong>： WAV文件提供最高质量的音频输出，但相应的文件大小也是最大的，常用于专业音频编辑和录音。</p></li></ul></li><li><p>AAC (Advanced Audio Coding) </p><ul><li>介绍： AAC是一种压缩音频编码标准，由MPEG组织开发。它被设计为MP3的后继者，提供更好的音质和更高的压缩率。</li><li><strong>特点</strong>： AAC在较低的比特率下提供比MP3更优秀的音质，这意味着AAC文件在相同的文件大小下可以提供更高的音质，或者在保持相同音质的情况下减小文件的大小。AAC支持多达48个音频通道，比MP3的支持更广，包括更好的处理低频效果和更复杂的音频纹理。</li></ul></li></ul><h2 id="种子"><a href="#种子" class="headerlink" title="种子"></a>种子</h2><ul><li>活种：至少有一个人在做种的种子。</li><li>断种：无人做种，难以下载，但可能会有突然的做种情况。</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>biliip 配置</title>
      <link href="/2024/02/18/biliup%20%E9%85%8D%E7%BD%AE/"/>
      <url>/2024/02/18/biliup%20%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">--name Biliup \</span><br><span class="line">--net=host  \</span><br><span class="line">-v /mnt/ds418play/Live:/opt \</span><br><span class="line">-e TZ=<span class="string">&quot;Asia/Shanghai&quot;</span> \</span><br><span class="line">-e UID=0 \</span><br><span class="line">-e GID=0 \</span><br><span class="line">-e GIDLIST=0 \</span><br><span class="line">--restart always \</span><br><span class="line">-d ghcr.io/biliup/caution:master</span><br></pre></td></tr></table></figure><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Kafka 广播机制</title>
      <link href="/2024/02/05/Kafka-%E5%B9%BF%E6%92%AD%E6%9C%BA%E5%88%B6/"/>
      <url>/2024/02/05/Kafka-%E5%B9%BF%E6%92%AD%E6%9C%BA%E5%88%B6/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>NasTools 配置</title>
      <link href="/2024/01/29/NasTools-%E9%85%8D%E7%BD%AE/"/>
      <url>/2024/01/29/NasTools-%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h2><p>CLI 命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">--name NasTools \</span><br><span class="line">--net=host  \</span><br><span class="line">-p 15001:3000 \</span><br><span class="line">-v /docker/nastools:/config \</span><br><span class="line">-v /mnt/ds418play:/ds418play \</span><br><span class="line">-e TZ=<span class="string">&quot;Asia/Shanghai&quot;</span> \</span><br><span class="line">-e UID=0 \</span><br><span class="line">-e GID=0 \</span><br><span class="line">-e GIDLIST=0 \</span><br><span class="line">--restart always \</span><br><span class="line">-d hsuyelin/nas-tools:latest</span><br></pre></td></tr></table></figure><p>命令解释：</p><ol><li><code>docker run</code>：这是用来启动新容器的Docker命令。</li><li><code>--name NasTools</code>：这个参数为容器设置了一个名字，这里的名字是 “NasTools”。</li><li><code>--net=host</code>：这个参数告诉Docker容器使用宿主机的网络。这意味着容器将共享宿主机的IP地址和所有端口。</li><li><code>-p 15001:3000</code>：这个参数将容器内的3000端口映射到宿主机的15001端口。这意味着你可以通过访问宿主机的15001端口来访问容器中的服务。</li><li><code>-v /docker/nastools:/config</code>：此参数将宿主机的<code>/docker/nastools</code>目录挂载到容器的<code>/config</code>目录。这用于持久化配置数据，使得即使容器重启或删除，数据也不会丢失。</li><li><code>-v /mnt/ds418play:/ds418play</code>：这将宿主机的<code>/mnt/ds418play</code>目录挂载到容器的<code>/ds418play</code>目录。这通常用于共享文件或数据。</li><li><code>-e TZ=&quot;Asia/Shanghai&quot;</code>：设置容器的时区为“Asia&#x2F;Shanghai”。</li><li><code>-e UID=0 -e GID=0 -e GIDLIST=0</code>：这些环境变量分别设置了用户ID、组ID和组ID列表为0，通常对应于root用户和组。</li><li><code>--restart always</code>：这意味着容器将在每次停止后自动重启。</li><li><code>-d</code>：这指示Docker以守护进程模式运行，即容器将在后台运行。</li><li><code>hsuyelin/nas-tools:latest</code>：这是要运行的Docker镜像。<code>hsuyelin/nas-tools:latest</code>指的是名为hsuyelin&#x2F;nas-tools的镜像的最新版本。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Emby 配置.md</title>
      <link href="/2024/01/29/Emby-%E9%85%8D%E7%BD%AE-md/"/>
      <url>/2024/01/29/Emby-%E9%85%8D%E7%BD%AE-md/</url>
      
        <content type="html"><![CDATA[<h1 id="Emby"><a href="#Emby" class="headerlink" title="Emby"></a>Emby</h1><h2 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h2><p>CLI 命令如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">--name Emby \</span><br><span class="line">--net=host  \</span><br><span class="line">-v /docker/emby:/config \</span><br><span class="line">-v /mnt/ds418play:/ds418play \</span><br><span class="line">-e TZ=<span class="string">&quot;Asia/Shanghai&quot;</span> \</span><br><span class="line">-e UID=0 \</span><br><span class="line">-e GID=0 \</span><br><span class="line">-e GIDLIST=0 \</span><br><span class="line">--restart always \</span><br><span class="line">-d emby/embyserver:latest</span><br></pre></td></tr></table></figure><p>对应的解释：</p><ol><li><code>docker run</code>：这是 Docker 中用来运行一个新容器的命令。</li><li><code>--name Emby</code>：这会设置容器的名字为 “Emby”。</li><li><code>--net=host</code>：这个参数告诉 Docker 使用宿主机的网络堆栈。这意味着容器将不会有自己独立的 IP 地址，而是共享宿主机的 IP 地址和端口。</li><li><code>-v /docker/emby:/config</code>：这会将宿主机的 <code>/docker/emby</code> 目录挂载到容器的 <code>/config</code> 目录。这样，容器可以访问并存储配置文件。</li><li><code>-v /mnt/ds418play:/ds418play</code>：这会将宿主机的 <code>/mnt/ds418play</code> 目录挂载到容器的 <code>/ds418play</code> 目录。</li><li><code>-e TZ=&quot;Asia/Shanghai&quot;</code>：设置环境变量 <code>TZ</code>（时区）为 “Asia&#x2F;Shanghai”。</li><li><code>-e UID=0 -e GID=0 -e GIDLIST=0</code>：这些环境变量设置用户 ID、组 ID 和组 ID 列表为 0，通常对应于 root 用户和组。</li><li><code>--restart always</code>：确保容器在退出时总是重新启动。</li><li><code>-d</code>：以守护进程模式运行容器，意味着容器将在后台运行。</li><li><code>emby/embyserver:latest</code>：这是要运行的 Docker 镜像的名字和标签。在这个例子中，它是 Emby 服务器的最新版镜像。</li></ol><h2 id="媒体库"><a href="#媒体库" class="headerlink" title="媒体库"></a>媒体库</h2><h3 id="番剧"><a href="#番剧" class="headerlink" title="番剧"></a>番剧</h3><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128221030.png" alt="CleanShot 2024-01-28 at 22.10.11@2x"></p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128210116.png" alt="CleanShot 2024-01-28 at 21.00.41@2x"></p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128210214.png" alt="CleanShot 2024-01-28 at 21.02.09@2x"></p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128210330.png" alt="CleanShot 2024-01-28 at 21.03.27@2x"></p>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>AdGuard Home 配置</title>
      <link href="/2024/01/29/AdGuard-Home-%E9%85%8D%E7%BD%AE/"/>
      <url>/2024/01/29/AdGuard-Home-%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><ol><li><p>服务 ➡️ AdGuard Home ➡️ 更新。</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128185429.png" alt="CleanShot 2024-01-28 at 18.54.12@2x"></p></li><li><p>更新完成后，选择启用，重定向选择「作为 dnsmasq 的上游服务器」。</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128185742.png" alt="CleanShot 2024-01-28 at 18.56.15@2x"></p></li><li><p>进入 AdGuard Home Web 后台：http:&#x2F;&#x2F;:3000&#x2F;install.html</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128190016.png" alt="CleanShot 2024-01-28 at 19.00.14@2x"></p></li><li><p>网页端口选择 <code>3000</code>，DNS 端口选择 <code>55</code></p></li></ol><h2 id="日志设置"><a href="#日志设置" class="headerlink" title="日志设置"></a>日志设置</h2><ol><li><p>设置 ➡️ 常规设置</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128190532.png" alt="CleanShot 2024-01-28 at 19.05.23@2x"></p></li><li><p>选择保留 24 小时</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128191547.png" alt="CleanShot 2024-01-28 at 19.15.45@2x"></p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128191554.png" alt="CleanShot 2024-01-28 at 19.15.45@2x"></p></li></ol><h2 id="DNS-设置"><a href="#DNS-设置" class="headerlink" title="DNS 设置"></a>DNS 设置</h2><h3 id="上游-DNS-服务器"><a href="#上游-DNS-服务器" class="headerlink" title="上游 DNS 服务器"></a>上游 DNS 服务器</h3><p>&#x3D;&#x3D;并行请求&#x3D;&#x3D;</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#---- 阿里 DNS ----</span></span><br><span class="line"><span class="string">quic://dns.alidns.com</span></span><br><span class="line"><span class="string">tls://dns.alidns.com</span></span><br><span class="line"><span class="string">https://dns.alidns.com/dns-query</span></span><br><span class="line"><span class="string">h3://dns.alidns.com/dns-query</span></span><br><span class="line"><span class="comment">#---- 腾讯 DNS ----</span></span><br><span class="line"><span class="string">https://doh.pub/dns-query</span></span><br><span class="line"><span class="string">tls://dot.pub</span></span><br><span class="line"><span class="comment"># Google DNS</span></span><br><span class="line"><span class="string">tls://8888.google</span></span><br><span class="line"><span class="string">tls://dns.google</span></span><br><span class="line"><span class="string">tls://dns.google.com</span></span><br><span class="line"><span class="string">https://dns.google/dns-query</span></span><br><span class="line"><span class="string">https://dns.google.com/dns-query</span></span><br><span class="line"><span class="string">https://8888.google/dns-query</span></span><br><span class="line"><span class="comment"># OpenDNS</span></span><br><span class="line"><span class="string">tls://dns.opendns.com</span></span><br><span class="line"><span class="string">https://doh.opendns.com/dns-query</span></span><br><span class="line"><span class="comment"># Quad9 DNS</span></span><br><span class="line"><span class="string">tls://dns11.quad9.net</span></span><br><span class="line"><span class="string">https://dns11.quad9.net/dns-query</span></span><br></pre></td></tr></table></figure><h3 id="后备-DNS-服务器"><a href="#后备-DNS-服务器" class="headerlink" title="后备 DNS 服务器"></a>后备 DNS 服务器</h3><p>当上游 DNS 服务器没有响应时使用的后备 DNS 服务器列表。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">114.114</span><span class="number">.114</span><span class="number">.114</span></span><br></pre></td></tr></table></figure><h3 id="Bootstrap-DNS-服务器"><a href="#Bootstrap-DNS-服务器" class="headerlink" title="Bootstrap DNS 服务器"></a>Bootstrap DNS 服务器</h3><p>解析上游 DNS 的地址。</p><h2 id="DNS-服务配置"><a href="#DNS-服务配置" class="headerlink" title="DNS 服务配置"></a>DNS 服务配置</h2><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128194257.png" alt="CleanShot 2024-01-28 at 19.42.52@2x"></p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128194305.png" alt="CleanShot 2024-01-28 at 19.43.02@2x"></p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128194318.png" alt="CleanShot 2024-01-28 at 19.43.11@2x"></p><h2 id="DNS-缓存设置"><a href="#DNS-缓存设置" class="headerlink" title="DNS 缓存设置"></a>DNS 缓存设置</h2><ul><li>缓存大小：134217728</li><li>覆盖最小 TTL 值：3600</li><li>覆盖最大 TTL 值：604800</li><li>乐观缓存：true</li></ul><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128194358.png" alt="CleanShot 2024-01-28 at 19.43.44@2x"></p><h2 id="对于-✈️-的-DNS-设置"><a href="#对于-✈️-的-DNS-设置" class="headerlink" title="对于 ✈️ 的 DNS 设置"></a>对于 ✈️ 的 DNS 设置</h2><p>这里我悬着把 AdGuard Home 放在 ✈️ 的上游。</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128192115.png" alt="CleanShot 2024-01-28 at 19.21.05@2x"></p><h2 id="特别鸣谢"><a href="#特别鸣谢" class="headerlink" title="特别鸣谢"></a>特别鸣谢</h2><ul><li><a href="https://www.timochan.cn/posts/jc/adguard_home_configuration_guide#%E5%85%AC%E7%BD%91%E5%B0%8F%E5%9E%8B%20DNS%20%E6%9C%8D%E5%8A%A1%E5%99%A8">AdGuard Home 中文指南</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>OpenWrt 基本配置</title>
      <link href="/2024/01/29/OpenWrt-%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/"/>
      <url>/2024/01/29/OpenWrt-%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="旁路由"><a href="#旁路由" class="headerlink" title="旁路由"></a>旁路由</h2><ol><li>来到「网络」➡️ 「接口」页面。</li></ol><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240127215143.png" alt="CleanShot 2024-01-27 at 21.51.25@2x" style="zoom:25%;" /><ol start="2"><li>修改 LAN 口配置。</li></ol><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240127215249.png" alt="CleanShot 2024-01-27 at 21.52.29@2x"></p><ol start="3"><li>将 iKuai 的 IP 地址填写到 IPv4 网关处。</li></ol><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128165727.png" alt="CleanShot 2024-01-28 at 16.57.20@2x"></p><ol start="4"><li>往下滑，DHCP 服务器勾选上「忽略此接口」。</li></ol><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240127215505.png" alt="CleanShot 2024-01-27 at 21.55.02@2x"></p><ol start="5"><li>完成后重启系统。</li></ol><h2 id="配置-PassWall"><a href="#配置-PassWall" class="headerlink" title="配置 PassWall"></a>配置 PassWall</h2><ol><li><p>添加订阅地址</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240127221402.png" alt="CleanShot 2024-01-27 at 22.13.35@2x"></p></li><li><p>开启自动更新</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240127221540.png" alt="CleanShot 2024-01-27 at 22.15.28@2x"></p></li><li><p>启用自动切换</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128174756.png" alt="CleanShot 2024-01-28 at 17.47.45@2x"></p></li></ol><h2 id="Docker-扩容"><a href="#Docker-扩容" class="headerlink" title="Docker 扩容"></a>Docker 扩容</h2><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128173225.png" alt="CleanShot 2024-01-28 at 17.32.07@2x"></p><ol><li><p>系统 ➡️ 磁盘管理 ➡️ 修改</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128173337.png" alt="CleanShot 2024-01-28 at 17.33.07@2x"></p></li><li><p>计算一下分区信息</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128173448.png" alt="CleanShot 2024-01-28 at 17.34.45@2x"></p><p>我这里准备分配 40G 给 Docker。</p><p>起始扇区：22028830</p><p>中止扇区：105910990</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128173753.png" alt="CleanShot 2024-01-28 at 17.37.47@2x"></p></li><li><p>格式化成 <code>EXT4</code></p></li><li><p>挂载</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128173909.png" alt="CleanShot 2024-01-28 at 17.38.45@2x"></p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128174132.png" alt="CleanShot 2024-01-28 at 17.41.28@2x"></p></li><li><p>重启</p></li></ol><h2 id="挂载-NAS"><a href="#挂载-NAS" class="headerlink" title="挂载 NAS"></a>挂载 NAS</h2><ol><li><p>网络存储 ➡️ 挂载 SMB 网络共享</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128184752.png" alt="CleanShot 2024-01-28 at 18.47.03@2x"></p></li><li><p>配置挂载文件夹</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128184940.png" alt="CleanShot 2024-01-28 at 18.49.09@2x"></p></li><li><p>开机自动挂载</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount -t cifs -o username=&#x27;OpenWrt&#x27;,password=&#x27;oCWbZWp49$iZe&amp;wr&#x27; //192.168.5.4/OpenWrt /mnt/ds418play</span><br></pre></td></tr></table></figure><h2 id="修改-favicon"><a href="#修改-favicon" class="headerlink" title="修改 favicon"></a>修改 favicon</h2><p><code>favicon.ico</code> 路径：<code>/www/luci-static/ifit/favicon.ico</code></p>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ESXi 安装 OpenWrt</title>
      <link href="/2024/01/29/ESXi-%E5%AE%89%E8%A3%85-OpenWrt/"/>
      <url>/2024/01/29/ESXi-%E5%AE%89%E8%A3%85-OpenWrt/</url>
      
        <content type="html"><![CDATA[<h2 id="下载-OpenWrt-镜像"><a href="#下载-OpenWrt-镜像" class="headerlink" title="下载 OpenWrt 镜像"></a>下载 OpenWrt 镜像</h2><p>这边我们选择 eSir 高大全的镜像，下载地址：<a href="https://drive.google.com/drive/folders/1PsS3c0P7a4A4KY8plQg4Fla8ZI-PGBb1">eSir 高大全</a></p><h2 id="Overlay-扩容"><a href="#Overlay-扩容" class="headerlink" title="Overlay 扩容"></a>Overlay 扩容</h2><h3 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h3><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240127231552.png" alt="CleanShot 2024-01-27 at 23.15.44@2x"></p><p>（图片来自网络）</p><p>Overlay 的大小在系统第一次启动时确定，会自动占满 Sda2 的剩余空间。所以我们要扩容 Overlay，主要就是扩容 Sda2 的分区大小。</p><p>思路：在 OpenWrt 第一次启动之前，把 Sda2 分区改成我们期望的大小。</p><p>因为是从头开始安装，所以我直接一步到，修改固件中镜像分区的大小。</p><p><em>注意：这边扩容的镜像格式是 <code>squashfs</code>。</em></p><h3 id="扩容步骤拆解"><a href="#扩容步骤拆解" class="headerlink" title="扩容步骤拆解"></a>扩容步骤拆解</h3><p>首先需要准备一个 Linux 环境。</p><ol><li><p>假设我要扩容 10GB 大小。</p><p>我的镜像名：openwrt_expansion_overlay.img</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/zero bs=1G count=10 &gt;&gt; openwrt_expansion_overlay.img</span><br></pre></td></tr></table></figure><p>执行结果</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128013829.png" alt="CleanShot 2024-01-28 at 01.38.23@2x"></p></li><li><p>查看分区情况</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parted openwrt_expansion_overlay.img</span><br></pre></td></tr></table></figure><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128000740.png" alt="CleanShot 2024-01-28 at 00.07.34@2x"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print</span><br></pre></td></tr></table></figure><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128013854.png" alt="CleanShot 2024-01-28 at 01.38.44@2x"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ok</span><br></pre></td></tr></table></figure><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128013917.png" alt="CleanShot 2024-01-28 at 01.39.12@2x"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fix</span><br></pre></td></tr></table></figure><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128013938.png" alt="CleanShot 2024-01-28 at 01.39.30@2x"></p></li><li><p>扩容分区 2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">resizepart 2 100%</span><br><span class="line">print</span><br></pre></td></tr></table></figure><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128014024.png" alt="CleanShot 2024-01-28 at 01.40.13@2x"></p></li></ol><h2 id="img-镜像转换成-vdmk"><a href="#img-镜像转换成-vdmk" class="headerlink" title="img 镜像转换成 vdmk"></a>img 镜像转换成 vdmk</h2><p>下载下来的镜像无法直接用在 OpenWrt 中，需要用镜像转换工具（StarWind V2V Converter）协助。</p><ol><li><p>从本地加载镜像</p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128162143.png" alt="image.png" style="zoom: 33%;" /><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128162140.png" alt="image.png" style="zoom:33%;" /></li><li><p>转换后的文件存放路径，选择存放在本地。</p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128162138.png" alt="image.png" style="zoom:33%;" /></li><li><p>选择转换的目标格式：VMDK</p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128162125.png" alt="image.png" style="zoom:33%;" /></li><li><p>选择预分配模式</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128162205.png" alt="image.png"></p></li><li><p>选择 VMDK 镜像格式为 ESXi image</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128162235.png" alt="image.png"></p></li><li><p>转换成功如图</p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128162403.png" alt="image.png" style="zoom:33%;" /></li><li><p>转换成功后会得到两个文件</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128162447.png" alt="CleanShot 2024-01-28 at 16.24.41@2x"></p></li></ol><h2 id="ESXi-新建虚拟机"><a href="#ESXi-新建虚拟机" class="headerlink" title="ESXi 新建虚拟机"></a>ESXi 新建虚拟机</h2><ol><li><p>创建新虚拟机</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240127223243.png" alt="CleanShot 2024-01-27 at 22.32.40@2x"></p></li><li><p>名称和客户机操作系统</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240127223342.png" alt="CleanShot 2024-01-27 at 22.33.28@2x"></p></li><li><p>选择存储</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240127225040.png" alt="CleanShot 2024-01-27 at 22.50.31@2x"></p></li><li><p>自定义设置</p><ul><li><p>CPU：4，其余不动</p></li><li><p>内存：2GB</p><p>记得勾选预留所有客户机内存（全部锁定）</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128162726.png" alt="CleanShot 2024-01-28 at 16.27.18@2x"></p></li><li><p>硬盘、CD&#x2F;DVD 驱动器、USB 控制器：删除</p></li><li><p>SCSI 控制器、网络适配器、显卡：不变</p></li></ul><p>总览图如下：</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128162708.png" alt="CleanShot 2024-01-28 at 16.27.03@2x"></p><p>引导选项选择：BIOS</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240127230005.png" alt="CleanShot 2024-01-27 at 22.59.40@2x"></p></li><li><p>创建完成</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240127230114.png" alt="CleanShot 2024-01-27 at 23.01.06@2x"></p></li></ol><h2 id="硬盘设置"><a href="#硬盘设置" class="headerlink" title="硬盘设置"></a>硬盘设置</h2><ol><li><p>打开数据存储浏览器，会发现有个 OpenWrt 的文件夹</p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128131012.png" alt="CleanShot 2024-01-28 at 13.10.08@2x" style="zoom:33%;" /><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128131030.png" alt="CleanShot 2024-01-28 at 13.10.17@2x"></p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128151907.png" alt="CleanShot 2024-01-28 at 15.18.37@2x"></p></li><li><p>上传对应的两个 vdmk 文件</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128131153.png" alt="CleanShot 2024-01-28 at 13.11.19@2x"></p></li><li><p>打开 ESXi 的 SSH 功能</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128151714.png" alt="CleanShot 2024-01-28 at 15.16.43@2x"></p></li><li><p>找一个你喜欢的工具 SSH 到 ESXi</p></li><li><p>进入 OpenWrt 文件夹</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /vmfs/volumes/datastore1/OpenWrt</span><br></pre></td></tr></table></figure><p><code>datastore1</code> 和 <code>OpenWrt</code> 以实际路径为准。</p><p>执行 <code>ls</code> 命令应该能看到刚刚上传的 vdmk 文件。</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128164841.png" alt="CleanShot 2024-01-28 at 16.48.30@2x"></p></li><li><p>修改磁盘大小，这里我以修改成 100G 为例。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vmkfstools -X 100G openwrt_expansion_overlay.vmdk</span><br></pre></td></tr></table></figure><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128164959.png" alt="CleanShot 2024-01-28 at 16.49.55@2x"></p></li><li><p>修改完后，编辑 OpenWrt 虚拟机，选择添加硬盘，把我们刚刚修改好的 vmdk 添加到虚拟机中。</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128165029.png" alt="CleanShot 2024-01-28 at 16.50.12@2x"></p><p>选择现有硬盘。</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128165050.png" alt="CleanShot 2024-01-28 at 16.50.46@2x"></p></li></ol><h2 id="基本设置"><a href="#基本设置" class="headerlink" title="基本设置"></a>基本设置</h2><ol><li><p>启动 OpenWrt</p></li><li><p>修改 IP 地址</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/config/network</span><br></pre></td></tr></table></figure><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128165324.png" alt="CleanShot 2024-01-28 at 16.53.11@2x" style="zoom:25%;" /><p>我这里改成 <code>192.168.5.2</code>。</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20240128165401.png" alt="CleanShot 2024-01-28 at 16.53.48@2x"></p></li><li><p>重启</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>让 Alfred 自带的书签搜索支持拼音功能</title>
      <link href="/2023/08/13/%E8%AE%A9-Alfred-%E8%87%AA%E5%B8%A6%E7%9A%84%E4%B9%A6%E7%AD%BE%E6%90%9C%E7%B4%A2%E6%94%AF%E6%8C%81%E6%8B%BC%E9%9F%B3%E5%8A%9F%E8%83%BD/"/>
      <url>/2023/08/13/%E8%AE%A9-Alfred-%E8%87%AA%E5%B8%A6%E7%9A%84%E4%B9%A6%E7%AD%BE%E6%90%9C%E7%B4%A2%E6%94%AF%E6%8C%81%E6%8B%BC%E9%9F%B3%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<p>让 Alfred 自带的书签搜索支持拼音功能</p><p>这是我的一个书签。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;date_added&quot;</span><span class="punctuation">:</span> <span class="string">&quot;13298050222711550&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;date_last_used&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;guid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;820a51f4-8ab1-49df-bc70-0cd29382eeb&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;885&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Downie - 视频下载&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;url&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://software.charliemonroe.net/downie/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>搜索”视频下载“可以搜出来，但是搜索 “shipinxiazai” 搜不出来。</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20230812214758.png" alt="image-20230812214758164"></p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20230812214842.png" alt="image-20230812214842456"></p><p>但是如果修改 <code>Bookmarks</code> 如下图所示。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;date_added&quot;</span><span class="punctuation">:</span> <span class="string">&quot;13298050222711550&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;date_last_used&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;guid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;820a51f4-8ab1-49df-bc70-0cd29382eeb&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;885&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Downie - 视频下载\rshipinxiazai&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;url&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://software.charliemonroe.net/downie/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>那么又可以被拼音搜出来，并且不会把拼音内容显示在 Alfred 上。</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20230812215118.png" alt="image-20230812215118069"></p><p>可以用 Python 对所有书签做这样的批处理，但是只要 Chrome 更新了 <code>Bookmarks</code> 文件，就会覆盖掉我们 DIY 的内容。这要怎么解决呢？</p><ul><li>定时任务？<ul><li>有延迟</li><li>太频繁又没必要</li></ul></li><li>监听 <code>Bookmarks</code> 的修改？ <ul><li>fswatch 也许可行</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MacOS sed -i 命令报错</title>
      <link href="/2023/08/04/MacOS-sed-i-%E5%91%BD%E4%BB%A4%E6%8A%A5%E9%94%99/"/>
      <url>/2023/08/04/MacOS-sed-i-%E5%91%BD%E4%BB%A4%E6%8A%A5%E9%94%99/</url>
      
        <content type="html"><![CDATA[<p>今天在写 Shell 脚本，<code>sed -i</code>命令频频报错</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed: 1: <span class="string">&quot;file.txt&quot;</span>: invalid <span class="built_in">command</span> code I</span><br></pre></td></tr></table></figure><p>原因是因为 Mac 不允许你直接在原文件上修改，修改之前必须要备份。</p><p>原命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;1d&#x27;</span> <span class="string">&quot;<span class="variable">$&#123;file&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><p>带备份的修改命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;.bak&#x27;</span> <span class="string">&#x27;1d&#x27;</span> <span class="string">&quot;<span class="variable">$&#123;file&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><p>但如果你实在不想备份，只要要让修改之后的文件和备份文件同名，就可以把原文件覆盖掉了，命令如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;&#x27;</span> <span class="string">&#x27;1d&#x27;</span> <span class="string">&quot;<span class="variable">$&#123;file&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>prompt engineering</title>
      <link href="/2023/08/02/prompt-engineering/"/>
      <url>/2023/08/02/prompt-engineering/</url>
      
        <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>Base LLM 只能文字接龙，而经过 Fine-tune on instructions 的 LLM 则可以根据指令回答问题</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20230802223319.png" alt="image-20230802223319254"></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>LangChain 学习</title>
      <link href="/2023/07/15/LangChain-%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/07/15/LangChain-%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>现在我们可以开始构建语言模型应用程序了。LangChain 提供了许多可用于构建语言模型应用程序的模块。模块可以在简单的应用程序中作为独立模块使用，并且可以组合用于更复杂的用例。</p><h1 id="Modules-模块"><a href="#Modules-模块" class="headerlink" title="Modules 模块"></a>Modules 模块</h1><h2 id="Model-I-O"><a href="#Model-I-O" class="headerlink" title="Model I&#x2F;O"></a>Model I&#x2F;O</h2><ul><li><a href="https://langchain-langchain.vercel.app/docs/modules/model_io/prompts/">Prompts</a>: 模板化、动态选择和管理模型输入</li><li><a href="https://langchain-langchain.vercel.app/docs/modules/model_io/models/">Language models</a>: 通过通用接口调用语言模型</li><li><a href="https://langchain-langchain.vercel.app/docs/modules/model_io/output_parsers/">Output parsers</a>: 从模型输出中提取信息</li></ul><h3 id="prompts"><a href="#prompts" class="headerlink" title="prompts"></a>prompts</h3><p>指模型的输入。此输入通常由多个组件构成。LangChain 提供了多个类和函数，使构造和使用提示变得容易。</p><h4 id="Prompt-templates-参数化模型输入"><a href="#Prompt-templates-参数化模型输入" class="headerlink" title="Prompt templates: 参数化模型输入"></a><a href="https://langchain-langchain.vercel.app/docs/modules/model_io/prompts/prompt_templates/">Prompt templates</a>: 参数化模型输入</h4><ul><li><p>Connecting to a Feature Store </p><p>特征存储是传统机器学习的一个概念，它确保输入模型的数据是最新的和相关的。</p><p>在考虑将 LLM 应用程序投入生产时，这个概念非常相关。为了个性化 LLM 应用程序，您可能希望将 LLM 与特定用户的最新信息结合起来。特征存储是保持数据新鲜的好方法，而 LangChain 提供了一种将数据与 LLM 结合起来的简单方法。</p></li><li><p>Custom prompt template 自定义提示模板</p></li><li><p>Few-shot prompt templates</p></li><li><p>Few shot examples for chat models </p></li><li><p>Format template output 格式化模板输出</p></li><li><p>Template Formats 模板格式</p></li><li><p>Types of <code>MessagePromptTemplate</code> <code>MessagePromptTemplate</code></p></li><li><p>Partial prompt templates 部分提示模板</p></li><li><p>Composition 将多个提示组合在一起</p></li><li><p>Serialization 序列化</p><p>通常最好将提示存储为文件而不是 python 代码。这可以使共享、存储和版本提示变得容易。本笔记本介绍了如何在 LangChain 中做到这一点，介绍了所有不同类型的提示和不同的序列化选项。</p></li></ul><h4 id="Example-selectors-示例选择器："><a href="#Example-selectors-示例选择器：" class="headerlink" title="Example selectors: 示例选择器："></a><a href="https://langchain-langchain.vercel.app/docs/modules/model_io/prompts/example_selectors/">Example selectors</a>: 示例选择器：</h4><ul><li><p>Custom example selector 自定义示例选择器</p><p>动态选择要包含在提示中的示例</p></li><li><p>Select by length 按长度选择</p></li><li><p>Select by maximal marginal relevance (MMR) 按最大边际相关性（MMR）选择</p></li><li><p>Select by n-gram overlap 按 n-gram 重叠选择</p></li><li><p>Select by similarity 按相似性选择</p></li></ul><h3 id="Language-models"><a href="#Language-models" class="headerlink" title="Language models"></a>Language models</h3><h4 id="LLMs"><a href="#LLMs" class="headerlink" title="LLMs"></a>LLMs</h4><p>大型语言模型（LLM）是 LangChain 的核心组件。LangChain 不为自己的 LLM 服务，而是提供与许多不同 LLM 交互的标准接口。</p><p>有很多 LLM 提供者（OpenAI、Cohere、Huking Face 等）- <code>LLM</code> 类旨在为所有这些提供标准接口。</p><ul><li><p>how to</p><ul><li><p>async api</p><p>LangChain 通过利用 asyncio 库为 LLM 提供异步支持。</p></li><li><p>&#x3D;&#x3D;custom LLM&#x3D;&#x3D;</p><p>本笔记本介绍了如何创建自定义 LLM 包装器，以防您想使用自己的 LLM 或与 LangChain 支持的包装器不同的包装器。</p><p>自定义 LLM 只需要实现一件事：</p><p>一个 <code>_call</code> 方法，它接受一个字符串、一些可选的停用词并返回一个字符串</p><p>它可以实现第二个可选的东西：</p><p> 一个 <code>_identifying_params</code> 属性，用于帮助打印此类。应该返回一个字典。</p></li><li><p>fake LLM</p><p>我们公开了一个可以用于测试的假 LLM 类。这允许您模拟对 LLM 的调用并模拟如果 LLM 以某种方式响应会发生什么。</p></li><li><p>human input LLM</p><p>与假的 LLM 类似，LangChain 提供了一个伪 LLM 类，可用于测试、调试或教育目的。这允许您模拟对 LLM 的调用，并模拟人类在收到提示时将如何响应</p></li><li><p>caching</p><p>LangChain 为 LLM 提供了可选的缓存层。这很有用有两个原因：</p><ul><li><p>如果您经常多次请求相同的完成，它可以通过减少对 LLM 提供者的 API 调用次数来节省您的资金。</p></li><li><p>它可以通过减少对 LLM 提供者的 API 调用次数来加快您的应用程序。</p></li></ul></li><li><p>&#x3D;&#x3D;Streaming 生成式响应&#x3D;&#x3D;</p><p>一些 LLM 提供流式响应。这意味着您可以在响应可用时立即开始处理，而不是等待返回整个响应。如果您想在生成响应时向用户显示响应，或者如果您想在生成响应时处理响应，这很有用。</p></li></ul></li><li><p>integrations</p><p>主要是介绍了一些 LangChain 集成好的模型</p></li></ul><h4 id="Chat-models"><a href="#Chat-models" class="headerlink" title="Chat models"></a>Chat models</h4><p>聊天模型是语言模型的变体。虽然聊天模型在后台使用语言模型，但它们公开的界面有点不同。它们没有公开 “文本输入，文本输出” 应用编程接口，而是公开了一个界面，其中 “聊天消息” 是输入和输出。</p><h3 id="Output-parsers-输出解析器"><a href="#Output-parsers-输出解析器" class="headerlink" title="Output parsers 输出解析器"></a>Output parsers 输出解析器</h3><p>语言模型输出文本。但是很多时候，您可能希望获得更结构化的信息，而不仅仅是文本返回。这就是输出解析器的用武之地。</p><h4 id="List-parser-列表解析器"><a href="#List-parser-列表解析器" class="headerlink" title="List parser 列表解析器"></a>List parser 列表解析器</h4><p>当您想要返回逗号分隔项的列表时，可以使用此输出解析器。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&#x27;Vanilla&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;Chocolate&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;Strawberry&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;Mint Chocolate Chip&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;Cookies and Cream&#x27;</span>]</span><br></pre></td></tr></table></figure><h4 id="Datetime-parser-日期时间解析器"><a href="#Datetime-parser-日期时间解析器" class="headerlink" title="Datetime parser 日期时间解析器"></a>Datetime parser 日期时间解析器</h4><h4 id="Enum-parser-枚举解析器"><a href="#Enum-parser-枚举解析器" class="headerlink" title="Enum parser 枚举解析器"></a>Enum parser 枚举解析器</h4><h4 id="Auto-fixing-parser-自动修复解析器"><a href="#Auto-fixing-parser-自动修复解析器" class="headerlink" title="Auto-fixing parser 自动修复解析器"></a>Auto-fixing parser 自动修复解析器</h4><p>这个输出解析器包装了另一个输出解析器，如果第一个解析器失败，它会调用另一个 LLM 来修复任何错误。</p><h4 id="Pydantic-JSON-parser-JSON-解析器"><a href="#Pydantic-JSON-parser-JSON-解析器" class="headerlink" title="Pydantic (JSON) parser JSON 解析器"></a>Pydantic (JSON) parser JSON 解析器</h4><p>此输出解析器允许用户指定任意 JSON 模式并查询符合该模式的 JSON 输出的 LLM。</p><h4 id="Retry-parser-重试解析器"><a href="#Retry-parser-重试解析器" class="headerlink" title="Retry parser 重试解析器"></a>Retry parser 重试解析器</h4><p>虽然在某些情况下，仅通过查看输出就可以修复任何解析错误，但在其他情况下则不能。这方面的一个例子是，当输出不仅格式不正确，而且部分完成时。考虑下面的例子。</p><h4 id="Structured-output-parser-结构化输出解析器"><a href="#Structured-output-parser-结构化输出解析器" class="headerlink" title="Structured output parser 结构化输出解析器"></a>Structured output parser 结构化输出解析器</h4><p>当您想要返回多个字段时，可以使用此输出解析器。虽然 Pydantic&#x2F;JSON 解析器更强大，但我们最初尝试了仅包含文本字段的数据结构。</p><h2 id="Data-connection-数据连接"><a href="#Data-connection-数据连接" class="headerlink" title="Data connection 数据连接"></a>Data connection 数据连接</h2><h3 id="Document-loaders-文档加载器"><a href="#Document-loaders-文档加载器" class="headerlink" title="Document loaders 文档加载器"></a>Document loaders 文档加载器</h3><p>使用文档加载器从源加载数据作为文档。文档是一段文本和相关元数据。例如，有用于加载简单 .txt 文件的文档加载器，用于加载任何网页的文本内容，甚至用于加载 YouTube 视频的转录文本的文档加载器。</p><h4 id="How-to"><a href="#How-to" class="headerlink" title="How-to"></a>How-to</h4><ul><li>CSV</li><li>文件目录</li><li>HTML</li><li>JSON</li><li>Markdown</li><li>PDF</li></ul><h4 id="集成"><a href="#集成" class="headerlink" title="集成"></a>集成</h4><p>可以从 Git、Wikipedia等加载数据</p><h3 id="Document-transformers-文档转换器"><a href="#Document-transformers-文档转换器" class="headerlink" title="Document transformers 文档转换器"></a>Document transformers 文档转换器</h3><p>加载文档后，您通常希望对其进行转换以更好地适应您的应用程序。最简单的例子是，您可能希望将长文档拆分为适合模型上下文窗口的较小块。LangChain 有许多内置的文档转换器，可以轻松拆分、组合、过滤和以其他方式操作文档。</p><h4 id="Text-splitters-文本切割器"><a href="#Text-splitters-文本切割器" class="headerlink" title="Text splitters 文本切割器"></a>Text splitters 文本切割器</h4><ul><li><p>Split by character 按字符拆分</p><p>这是最简单的方法。这基于字符（默认为 “\n\n”）进行拆分，并通过字符数测量块长度。</p></li><li><p>Split code 按代码语言拆分</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&#x27;cpp&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;go&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;java&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;js&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;php&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;proto&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;python&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;rst&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;ruby&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;rust&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;scala&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;swift&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;markdown&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;latex&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;html&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;sol&#x27;</span>,]</span><br></pre></td></tr></table></figure></li><li><p>MarkdownHeaderTextSplitter Markdown 标题文本拆分器</p><p>按 Markdown 的标题拆分</p></li><li><p>Recursively split by character 按字符递归拆分</p></li><li><p>Split by tokens 按代币拆分</p></li></ul><h3 id="Text-embedding-models-文本嵌入模型"><a href="#Text-embedding-models-文本嵌入模型" class="headerlink" title="Text embedding models 文本嵌入模型"></a>Text embedding models 文本嵌入模型</h3><h3 id="Vector-stores-向量存储"><a href="#Vector-stores-向量存储" class="headerlink" title="Vector stores 向量存储"></a>Vector stores 向量存储</h3><h3 id="Retrievers"><a href="#Retrievers" class="headerlink" title="Retrievers"></a>Retrievers</h3><p>检索器是给定非结构化查询返回文档的接口。它比向量存储更通用。检索器不需要能够存储文档，只需要返回（或检索）它。向量存储可用作检索器的主干，但也有其他类型的检索器。</p><h2 id="Chains"><a href="#Chains" class="headerlink" title="Chains"></a>Chains</h2><p>在简单的应用程序中，单独使用 LLM 是可以的，但更复杂的应用程序需要将 LLM 链接在一起 - 要么彼此链接，要么与其他组件链接。</p><p>LangChain 为这种“链接”应用程序提供了 Chain 接口。我们将 Chain 定义为一个非常通用的组件调用序列，其中可以包括其他链。</p><p>例如我有一个 LLM 和两个 prompt，我就可以构造两个 Chain，两个 Chain 分别加载一个 prompt，可以顺序执行，第一个 Chain 的输出作为第二个 Chain 的输入</p><h2 id="Memory"><a href="#Memory" class="headerlink" title="Memory"></a>Memory</h2><p>默认情况下，链和代理是无状态的，这意味着它们独立处理每个传入查询（如底层 LLM 和聊天模型本身）。在某些应用程序中，如聊天机器人，记住以前的交互是至关重要的，无论是短期还是长期的。内存类正是这样做的。</p><p>LangChain 提供两种形式的内存组件。首先，LangChain 提供了管理和操作先前聊天消息的辅助工具。这些工具被设计为模块化和有用的，无论它们如何被使用。其次，LangChain 提供了将这些工具轻松整合到链中的方法。</p><h2 id="Agent"><a href="#Agent" class="headerlink" title="Agent"></a>Agent</h2><p>有些应用程序需要根据用户输入对 LLMs 和其他工具进行灵活的调用链。代理接口为这些应用程序提供了灵活性。代理可以访问一套工具，并根据用户输入决定使用哪些工具。代理可以使用多个工具，并将一个工具的输出用作下一个工具的输入。</p><p>代理有两种主要类型：</p><ul><li>动作代理：在每个时间步骤上，使用所有先前动作的输出来决定下一个动作。</li><li>计划执行代理：预先决定完整的动作序列，然后执行所有动作而不更新计划。</li></ul><p>动作代理适用于小型任务，而计划执行代理适用于复杂或长时间运行的任务，需要维护长期目标和重点。通常最好的方法是将动作代理的动态性与计划执行代理的规划能力相结合，让计划执行代理使用动作代理来执行计划。</p><p>有关代理类型的完整列表，请参见代理类型。与代理相关的其他抽象包括：</p><ul><li>工具：代理可以执行的操作。您给代理提供的工具高度取决于您希望代理执行的任务。</li><li>工具包：围绕一组工具的包装器，可以一起用于特定的用例。例如，为了让代理与 SQL 数据库交互，它可能需要一个工具来执行查询，另一个工具来检查表。</li></ul><h2 id="Callbacks"><a href="#Callbacks" class="headerlink" title="Callbacks"></a>Callbacks</h2><p>LangChain 提供了一个回调函数系统，允许您钩入 LLM 应用程序的各个阶段。这对于记录日志、监控、流式传输和其他任务非常有用。</p><p>您可以通过使用 API 中可用的 callbacks 参数来订阅这些事件。这个参数是一个处理程序对象列表，这些对象应该实现下面更详细描述的一个或多个方法。</p><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><ul><li><a href="https://www.bilibili.com/video/BV14o4y1K7y3/?spm_id_from=333.337.search-card.all.click&vd_source=dab86e03da741f031f3c54a5e98eb2c3">13分钟解读LangChain（精译中字）</a></li><li><a href="https://www.bilibili.com/video/BV1vX4y127v4/?spm_id_from=333.788&vd_source=dab86e03da741f031f3c54a5e98eb2c3">LangChain 系列</a></li></ul><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20230716235110.png" alt="截屏2023-07-16 23.50.47"></p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20230716235247.png" alt="image-20230716235247409"></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Setting Up SSH Keys for GitHub</title>
      <link href="/2023/07/15/Setting-Up-SSH-Keys-for-GitHub/"/>
      <url>/2023/07/15/Setting-Up-SSH-Keys-for-GitHub/</url>
      
        <content type="html"><![CDATA[<h3 id="1-起因"><a href="#1-起因" class="headerlink" title="1. 起因"></a>1. 起因</h3><p>给自己的 github 改个名，顺便就给原来 Hexo 对应的仓库也改了个名。然后发现 <code>ub=&#39;hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy&#39;</code> 失败了，报错如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">INFO  Deploying: git</span><br><span class="line">INFO  Clearing .deploy_git folder...</span><br><span class="line">INFO  Copying files from public folder...</span><br><span class="line">INFO  Copying files from extend <span class="built_in">dirs</span>...</span><br><span class="line">[master 397fba4] Site updated: 2023-07-15 13:57:29</span><br><span class="line"> 173 files changed, 728 insertions(+), 559 deletions(-)</span><br><span class="line"> create mode 100644 2023/07/15/Setting-Up-SSH-Keys-for-GitHub/index.html</span><br><span class="line">/Users/ritsu/.ssh/config line 4: no argument after keyword <span class="string">&quot;k%u7h@j2s!wa&quot;</span></span><br><span class="line">/Users/ritsu/.ssh/config: terminating, 1 bad configuration options</span><br><span class="line">fatal: Could not <span class="built_in">read</span> from remote repository.</span><br><span class="line"></span><br><span class="line">Please make sure you have the correct access rights</span><br><span class="line">and the repository exists.</span><br><span class="line">FATAL &#123;</span><br><span class="line">  err: Error: Spawn failed</span><br><span class="line">      at ChildProcess.&lt;anonymous&gt; (/Users/ritsu/Study/Hexo/node_modules/hexo-util/lib/spawn.js:51:21)</span><br><span class="line">      at ChildProcess.emit (node:events:512:28)</span><br><span class="line">      at ChildProcess._handle.onexit (node:internal/child_process:293:12) &#123;</span><br><span class="line">    code: 128</span><br><span class="line">  &#125;</span><br><span class="line">&#125; Something<span class="string">&#x27;s wrong. Maybe you can find the solution here: %s https://hexo.io/docs/troubleshooting.html</span></span><br></pre></td></tr></table></figure><p>划重点：<code>Please make sure you have the correct access rights and the repository exists.</code></p><p>好像我的 <code>ssh</code> 配置出问题了，想来那就重新配一遍吧，顺便记录下。</p><h3 id="2-配置过程"><a href="#2-配置过程" class="headerlink" title="2. 配置过程"></a>2. 配置过程</h3><h4 id="2-1-生成-SSH-密钥"><a href="#2-1-生成-SSH-密钥" class="headerlink" title="2.1 生成 SSH 密钥"></a>2.1 生成 SSH 密钥</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t ed25519 -C <span class="string">&quot;your_email@example.com&quot;</span></span><br></pre></td></tr></table></figure><p>**注意：**如果您使用的是不支持Ed25519算法的遗留系统，请使用：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; Enter a file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/Users/YOU/.ssh/id_ALGORITHM): [Press enter]</span><br><span class="line">&gt; Enter passphrase (empty <span class="keyword">for</span> no passphrase): [Type a passphrase]</span><br><span class="line">&gt; Enter same passphrase again: [Type passphrase again]å</span><br></pre></td></tr></table></figure><p>这时候在 <code>~/.ssh/</code> 下应该看到如下文件：</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20230715140759.png" alt="image-20230715140759430"></p><h4 id="2-2-将-SSH-密钥添加到-ssh-agent"><a href="#2-2-将-SSH-密钥添加到-ssh-agent" class="headerlink" title="2.2 将 SSH 密钥添加到 ssh-agent"></a>2.2 将 SSH 密钥添加到 ssh-agent</h4><ol><li><p>在后台启动 ssh-agent</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">eval</span> <span class="string">&quot;<span class="subst">$(ssh-agent -s)</span>&quot;</span></span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">Agent pid 51024</span></span><br></pre></td></tr></table></figure></li><li><p>打开文件 <code>~/.ssh/config</code> ，然后修改文件以包含以下行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">  Hostname ssh.github.com</span><br><span class="line">  Port 443</span><br><span class="line">  User git</span><br><span class="line">  AddKeysToAgent yes</span><br><span class="line">  IdentityFile ~/.ssh/id_ed25519</span><br></pre></td></tr></table></figure></li><li><p>将 SSH 密钥添加到 ssh-agent</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-add ~/.ssh/id_ed25519</span><br></pre></td></tr></table></figure></li></ol><h4 id="2-3-将-SSH-公钥添加到-GitHub-上的帐户"><a href="#2-3-将-SSH-公钥添加到-GitHub-上的帐户" class="headerlink" title="2.3 将 SSH 公钥添加到 GitHub 上的帐户"></a>2.3 将 SSH 公钥添加到 GitHub 上的帐户</h4><ol><li><p>将 SSH 公钥复制到剪贴板</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pbcopy &lt; ~/.ssh/id_ed25519.pub</span><br></pre></td></tr></table></figure></li><li><p>在 GitHub 任何页面的右上角，点击头像，然后点击设置</p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20230715141700.png" alt="截屏2023-07-15 14.16.31" style="zoom: 25%;" /></li><li><p>打开左侧的 SSH and GPG keys</p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20230715141831.png" alt="截屏2023-07-15 14.17.16" style="zoom: 25%;" /></li><li><p>New SSH key</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20230715141847.png" alt="image-20230715141846805"></p><p>起个好听的名字，然后把第一步中复制的公钥粘贴进去</p></li></ol><h4 id="2-4-恭喜🎉，快来测试下吧"><a href="#2-4-恭喜🎉，快来测试下吧" class="headerlink" title="2.4 恭喜🎉，快来测试下吧"></a>2.4 恭喜🎉，快来测试下吧</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br><span class="line">&gt; Hi Kudoryafuka3! You<span class="string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure><h3 id="3-参考"><a href="#3-参考" class="headerlink" title="3. 参考"></a>3. 参考</h3><ul><li><a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent">https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent</a></li><li><a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account">https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>SDKMAN 入门</title>
      <link href="/2023/07/02/SDKMAN-%E5%85%A5%E9%97%A8/"/>
      <url>/2023/07/02/SDKMAN-%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<p>我只是拿它作为管理 JDK 版本的工具，其他玩法后续再探索吧</p><ul><li><p><code>sdk list java</code>：查看可安装的 JDK 版本</p></li><li><p><code>sdk install java &lt;version&gt;</code>：安装对应版本的 JDK</p></li><li><p><code>sdk current java</code>：当前使用的 JDK 版本</p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20230702225440.png" alt="image-20230702225440170" style="zoom:67%;" /></li><li><p><code>sdk home java &lt;version&gt;</code>：JDK 路径</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20230702225550.png" alt="image-20230702225550286"></p></li><li><p><code>sdk use java &lt;version&gt;</code>：切换 JDK 版本</p></li><li><p>可能会担心这样安装的 JDK，如何确认是 ARM 还是 x86，我们可以运行这样一条命令</p><p><code>file $(which javac)</code></p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20230702230230.png" alt="image-20230702230230396" style="zoom:150%;" /></li><li><p>Tips：善用 Tab 补全</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>关于一次 zsh: command not found: mysql 体验</title>
      <link href="/2023/07/02/%E5%85%B3%E4%BA%8E%E4%B8%80%E6%AC%A1-zsh-command-not-found-mysql-%E4%BD%93%E9%AA%8C/"/>
      <url>/2023/07/02/%E5%85%B3%E4%BA%8E%E4%B8%80%E6%AC%A1-zsh-command-not-found-mysql-%E4%BD%93%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ brew list | grep mysql</span><br><span class="line">mysql@5.7</span><br></pre></td></tr></table></figure><p>用 homebrew 安装了 <a href="mailto:&#x6d;&#121;&#115;&#113;&#108;&#64;&#53;&#x2e;&#x37;">mysql@5.7</a></p><p>但是运行时缺报错 “zsh: command not found: mysql”</p><p>应该是环境变量没给上，去 Google 大家给的环境变量路径我用了还是失败</p><p>这时候就请出 GPT 老师了</p><ol><li><p>打开终端应用程序（Terminal）。</p></li><li><p>运行以下命令来查找 MySQL 可执行文件的路径：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew --prefix mysql@5.7</span><br></pre></td></tr></table></figure><p>这将返回 MySQL 5.7 的安装路径，类似于 <code>/usr/local/opt/mysql@5.7</code>。</p></li><li><p>打开 <code>~/.zshrc</code> 或 <code>~/.bash_profile</code> 文件（取决于您使用的终端配置文件），使用文本编辑器进行编辑。例如，使用 nano 编辑器打开 <code>~/.zshrc</code> 文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano ~/.zshrc</span><br></pre></td></tr></table></figure></li><li><p>在文件的末尾添加以下行（将 <code>&lt;mysql_path&gt;</code> 替换为第 2 步中返回的路径）：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;&lt;mysql_path&gt;/bin:<span class="variable">$PATH</span>&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>保存文件并退出编辑器。</p></li><li><p>在终端中执行以下命令使更改生效：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><p>或者，如果您使用的是 <code>~/.bash_profile</code> 文件，执行：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis 入门</title>
      <link href="/2023/07/02/MyBatis-%E5%85%A5%E9%97%A8/"/>
      <url>/2023/07/02/MyBatis-%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<ul><li>MyBatis：持久层框架，简化 JDBC 开发<ul><li>JDBC 缺点<ul><li>硬编码<ul><li>注册驱动 </li><li>SQL 语句</li></ul></li><li>操作繁琐<ul><li>手动设置参数</li><li>手动封装结果集</li></ul></li></ul></li></ul></li><li>MyBatis 免除了 JDBC 代码、配置、设置结果集等操作</li><li></li></ul>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>记录一次 brew update 失败</title>
      <link href="/2023/06/19/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1-brew-update-%E5%A4%B1%E8%B4%A5/"/>
      <url>/2023/06/19/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1-brew-update-%E5%A4%B1%E8%B4%A5/</url>
      
        <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">brew update</span><br><span class="line">fetch-pack: unexpected disconnect while reading sideband packet</span><br><span class="line">fatal: protocol error: bad pack header</span><br></pre></td></tr></table></figure><p>一开始以为是 DNS 问题，修改运营商默认 DNS 后无果</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew doctor</span><br></pre></td></tr></table></figure><p>也一切正常</p><p>然后一顿 Google，发现这篇文章：<a href="https://zhuanlan.zhihu.com/p/103478437">一次 homebrew 更新失败问题</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="string">&quot;<span class="subst">$(brew --repo)</span>&quot;</span></span><br><span class="line">git remote -v</span><br><span class="line">git pull origin master</span><br></pre></td></tr></table></figure><p>这里 <code>git pull</code> 可以成功，然后我就继续 <code>brew update</code> 结果还是失败</p><p>这时我重新运行了 <code>brew doctor</code>，和上次不一样了，这次结果如下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Please note that these warnings are just used to <span class="built_in">help</span> the Homebrew maintainers</span><br><span class="line">with debugging <span class="keyword">if</span> you file an issue. If everything you use Homebrew <span class="keyword">for</span> is</span><br><span class="line">working fine: please don<span class="string">&#x27;t worry or file an issue; just ignore this. Thanks!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Warning: You have an unnecessary local Cask tap.</span></span><br><span class="line"><span class="string">This can cause problems installing up-to-date casks.</span></span><br><span class="line"><span class="string">Please remove it by running:</span></span><br><span class="line"><span class="string">  brew untap homebrew/cask</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Warning: You have an unnecessary local Core tap!</span></span><br><span class="line"><span class="string">This can cause problems installing up-to-date formulae.</span></span><br><span class="line"><span class="string">Please remove it by running:</span></span><br><span class="line"><span class="string"> brew untap homebrew/core</span></span><br></pre></td></tr></table></figure><p>我就按照上述提示跑了两个命令，结果再 <code>brew update</code> 就没问题</p><p>总之记录下</p>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>跟着 labuladong 学算法</title>
      <link href="/2023/05/07/%E8%B7%9F%E7%9D%80-labuladong-%E5%AD%A6%E7%AE%97%E6%B3%95/"/>
      <url>/2023/05/07/%E8%B7%9F%E7%9D%80-labuladong-%E5%AD%A6%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>致谢：<a href="https://labuladong.github.io/algo/">https://labuladong.github.io/algo/</a></p><ul><li>成体系的知识结构</li><li>先大方向，再小细节</li></ul><h2 id="核心框架汇总"><a href="#核心框架汇总" class="headerlink" title="核心框架汇总"></a>核心框架汇总</h2><h2 id="学习算法和刷题的框架思维"><a href="#学习算法和刷题的框架思维" class="headerlink" title="学习算法和刷题的框架思维"></a>学习算法和刷题的框架思维</h2><p> 核心：数据结构的存储方式只有两种：数组（顺序存储），链表（链式存储）</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>在 IDEA 中隐藏 out 文件夹</title>
      <link href="/2023/04/09/%E5%9C%A8-IDEA-%E4%B8%AD%E9%9A%90%E8%97%8F-out-%E6%96%87%E4%BB%B6%E5%A4%B9/"/>
      <url>/2023/04/09/%E5%9C%A8-IDEA-%E4%B8%AD%E9%9A%90%E8%97%8F-out-%E6%96%87%E4%BB%B6%E5%A4%B9/</url>
      
        <content type="html"><![CDATA[<p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20230409155211.png" alt="758551681022702_.pic_副本"></p>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>831. 隐藏个人信息</title>
      <link href="/2023/04/01/831-%E9%9A%90%E8%97%8F%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF/"/>
      <url>/2023/04/01/831-%E9%9A%90%E8%97%8F%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF/</url>
      
        <content type="html"><![CDATA[<p><a href="https://leetcode.cn/problems/masking-personal-information/">831. 隐藏个人信息</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Locale;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">FIVE_STARS</span> <span class="operator">=</span> <span class="string">&quot;*****&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">THREE_STARS</span> <span class="operator">=</span> <span class="string">&quot;***&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">HYPHEN</span> <span class="operator">=</span> <span class="string">&quot;-&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">maskPII</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (s.contains(<span class="string">&quot;@&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> processEmail(s);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> processPhoneNumber(s);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">processPhoneNumber</span><span class="params">(String phoneNumber)</span> &#123;</span><br><span class="line">        <span class="type">char</span>[] chars = phoneNumber.toCharArray();</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">stringBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 去掉所有的非数字字符</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span> ch : chars) &#123;</span><br><span class="line">            <span class="keyword">if</span> (Character.isDigit(ch)) &#123;</span><br><span class="line">                stringBuilder.append(ch);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取后 4 位手机号</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">last4Number</span> <span class="operator">=</span> stringBuilder.substring(stringBuilder.length() - <span class="number">4</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> stringBuilder.length();</span><br><span class="line">        <span class="keyword">switch</span> (len) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;***-***-&quot;</span> + last4Number;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;+*-***-***-&quot;</span> + last4Number;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;+**-***-***-&quot;</span> + last4Number;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">13</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;+***-***-***-&quot;</span> + last4Number;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">processEmail</span><span class="params">(String email)</span> &#123;</span><br><span class="line">        <span class="comment">// email 转小写</span></span><br><span class="line">        email = email.toLowerCase(Locale.ENGLISH);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取 @ 前面的字符串</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">substring</span> <span class="operator">=</span> email.substring(<span class="number">0</span>, email.indexOf(<span class="string">&quot;@&quot;</span>));</span><br><span class="line">        <span class="type">char</span> <span class="variable">firstChar</span> <span class="operator">=</span> substring.charAt(<span class="number">0</span>);</span><br><span class="line">        <span class="type">char</span> <span class="variable">lastChar</span> <span class="operator">=</span> substring.charAt(substring.length() - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> firstChar + FIVE_STARS + lastChar + email.substring(email.indexOf(<span class="string">&quot;@&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ZSH alias</title>
      <link href="/2023/03/18/ZSH-alias/"/>
      <url>/2023/03/18/ZSH-alias/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Mac 移除无效的‘允许在后台’</title>
      <link href="/2023/03/11/Mac-%E7%A7%BB%E9%99%A4%E6%97%A0%E6%95%88%E7%9A%84%E2%80%98%E5%85%81%E8%AE%B8%E5%9C%A8%E5%90%8E%E5%8F%B0%E2%80%99/"/>
      <url>/2023/03/11/Mac-%E7%A7%BB%E9%99%A4%E6%97%A0%E6%95%88%E7%9A%84%E2%80%98%E5%85%81%E8%AE%B8%E5%9C%A8%E5%90%8E%E5%8F%B0%E2%80%99/</url>
      
        <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -- bash -c &#x27;echo &quot; - $(date) -&quot;; while IFS= read -r eachPlist; do echo &quot;-$eachPlist&quot;;  /usr/bin/defaults read &quot;$eachPlist&quot;; done &lt;&lt;&lt; &quot;$(/usr/bin/find /Library/LaunchDaemons /Library/LaunchAgents ~/Library/LaunchAgents /private/var/root/Library/LaunchAgents /private/var/root/Library/LaunchDaemons -name &quot;*.plist&quot;)&quot;; /usr/bin/defaults read com.apple.loginWindow LogoutHook; /usr/bin/defaults read com.apple.loginWindow LoginHook&#x27; &gt; ~/Desktop/launch.txt</span><br></pre></td></tr></table></figure><p>打开桌面的文件，查看其中的字段，找到需要删除的</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -f /Library/LaunchDaemons/com.west2online.ClashX.ProxyConfigHelper.plist /Library/LaunchDaemons/com.corecode.UninstallPKGDeleteHelper.plist </span><br><span class="line">...</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>在 IDEA 中隐藏 .idea、out、.iml 等</title>
      <link href="/2022/12/03/%E5%9C%A8-IDEA-%E4%B8%AD%E9%9A%90%E8%97%8F-idea%E3%80%81out%E3%80%81-iml-%E7%AD%89/"/>
      <url>/2022/12/03/%E5%9C%A8-IDEA-%E4%B8%AD%E9%9A%90%E8%97%8F-idea%E3%80%81out%E3%80%81-iml-%E7%AD%89/</url>
      
        <content type="html"><![CDATA[<ol><li><p>setting ➡️ editor ➡️ File Types</p></li><li><p>Ignored Files and Folders</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20221203221452.png" alt="image-20221203221452234"></p></li><li><p>add filename extension</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>消除 pom.xml 的警告</title>
      <link href="/2022/11/12/%E6%B6%88%E9%99%A4-pom-xml-%E7%9A%84%E8%AD%A6%E5%91%8A/"/>
      <url>/2022/11/12/%E6%B6%88%E9%99%A4-pom-xml-%E7%9A%84%E8%AD%A6%E5%91%8A/</url>
      
        <content type="html"><![CDATA[<p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20221112234247.png" alt="image-20221112234247152"></p><ol><li>Settings</li><li>Editor</li><li>Inspections</li><li>Security</li><li>Vulnerable declared dependency</li></ol>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>49. 字母异位词分组</title>
      <link href="/2022/11/10/49-%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D%E5%88%86%E7%BB%84/"/>
      <url>/2022/11/10/49-%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D%E5%88%86%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<p><a href="https://leetcode.cn/problems/group-anagrams/">49. 字母异位词分组</a></p><p>编码的想法</p><p>利用哈希表 key 的唯一性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;String&gt;&gt; <span class="title function_">groupAnagrams</span><span class="params">(String[] strs)</span> &#123;</span><br><span class="line">        HashMap&lt;String, List&lt;String&gt;&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(String str : strs) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">encode</span> <span class="operator">=</span> encode(str);</span><br><span class="line">            List&lt;String&gt; strList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">            List&lt;String&gt; value = hashMap.getOrDefault(encode, strList);</span><br><span class="line">            value.add(str);</span><br><span class="line">            hashMap.put(encode,value);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(hashMap.values());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">encode</span><span class="params">(String str)</span> &#123;</span><br><span class="line">        <span class="type">char</span>[] chars = <span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">26</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">char</span> ch : str.toCharArray()) &#123;</span><br><span class="line">            chars[ch - <span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>(chars);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>1678. 设计 Goal 解析器</title>
      <link href="/2022/11/06/1678-%E8%AE%BE%E8%AE%A1-Goal-%E8%A7%A3%E6%9E%90%E5%99%A8/"/>
      <url>/2022/11/06/1678-%E8%AE%BE%E8%AE%A1-Goal-%E8%A7%A3%E6%9E%90%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">interpret</span><span class="params">(String command)</span> &#123;</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        HashMap&lt;String, String&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        hashMap.put(<span class="string">&quot;G&quot;</span>,<span class="string">&quot;G&quot;</span>);</span><br><span class="line">        hashMap.put(<span class="string">&quot;()&quot;</span>,<span class="string">&quot;o&quot;</span>);</span><br><span class="line">        hashMap.put(<span class="string">&quot;(al)&quot;</span>,<span class="string">&quot;al&quot;</span>);</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">constructor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="type">char</span>[] chars = command.toCharArray();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">char</span> value : chars) &#123;</span><br><span class="line">            constructor.append(value);</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> hashMap.get(constructor.toString());</span><br><span class="line">            <span class="keyword">if</span>(str != <span class="literal">null</span>) &#123;</span><br><span class="line">                sb.append(str);</span><br><span class="line">                constructor.delete(<span class="number">0</span>,constructor.length());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>1668. 最大重复子字符串</title>
      <link href="/2022/11/03/1668-%E6%9C%80%E5%A4%A7%E9%87%8D%E5%A4%8D%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/2022/11/03/1668-%E6%9C%80%E5%A4%A7%E9%87%8D%E5%A4%8D%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">maxRepeating</span><span class="params">(String sequence, String word)</span> &#123;</span><br><span class="line">        <span class="type">char</span>[] sequenceChars = sequence.toCharArray();</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        sb.append(word);</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="comment">// 含有字串</span></span><br><span class="line">            <span class="keyword">if</span>(sequence.contains(sb.toString())) &#123;</span><br><span class="line">                <span class="comment">// 重复一遍 word</span></span><br><span class="line">                sb.append(word);</span><br><span class="line">                res++;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>关闭 IDEA 目录背景色</title>
      <link href="/2022/10/29/%E5%85%B3%E9%97%AD-IDEA-%E7%9B%AE%E5%BD%95%E8%83%8C%E6%99%AF%E8%89%B2/"/>
      <url>/2022/10/29/%E5%85%B3%E9%97%AD-IDEA-%E7%9B%AE%E5%BD%95%E8%83%8C%E6%99%AF%E8%89%B2/</url>
      
        <content type="html"><![CDATA[<p>IDEA target 和 test 的目录背景色挺烦人的</p><p><img src="/Users/ritsu/Library/Application%20Support/typora-user-images/image-20221029232455827.png" alt="image-20221029232455827"></p><p>关闭过程如下：</p><ol><li><p>Settings</p></li><li><p>搜索 <code>File Colors</code></p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20221029232529.png" alt="image-20221029232529414"></p><p>取消 <code>Enable file colors</code></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>915. 分割数组</title>
      <link href="/2022/10/25/915-%E5%88%86%E5%89%B2%E6%95%B0%E7%BB%84/"/>
      <url>/2022/10/25/915-%E5%88%86%E5%89%B2%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<p>核心思想就是：左边最大 &lt; 右边最小</p><ol><li>从左到右记录当前位置的最大值</li><li>从右到左记录当前位置的最小值</li><li>当第一次出现左边最大值小于右边最小值时，即出现分割点</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">partitionDisjoint</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] left = <span class="keyword">new</span> <span class="title class_">int</span>[nums.length];</span><br><span class="line">        <span class="type">int</span>[] right = <span class="keyword">new</span> <span class="title class_">int</span>[nums.length];</span><br><span class="line">        left[<span class="number">0</span>] = nums[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            left[i] = Math.max(left[i - <span class="number">1</span>], nums[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        right[nums.length - <span class="number">1</span>] = nums[nums.length - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> nums.length - <span class="number">2</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            right[i] = Math.min(right[i+<span class="number">1</span>],nums[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; left.length-<span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(left[i] &lt;= right[i+<span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="keyword">return</span> i+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>动态规划</title>
      <link href="/2022/10/22/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
      <url>/2022/10/22/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</url>
      
        <content type="html"><![CDATA[<p>动态规划：最优化问题，一般都是用来求最值的</p><p>求最值，核心是穷举？test</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>77. 组合</title>
      <link href="/2022/10/20/77-%E7%BB%84%E5%90%88/"/>
      <url>/2022/10/20/77-%E7%BB%84%E5%90%88/</url>
      
        <content type="html"><![CDATA[<p>回溯</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> List&lt;List&lt;Integer&gt;&gt; res;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Integer&gt;path;</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; <span class="title function_">combine</span><span class="params">(<span class="type">int</span> n, <span class="type">int</span> k)</span> &#123;</span><br><span class="line">        res = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        path = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (k &lt;= <span class="number">0</span> || k &gt; n) &#123;</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        &#125;</span><br><span class="line">        backtracking(n,k,<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">backtracking</span><span class="params">(<span class="type">int</span> n, <span class="type">int</span> k, <span class="type">int</span> start)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (path.size() == k) &#123;</span><br><span class="line">            <span class="comment">// 这里注意要 new 一个新的用于添加</span></span><br><span class="line">            List&lt;Integer&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(path);</span><br><span class="line">            res.add(list);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> start; i &lt;= n; i++) &#123;</span><br><span class="line">            path.add(i);</span><br><span class="line">            backtracking(n,k,i+<span class="number">1</span>);</span><br><span class="line">            path.remove(path.size() - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>回溯</title>
      <link href="/2022/10/19/%E5%9B%9E%E6%BA%AF/"/>
      <url>/2022/10/19/%E5%9B%9E%E6%BA%AF/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>459. 重复的子字符串</title>
      <link href="/2022/10/19/459-%E9%87%8D%E5%A4%8D%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/2022/10/19/459-%E9%87%8D%E5%A4%8D%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<p>简单模拟，利用 HashSet 不重复 key 特性，当字符串长度能被 i 整除时，说明该字符串能被分成 i 份，只要保证每份一样，就表示该字符串能用同一个字串表示</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">repeatedSubstringPattern</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span>; i &lt;= s.length(); i++) &#123;</span><br><span class="line">            HashSet&lt;String&gt; hashSet = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">            <span class="type">int</span> <span class="variable">start</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> s.length() / i;</span><br><span class="line">            <span class="keyword">if</span> (s.length() % i == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; i; j++) &#123;</span><br><span class="line">                    hashSet.add(s.substring(start,start+len));</span><br><span class="line">                    start += len;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (hashSet.size() == <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>1700. 无法吃午餐的学生数量</title>
      <link href="/2022/10/19/1700-%E6%97%A0%E6%B3%95%E5%90%83%E5%8D%88%E9%A4%90%E7%9A%84%E5%AD%A6%E7%94%9F%E6%95%B0%E9%87%8F/"/>
      <url>/2022/10/19/1700-%E6%97%A0%E6%B3%95%E5%90%83%E5%8D%88%E9%A4%90%E7%9A%84%E5%AD%A6%E7%94%9F%E6%95%B0%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<p><a href="https://leetcode.cn/problems/number-of-students-unable-to-eat-lunch/">1700. 无法吃午餐的学生数量</a></p><p>根据题意模拟</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">countStudents</span><span class="params">(<span class="type">int</span>[] students, <span class="type">int</span>[] sandwiches)</span> &#123;</span><br><span class="line">        ArrayList&lt;Integer&gt; arrayList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> value : students) &#123;</span><br><span class="line">            arrayList.add(value);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">start</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">while</span>(start &lt; sandwiches.length) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> arrayList.size();</span><br><span class="line">            <span class="keyword">while</span>(len-- &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (arrayList.get(<span class="number">0</span>) == sandwiches[start]) &#123;</span><br><span class="line">                    arrayList.remove(<span class="number">0</span>);</span><br><span class="line">                    start++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    arrayList.add(arrayList.get(<span class="number">0</span>));</span><br><span class="line">                    arrayList.remove(<span class="number">0</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (len == -<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arrayList.size();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一共就两种面包，把学生分成两类，用一个长度为 2 的数组存储</p><p>遍历面包，知道面包栈顶对应的学生数量为 0 时，停止</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">countStudents</span><span class="params">(<span class="type">int</span>[] students, <span class="type">int</span>[] sandwiches)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] cnt = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> value : students) &#123;</span><br><span class="line">            cnt[value]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> value : sandwiches) &#123;</span><br><span class="line">            cnt[value]--;</span><br><span class="line">            <span class="comment">// 当其中有一方学生数量为 0 时</span></span><br><span class="line">            <span class="comment">// 停止用餐</span></span><br><span class="line">            <span class="comment">// 返回另一方学生数量即可</span></span><br><span class="line">            <span class="keyword">if</span>(cnt[value] == -<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> cnt[<span class="number">1</span>-value];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>541. 反转字符串 II</title>
      <link href="/2022/10/18/541-%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2-II/"/>
      <url>/2022/10/18/541-%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2-II/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">reverseStr</span><span class="params">(String s, <span class="type">int</span> k)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (s.length() == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> s;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">cnt</span> <span class="operator">=</span> s.length() / (<span class="number">2</span> * k);</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">stringBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="type">int</span> <span class="variable">start</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">char</span>[] chars = s.toCharArray();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; cnt; i++) &#123;</span><br><span class="line">            <span class="type">char</span>[] subChars = Arrays.copyOfRange(chars,start,start + k);</span><br><span class="line">            stringBuilder.append(reverseSubStr(subChars));</span><br><span class="line">            stringBuilder.append(s, start+k, start+<span class="number">2</span>*k);</span><br><span class="line">            start+=<span class="number">2</span>*k;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">leftChars</span> <span class="operator">=</span> s.length() - start;</span><br><span class="line">        <span class="type">char</span>[] subChars;</span><br><span class="line">        <span class="keyword">if</span>(leftChars &lt; k &amp;&amp; leftChars &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            subChars = Arrays.copyOfRange(chars, start, s.length());</span><br><span class="line">            stringBuilder.append(reverseSubStr(subChars));</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (leftChars &gt;= k &amp;&amp; leftChars &lt; <span class="number">2</span> * k)&#123;</span><br><span class="line">            subChars = Arrays.copyOfRange(chars, start, start + k);</span><br><span class="line">            stringBuilder.append(reverseSubStr(subChars));</span><br><span class="line">            stringBuilder.append(s, start+k, s.length());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> stringBuilder.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">reverseSubStr</span><span class="params">(<span class="type">char</span>[] chars)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> chars.length;</span><br><span class="line">        <span class="type">char</span> temp;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; len / <span class="number">2</span>; i++) &#123;</span><br><span class="line">            temp = chars[i];</span><br><span class="line">            chars[i] = chars[len - <span class="number">1</span> - i];</span><br><span class="line">            chars[len - <span class="number">1</span> - i] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> String.valueOf(chars);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>904. 水果成篮</title>
      <link href="/2022/10/17/904-%E6%B0%B4%E6%9E%9C%E6%88%90%E7%AF%AE/"/>
      <url>/2022/10/17/904-%E6%B0%B4%E6%9E%9C%E6%88%90%E7%AF%AE/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">totalFruit</span><span class="params">(<span class="type">int</span>[] fruits)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 用哈希表来表示水果篮子，哈希表最长只能是 2</span></span><br><span class="line">        HashMap&lt;Integer, Integer&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">// 滑动窗口的头尾</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (; right &lt; fruits.length; right++) &#123;</span><br><span class="line">            <span class="comment">// defaultValue 是 0，这里别弄错了，注意后面的 +1</span></span><br><span class="line">            hashMap.put(fruits[right], hashMap.getOrDefault(fruits[right], <span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">            <span class="comment">// 注意是 while</span></span><br><span class="line">            <span class="keyword">while</span> (hashMap.size() &gt; <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="comment">// 这边要一个个的减，比如 1 1 2 1 1 3，左指针要把 2 去掉，而不是把 fruits[left] 全部清空</span></span><br><span class="line">                hashMap.put(fruits[left], hashMap.get(fruits[left]) - <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">if</span> (hashMap.get(fruits[left]) == <span class="number">0</span>) &#123;</span><br><span class="line">                    hashMap.remove(fruits[left]);</span><br><span class="line">                &#125;</span><br><span class="line">                left++;</span><br><span class="line">            &#125;</span><br><span class="line">            res = Math.max(res, right - left + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>886. 可能的二分法</title>
      <link href="/2022/10/16/886-%E5%8F%AF%E8%83%BD%E7%9A%84%E4%BA%8C%E5%88%86%E6%B3%95/"/>
      <url>/2022/10/16/886-%E5%8F%AF%E8%83%BD%E7%9A%84%E4%BA%8C%E5%88%86%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p><a href="https://leetcode.cn/problems/possible-bipartition/">886. 可能的二分法</a></p><p><a href="https://labuladong.github.io/algo/2/22/52/">思路参考：labuladong</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> res;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span>[] visit;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span>[] color;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">possibleBipartition</span><span class="params">(<span class="type">int</span> n, <span class="type">int</span>[][] dislikes)</span> &#123;</span><br><span class="line">        List&lt;Integer&gt;[] graph = buildGraph(n,dislikes);</span><br><span class="line">        res = <span class="literal">true</span>;</span><br><span class="line">        visit = <span class="keyword">new</span> <span class="title class_">boolean</span>[n+<span class="number">1</span>];</span><br><span class="line">        color = <span class="keyword">new</span> <span class="title class_">boolean</span>[n+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n ; i++) &#123;</span><br><span class="line">            <span class="comment">// 注意这个 if 语句</span></span><br><span class="line">            <span class="keyword">if</span>(!visit[i]) &#123;</span><br><span class="line">                traverse(graph,i);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 建图，二维矩阵</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Integer&gt;[] buildGraph (<span class="type">int</span> n ,<span class="type">int</span>[][] dislikes) &#123;</span><br><span class="line">        List&lt;Integer&gt;[] graph = <span class="keyword">new</span> <span class="title class_">LinkedList</span>[n+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n ; i++) &#123;</span><br><span class="line">            graph[i] = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span>[] value : dislikes) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> value[<span class="number">0</span>];</span><br><span class="line">            <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> value[<span class="number">1</span>];</span><br><span class="line">            graph[a].add(b);</span><br><span class="line">            graph[b].add(a);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> graph;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 遍历图</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">traverse</span><span class="params">(List&lt;Integer&gt;[] graph,<span class="type">int</span> point)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(!res) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        visit[point] = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> value : graph[point]) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!visit[value]) &#123;</span><br><span class="line">                <span class="comment">// 这里要注意顺序，如果反了，逻辑就错了</span></span><br><span class="line">                color[value] = !color[point];</span><br><span class="line">                traverse(graph,value);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(color[point] == color[value]) &#123;</span><br><span class="line">                    res = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>15. 三数之和</title>
      <link href="/2022/10/15/15-%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C-1/"/>
      <url>/2022/10/15/15-%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C-1/</url>
      
        <content type="html"><![CDATA[<p><a href="https://leetcode.cn/problems/3sum/">15. 三数之和</a></p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; <span class="title function_">threeSum</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; res = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        HashSet&lt;String&gt; hashSet = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">// 先排序，利用快慢指针</span></span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            <span class="comment">// 指针初始位置不能和 i 重复</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> i == <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> i == nums.length - <span class="number">1</span> ? i - <span class="number">1</span> : nums.length - <span class="number">1</span>;</span><br><span class="line">            <span class="type">int</span> sum;</span><br><span class="line">            <span class="comment">// 左右指针不相等是前提</span></span><br><span class="line">            <span class="keyword">while</span> (left != right) &#123;</span><br><span class="line">                List&lt;Integer&gt; temp = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">                sum = nums[i] + nums[left] + nums[right];</span><br><span class="line">                <span class="keyword">if</span> (sum == <span class="number">0</span>) &#123;</span><br><span class="line">                    temp.add(nums[i]);</span><br><span class="line">                    temp.add(nums[left]);</span><br><span class="line">                    temp.add(nums[right]);</span><br><span class="line">                    <span class="comment">// 先排序，再用 Set 去重</span></span><br><span class="line">                    Collections.sort(temp);</span><br><span class="line">                    <span class="comment">// 把三元组变成一个字符串，因为是有序的，所以如果是相同的三元组</span></span><br><span class="line">                    <span class="comment">// 字符串会重复</span></span><br><span class="line">                    <span class="type">StringBuilder</span> <span class="variable">stringBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">                    <span class="keyword">for</span>(Integer value : temp) &#123;</span><br><span class="line">                        stringBuilder.append(value.toString());</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">// 利用 Set 的特性</span></span><br><span class="line">                    <span class="keyword">if</span> (!hashSet.contains(stringBuilder.toString())) &#123;</span><br><span class="line">                        hashSet.add(stringBuilder.toString());</span><br><span class="line">                        res.add(temp);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 因为有序，所以如果 sum 太大，右指针左移</span></span><br><span class="line">                <span class="keyword">if</span> (sum &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    right--;</span><br><span class="line">                    <span class="keyword">if</span>(right==i) &#123;</span><br><span class="line">                        right--;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// sum 太小，左指针右移，指针位置不能和 i 重复</span></span><br><span class="line">                    left++;</span><br><span class="line">                    <span class="keyword">if</span>(left==i)&#123;</span><br><span class="line">                        left++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>1441. 用栈操作构建数组</title>
      <link href="/2022/10/15/1441-%E7%94%A8%E6%A0%88%E6%93%8D%E4%BD%9C%E6%9E%84%E5%BB%BA%E6%95%B0%E7%BB%84/"/>
      <url>/2022/10/15/1441-%E7%94%A8%E6%A0%88%E6%93%8D%E4%BD%9C%E6%9E%84%E5%BB%BA%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<p>虽然 tag 是中等题，但我觉得是简单模拟</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;String&gt; <span class="title function_">buildArray</span><span class="params">(<span class="type">int</span>[] target, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">push</span> <span class="operator">=</span> <span class="string">&quot;Push&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">pop</span> <span class="operator">=</span> <span class="string">&quot;Pop&quot;</span>;</span><br><span class="line">        List&lt;String&gt; res = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(count == target.length)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (i == target[count]) &#123;</span><br><span class="line">                res.add(push);</span><br><span class="line">                count++;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                res.add(push);</span><br><span class="line">                res.add(pop);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>940. 不同的子序列 II</title>
      <link href="/2022/10/15/940-%E4%B8%8D%E5%90%8C%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97-II/"/>
      <url>/2022/10/15/940-%E4%B8%8D%E5%90%8C%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97-II/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">distinctSubseqII</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">long</span> <span class="variable">MOD</span> <span class="operator">=</span> <span class="number">1000000007L</span>;</span><br><span class="line">        <span class="comment">// 第 i 个字符结尾的字符串数量</span></span><br><span class="line">        <span class="type">long</span>[] f = <span class="keyword">new</span> <span class="title class_">long</span>[s.length()];</span><br><span class="line">        <span class="comment">// 记录每个字母结尾的字符串数量，用作去重</span></span><br><span class="line">        <span class="type">long</span>[] ch = <span class="keyword">new</span> <span class="title class_">long</span>[<span class="number">26</span>];</span><br><span class="line">        <span class="type">char</span>[] chars = s.toCharArray();</span><br><span class="line">        f[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        ch[chars[<span class="number">0</span>] - <span class="string">&#x27;a&#x27;</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; s.length(); i++) &#123;</span><br><span class="line">            <span class="type">long</span> <span class="variable">pre</span> <span class="operator">=</span> f[i - <span class="number">1</span>] % MOD;</span><br><span class="line">            <span class="comment">// 每遇到一个新的字符，子序列数量 = 上一个字符的子序列数量 + 1</span></span><br><span class="line">            <span class="type">long</span> <span class="variable">now</span> <span class="operator">=</span> (pre + <span class="number">1</span>) % MOD;</span><br><span class="line">            <span class="type">long</span> <span class="variable">old</span> <span class="operator">=</span> ch[chars[i] - <span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">            <span class="comment">// 没有重复</span></span><br><span class="line">            <span class="keyword">if</span> (old == <span class="number">0</span>) &#123;</span><br><span class="line">                f[i] = (now + pre) % MOD;</span><br><span class="line">                ch[chars[i] - <span class="string">&#x27;a&#x27;</span>] = now % MOD;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 存在重复，比如这次以 a 结尾，那么尝试的子序列中，就会包括之前以 a 结尾的子序列</span></span><br><span class="line">                <span class="comment">// 所以减去之前以 a 结尾生产的子序列，同时更新以 a 结尾的子序列数量</span></span><br><span class="line">                f[i] = (now + pre - old) % MOD;</span><br><span class="line">                <span class="comment">// 存在减法，可能有负数产生</span></span><br><span class="line">                <span class="comment">// 涉及到负数取余的规则</span></span><br><span class="line">                <span class="keyword">if</span>(f[i] &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                    f[i] += MOD;</span><br><span class="line">                &#125;</span><br><span class="line">                ch[chars[i] - <span class="string">&#x27;a&#x27;</span>] = now % MOD;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (<span class="type">int</span>)f[s.length() - <span class="number">1</span>] % (<span class="type">int</span>)MOD;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;s</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>454. 四数相加 II</title>
      <link href="/2022/10/14/454-%E5%9B%9B%E6%95%B0%E7%9B%B8%E5%8A%A0-II/"/>
      <url>/2022/10/14/454-%E5%9B%9B%E6%95%B0%E7%9B%B8%E5%8A%A0-II/</url>
      
        <content type="html"><![CDATA[<ul><li>注意该题不用去重</li><li>把 <code>num1 + num2</code> 的所有结果存入一个 <code>HashMap</code>，<code>key</code> 为加的和，<code>value</code> 为出现次数（<code>num3 + num4</code> 同理）</li><li>遍历 <code>map</code>，找到他们 <code>key</code> 相加等于 0 的 <code>value</code>，两个 <code>value</code> 相乘</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">fourSumCount</span><span class="params">(<span class="type">int</span>[] nums1, <span class="type">int</span>[] nums2, <span class="type">int</span>[] nums3, <span class="type">int</span>[] nums4)</span> &#123;</span><br><span class="line">        HashMap&lt;Integer, Integer&gt; hashMap1 = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        HashMap&lt;Integer, Integer&gt; hashMap2 = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        hashMap1 = addToMap(nums1,nums2);</span><br><span class="line">        hashMap2 = addToMap(nums3,nums4);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 遍历 hashMap1，在 hashMap2 中找 -key</span></span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;Integer, Integer&gt; entry : hashMap1.entrySet()) &#123;</span><br><span class="line">            <span class="type">Integer</span> <span class="variable">key</span> <span class="operator">=</span> entry.getKey();</span><br><span class="line">            <span class="keyword">if</span> (hashMap2.containsKey(-key)) &#123;</span><br><span class="line">                <span class="comment">// 一定要用乘法，才能表示对应的排列组合</span></span><br><span class="line">                res += entry.getValue() * hashMap2.get(-key);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> HashMap&lt;Integer, Integer&gt; <span class="title function_">addToMap</span><span class="params">(<span class="type">int</span>[] nums1, <span class="type">int</span>[] nums2)</span> &#123;</span><br><span class="line">        HashMap&lt;Integer, Integer&gt; res = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> value1 : nums1) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> value2 : nums2) &#123;</span><br><span class="line">                sum = value1 + value2;</span><br><span class="line">                <span class="type">Integer</span> <span class="variable">val</span> <span class="operator">=</span> res.get(sum);</span><br><span class="line">                <span class="keyword">if</span>(val==<span class="literal">null</span>)&#123;</span><br><span class="line">                    val = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                res.put(sum, ++val);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>202. 快乐数</title>
      <link href="/2022/10/14/202-%E5%BF%AB%E4%B9%90%E6%95%B0/"/>
      <url>/2022/10/14/202-%E5%BF%AB%E4%B9%90%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isHappy</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">res</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        HashSet&lt;Integer&gt; hashSet = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            n = getNewNum(n);</span><br><span class="line">            <span class="keyword">if</span> (hashSet.contains(n)) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            hashSet.add(n);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getNewNum</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">        ArrayList&lt;Integer&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">while</span> (n != <span class="number">0</span>) &#123;</span><br><span class="line">            list.add(n % <span class="number">10</span>);</span><br><span class="line">            n /= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (Integer value : list) &#123;</span><br><span class="line">            sum += value * value;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>349. 两个数组的交集</title>
      <link href="/2022/10/14/349-%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E4%BA%A4%E9%9B%86/"/>
      <url>/2022/10/14/349-%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E4%BA%A4%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<p>利用 HashSet 特性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] intersection(<span class="type">int</span>[] nums1, <span class="type">int</span>[] nums2) &#123;</span><br><span class="line">        HashSet&lt;Integer&gt; hashSet = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        HashSet&lt;Integer&gt; resSet = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> value : nums1) &#123;</span><br><span class="line">            hashSet.add(value);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> value : nums2) &#123;</span><br><span class="line">            <span class="keyword">if</span> (hashSet.contains(value)) &#123;</span><br><span class="line">                resSet.add(value);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> resSet.stream().mapToInt(x -&gt; x).toArray();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>59. 螺旋矩阵 II</title>
      <link href="/2022/10/13/59-%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5-II/"/>
      <url>/2022/10/13/59-%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5-II/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://www.programmercarl.com/0059.%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5II.html#%E6%80%9D%E8%B7%AF">思路</a></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[][] generateMatrix(<span class="type">int</span> n) &#123;</span><br><span class="line">        <span class="type">int</span>[][] nums = paintNums(n);</span><br><span class="line">        <span class="keyword">if</span> (n % <span class="number">2</span> != <span class="number">0</span>) &#123;</span><br><span class="line">            nums[n / <span class="number">2</span>][n / <span class="number">2</span>] = n * n;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span>[][] paintNums(<span class="type">int</span> n) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> n - <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span>[][] nums = <span class="keyword">new</span> <span class="title class_">int</span>[n][n];</span><br><span class="line">        <span class="keyword">while</span> (len &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">tempLen</span> <span class="operator">=</span> len;</span><br><span class="line">            <span class="keyword">while</span> (tempLen-- &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                nums[i][j++] = num++;</span><br><span class="line">            &#125;</span><br><span class="line">            tempLen = len;</span><br><span class="line">            <span class="keyword">while</span> (tempLen-- &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                nums[i++][j] = num++;</span><br><span class="line">            &#125;</span><br><span class="line">            tempLen = len;</span><br><span class="line">            <span class="keyword">while</span> (tempLen-- &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                nums[i][j--] = num++;</span><br><span class="line">            &#125;</span><br><span class="line">            tempLen = len;</span><br><span class="line">            <span class="keyword">while</span> (tempLen-- &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                nums[i--][j] = num++;</span><br><span class="line">            &#125;</span><br><span class="line">            i = count;</span><br><span class="line">            j = count++;</span><br><span class="line">            len -= <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>209. 长度最小的子数组</title>
      <link href="/2022/10/12/209-%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/"/>
      <url>/2022/10/12/209-%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<p>滑动窗口</p><ul><li><p><code>i</code> 是窗口的头，<code>j</code> 是窗口的尾</p></li><li><p>窗口内的值是 <code>sum</code></p></li><li><p>当 <code>sum &gt;= target</code> 时，循环移动起始位置 <code>i</code>，没移动一次，<code>sum</code> 减去对应的值 <code>nums[i]</code></p></li><li><p>为什么要用 <code>while</code></p><p><code>[1,1,1,1,100], target = 100</code></p><p><code>sum</code> 满足条件时，<code>i = 0</code>, <code>j = 4</code></p><p>移动 <code>1</code> 次时，<code>sum = 104</code>，仍然大于 <code>100</code></p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">minSubArrayLen</span><span class="params">(<span class="type">int</span> target, <span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; nums.length; j++)&#123;</span><br><span class="line">            sum += nums[j];</span><br><span class="line">            <span class="keyword">while</span>(sum &gt;= target) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> j - i + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (res == <span class="number">0</span>) &#123;</span><br><span class="line">                    res = len;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    res = res &lt; len ? res : len;</span><br><span class="line">                &#125;</span><br><span class="line">                sum -= nums[i];</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>83. 删除排序链表中的重复元素</title>
      <link href="/2022/10/12/83-%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0/"/>
      <url>/2022/10/12/83-%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0/</url>
      
        <content type="html"><![CDATA[<p>快慢指针</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> ListNode <span class="title function_">deleteDuplicates</span><span class="params">(ListNode head)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="literal">null</span> || head.next == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">fast</span> <span class="operator">=</span> head.next;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">slow</span> <span class="operator">=</span> head;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">res</span> <span class="operator">=</span> slow;</span><br><span class="line">        <span class="keyword">while</span>(fast!=<span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(fast.val == slow.val) &#123;</span><br><span class="line">                slow.next = fast.next;</span><br><span class="line">                fast = fast.next;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                slow = slow.next;</span><br><span class="line">                fast = fast.next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker 学习（基于 CentOS 8.2）</title>
      <link href="/2022/10/11/Docker-%E5%AD%A6%E4%B9%A0%EF%BC%88%E5%9F%BA%E4%BA%8E-CentOS-8-2%EF%BC%89/"/>
      <url>/2022/10/11/Docker-%E5%AD%A6%E4%B9%A0%EF%BC%88%E5%9F%BA%E4%BA%8E-CentOS-8-2%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><ul><li>docker -v ➡️ 查看 docker 版本</li><li>systemctl status docker ➡️ 查看 docker 状态</li><li>systemctl start docker ➡️ 启动 docker</li></ul>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 恢复数据库</title>
      <link href="/2022/10/06/MySQL-%E6%81%A2%E5%A4%8D%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2022/10/06/MySQL-%E6%81%A2%E5%A4%8D%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p &lt; C:\all.sql</span><br><span class="line">mysql -u root -p databasename &lt; import.sql</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>643. 子数组最大平均数 I</title>
      <link href="/2022/10/04/643-%E5%AD%90%E6%95%B0%E7%BB%84%E6%9C%80%E5%A4%A7%E5%B9%B3%E5%9D%87%E6%95%B0-I/"/>
      <url>/2022/10/04/643-%E5%AD%90%E6%95%B0%E7%BB%84%E6%9C%80%E5%A4%A7%E5%B9%B3%E5%9D%87%E6%95%B0-I/</url>
      
        <content type="html"><![CDATA[<h3 id="643-子数组最大平均数-I"><a href="#643-子数组最大平均数-I" class="headerlink" title="643. 子数组最大平均数 I"></a><a href="https://leetcode.cn/problems/maximum-average-subarray-i/">643. 子数组最大平均数 I</a></h3><p>暴力</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">findMaxAverage</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> k)</span> &#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">res</span> <span class="operator">=</span> <span class="number">0d</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0d</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; k; i++) &#123;</span><br><span class="line">            sum += nums[i];</span><br><span class="line">        &#125;</span><br><span class="line">        res = sum / k;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> k; i &lt; nums.length; i++) &#123;</span><br><span class="line">            sum += nums[i] - nums[i-k];</span><br><span class="line">            res = sum / k &gt; res ? sum / k : res;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode 刷题</title>
      <link href="/2022/10/03/LeetCode-%E5%88%B7%E9%A2%98/"/>
      <url>/2022/10/03/LeetCode-%E5%88%B7%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<blockquote><p>原文：<a href="https://leetcode.cn/circle/discuss/jq9Zke/">论如何 4 个月高效刷满 500 题并形成长期记忆</a></p><p>（仅做读后记录，若涉及侵权联系 <a href="mailto:&#116;&#x69;&#x6d;&#101;&#99;&#114;&#x61;&#119;&#x73;&#108;&#64;&#x67;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#99;&#x6f;&#x6d;">timecrawsl@gmail.com</a> 删除）</p></blockquote><h4 id="4-点总结"><a href="#4-点总结" class="headerlink" title="4 点总结"></a>4 点总结</h4><ol><li>始终保持匀速前进，既不松懈倦怠，亦不急于求成</li><li>定时归纳总结, 按类训练</li><li>深度理解人的记忆规律，高频率高效复习</li><li>拥抱孤独, 过滤外界杂音, 平稳心态</li></ol><h4 id="1-“题海流”or“归纳流”？"><a href="#1-“题海流”or“归纳流”？" class="headerlink" title="1. “题海流”or“归纳流”？"></a>1. “题海流”or“归纳流”？</h4><ul><li><code>&quot;题海流&quot;</code> 是绝对不适合任何 <code>长线任务</code> 的</li><li><code>匀速前进</code>是 <code>&quot;归纳流&quot;</code> 最核心的思想之一。</li><li>Again, 不要 greedy, 绝大部分人每天的精力是有限且平均的，你今天做的事情超标了，看似赚到了，实际上是在透支明天的自己, 你每透支一次自己，节奏就会乱一次。而节奏每乱一次，将其调整到正轨又需要大量的精力，所以从全局的角度来讲你其实是亏损的</li></ul><h4 id="2-归纳"><a href="#2-归纳" class="headerlink" title="2. 归纳"></a>2. 归纳</h4><ul><li>通俗的讲，<code>归纳</code> 其实就是尝试在众多同类事物之间挖掘普遍规律，并试图利用该规律去高效地解决更多同类问题。</li><li><strong>通俗的讲，<code>归纳</code> 其实就是尝试在众多同类事物之间挖掘普遍规律，并试图利用该规律去高效地解决更多同类问题。</strong></li><li>随着时间的推移，你会慢慢领悟到 在进行了大量针对性的同类型训练后，隐藏在事物深层的普遍规律往往会自然而然地浮出表面。倘若此时能够停下片刻，对其进行归纳和总结，我们得到的 benefit 将会是在各种题型之间盲目切换的数倍。</li><li>对于其他题型，比如二分法，二叉树 (前中后序)，回溯等等，我采取的策略均是像这样逐一进行攻破: 即一段时间内 (一般是 5 ~ 7 天) 只做该类型题目，结合其他质量高的题解以及自身的见解归纳总结出一套属于自己的框架。</li></ul><h4 id="3-形成长期记忆"><a href="#3-形成长期记忆" class="headerlink" title="3. 形成长期记忆"></a>3. 形成长期记忆</h4><ul><li>形成长期记忆的方法其实非常简单，即 <strong>频繁且有效的重复刺激</strong></li><li>人们永远不会忘记的总是那些需要不断重复的东西：怎么用筷子吃饭，怎么穿衣装扮，怎么说某种语言等等。之所以永远不会忘记它们，正是因为我们每天都在潜移默化地反复刺激大脑如何去运用它们，而刷题或者 generalize 到学习某项技能亦是如此。</li><li><strong>复习旧题的重要性要远远大于做新题</strong></li><li>德国的心理学家艾宾浩斯告诉我们，人对于知识的遗忘速度遵循 “先快后慢” 的原则。学得的知识在一天后，如不抓紧复习，很快就只剩下原来的 25%。而随着时间的推移，遗忘的速度会减慢，遗忘的数量也就减少。去有效抵抗这种遗忘现象，最好的办法就是进行有规律的复习 (每 5 分钟，30 分钟，12 小时，1 天，2 天，4 天，7 天，15 天，1 个月，3 个月，6 个月)。</li><li>然而私认为这个划分有些过细了，读者可以结合自身的情况进行调整。我个人的复习规律是 每 2 小时，12小时， 2天， 7天，15天，一个月， 三个月。 这也是为什么我在上文提及到我会将一天分为早上，中午和晚上三个学习区段，每一个区段只刷很少数量的题 (1 ~ 2 题)，并且开始每一个区段之前，都会首先复习之前做过的题，晚上的时候甚至一题也不做，将全部精力都用来复习。</li></ul><h4 id="4-静下心"><a href="#4-静下心" class="headerlink" title="4. 静下心"></a>4. 静下心</h4><ul><li>因此，不要再沉迷于各种 伪群体 , 伪社区 , 洗脑短视频 之间，最好的方式就是离开它们，或者有效控制它们，从而捍卫你的初心。那么什么样的状态或者是心态可以称之为平稳呢？私认为只要你可以做到 长时间地保持一个节奏，贯彻一个方案，不因取得阶段性成就而大喜，亦不因遭受阶段性挫折而大悲，心静如水，那么你离你的目标就真的不再遥远了。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Homebrew 常用命令</title>
      <link href="/2022/10/02/Homebrew-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/10/02/Homebrew-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://formulae.brew.sh/">Homebrew Formulae</a></p></blockquote><ul><li>安装 ➡️ brew install <package></li><li>卸载 ➡️ brew uninstall <package></li><li>重装 ➡️ brew reinstall <package></li><li>检查 Homebrew 自身更新 ➡️ brew update</li><li>更新所有软件 ➡️ brew upgrade</li><li>更新指定软件 ➡️ brew upgrade <package></li><li>Homebrew 下载的软件存放路径 ➡️ brew –cache</li><li>通过 brew 安装的所有软件 ➡️ brew list</li><li>可更新的软件 ➡️ brew outdated</li><li>清理就版本的包 ➡️ brew cleanup</li><li>锁定某个不想更新的软件 ➡️ brew pin <package></li><li>取消锁定更新 ➡️ brew unpin <package></li><li></li></ul>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>IDEA</title>
      <link href="/2022/10/01/IDEA/"/>
      <url>/2022/10/01/IDEA/</url>
      
        <content type="html"><![CDATA[<h4 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h4><ul><li><p><code>ctrl + option + H</code> ➡️ 方法在哪里被调用</p></li><li><p><code>option + F7</code> ➡️ 变量在哪里被使用</p></li><li><p><code>ctrl + H</code> ➡️ 类的继承关系</p></li><li><p><code>cmd + B/U</code> ➡️ 方法实现（子类、父类）</p></li><li><p><code>cmd + F12</code> ➡️ 查看类中的所有方法</p></li><li><p><code>cmd + O</code> ➡️ 全局搜索文件</p></li><li><p><code>cmd + shift + F</code> ➡️ 全局搜索</p></li><li><p>删除当前行 ➡️ <code>cmd + backspace</code></p></li><li><p>复制当前行 ➡️ <code>cmd + d</code></p></li><li><p>自动补全 ➡️ <code>option+/</code></p></li><li><p>插入构造器等 ➡️ <code>cmd+n</code></p></li><li><p>查看类的继承关系 ➡️ <code>ctrl+h</code></p></li><li><p>对象创建 ➡️ <code>optipn+enter</code> 或 <code>.var</code></p></li><li><p>上下移动代码 ➡️ <code>cmd + shift + ⬆️/⬇️</code></p></li><li><p>实现接口的方法 ➡️ <code>ctrl + I</code></p></li><li><p>对选中的代码弹出环绕选项弹出层（try&#x2F;catch 之类） ➡️ <code>cmd + Option + T</code></p></li><li><p>快速生产 iterator 的 while 循环 ➡️ <code>itit</code></p></li><li><p>显示快捷提示 ➡️ <code>cmd + J</code></p></li><li><p>增强 for 循环 ➡️ <code>I</code></p></li><li><p>soutv ➡️ 打印变量</p></li><li><p>crtl + enter ➡️ </p></li><li><p>cmd + F12 ➡️ 查看类的所有方法</p></li><li><p>cmd + p ➡️ 提示方法形参列表</p></li><li><p>双击 shift ➡️ </p></li><li></li><li><p>IDEA 每日 Tips ➡️ </p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220724201933.png" alt="截屏2022-07-24 20.17.23"></p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220724201946.png" alt="截屏2022-07-24 20.17.55" style="zoom: 50%;" /></li></ul><h4 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h4><ul><li><p>debug 的时候，直接点代码行数字，可以实现跳转</p></li><li><p>删除栈 Drop Frame，可以返回之前的步骤，而不用重新开启 debuf</p></li><li><p>条件断点：右键双击红色断点</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20221001211930.png" alt="image-20221001211930349"></p></li><li><p>点击图中加号，可添加各种表达式，如查看某个变量的变化</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20221001212153.png" alt="截屏2022-10-01 21.20.38"></p></li><li><p><code>cmd + shift + F8</code> ➡️ 查看所有断点，可以临时移除断点</p></li><li></li></ul>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>You have mail.</title>
      <link href="/2022/10/01/You-have-mail/"/>
      <url>/2022/10/01/You-have-mail/</url>
      
        <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /var/mail</span><br><span class="line">open .</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">delete file</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Github SSH</title>
      <link href="/2022/09/26/Github-SSH/"/>
      <url>/2022/09/26/Github-SSH/</url>
      
        <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh</span><br><span class="line">ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</span><br><span class="line">pbcopy &lt; ~/.ssh/id_rsa.pub</span><br><span class="line">ssh -T git@github.com # 测试一下该 SSH key</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>977. 有序数组的平方</title>
      <link href="/2022/09/25/977-%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E5%B9%B3%E6%96%B9/"/>
      <url>/2022/09/25/977-%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E5%B9%B3%E6%96%B9/</url>
      
        <content type="html"><![CDATA[<h3 id="977-有序数组的平方"><a href="#977-有序数组的平方" class="headerlink" title="977. 有序数组的平方"></a><a href="https://leetcode.cn/problems/squares-of-a-sorted-array/">977. 有序数组的平方</a></h3><ul><li><p>双指针解法</p><p>本来数组就已经有序，所以最大值只能在头或者尾出现，倒序输送到 res 数组</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] sortedSquares(<span class="type">int</span>[] nums) &#123;</span><br><span class="line">        <span class="type">int</span>[] res = <span class="keyword">new</span> <span class="title class_">int</span>[nums.length];</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> nums.length - <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> j;</span><br><span class="line">        <span class="keyword">while</span>(i &lt;= j) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">numA</span> <span class="operator">=</span> nums[i]*nums[i];</span><br><span class="line">            <span class="type">int</span> <span class="variable">numB</span> <span class="operator">=</span> nums[j]*nums[j];</span><br><span class="line">            <span class="keyword">if</span> (numA &gt; numB) &#123;</span><br><span class="line">                res[count--] = numA;</span><br><span class="line">                i++;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                res[count--] = numB;</span><br><span class="line">                j--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>1413. 逐步求和得到正数的最小值</title>
      <link href="/2022/08/09/1413-%E9%80%90%E6%AD%A5%E6%B1%82%E5%92%8C%E5%BE%97%E5%88%B0%E6%AD%A3%E6%95%B0%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC/"/>
      <url>/2022/08/09/1413-%E9%80%90%E6%AD%A5%E6%B1%82%E5%92%8C%E5%BE%97%E5%88%B0%E6%AD%A3%E6%95%B0%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<h3 id="1413-逐步求和得到正数的最小值"><a href="#1413-逐步求和得到正数的最小值" class="headerlink" title="1413. 逐步求和得到正数的最小值"></a><a href="https://leetcode.cn/problems/minimum-value-to-get-positive-step-by-step-sum/">1413. 逐步求和得到正数的最小值</a></h3><ul><li>假设 <code>startValue = 0</code>，先进行一轮求和</li><li>将每次求和结果存入 <code>sums</code> 数组中</li><li>遍历 <code>sums</code> 数组找到数组中最小的数</li><li>若<code>最小值</code>为负数，则<code>取反+1</code></li><li>若<code>最小值</code>为正数，直接返回 <code>1</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">minStartValue</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> Integer.MAX_VALUE;</span><br><span class="line">        <span class="type">int</span>[] sums = <span class="keyword">new</span> <span class="title class_">int</span>[nums.length];</span><br><span class="line">        <span class="type">int</span> <span class="variable">startValue</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            sums[i] = startValue + nums[i];</span><br><span class="line">            startValue = sums[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; sums.length; i++) &#123;</span><br><span class="line">            res = Math.min(res, sums[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res &gt;= <span class="number">1</span> ? <span class="number">1</span> : Math.abs(res) + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Git 学习</title>
      <link href="/2022/08/09/Git-%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/08/09/Git-%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="1-Git-配置"><a href="#1-Git-配置" class="headerlink" title="1. Git 配置"></a>1. Git 配置</h3><h4 id="1-1-Git-换行符配置"><a href="#1-1-Git-换行符配置" class="headerlink" title="1.1 Git 换行符配置"></a>1.1 Git 换行符配置</h4><blockquote><p>Windows 用回车和换行结束一行 CRLF</p><p>MacOS 和 Linux 只食用换行一个字符 LF</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在提交时，自动将 CRLF 转成 LF，在签出时自动将 LF 转成 CRLF</span></span><br><span class="line">git config --global core.autocrlf true</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在提交时，自动将 CRLF 转成 LF，在签出时不转换</span></span><br><span class="line">git config --global core.autocrlf input</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="1-2-文本编码配置"><a href="#1-2-文本编码配置" class="headerlink" title="1.2 文本编码配置"></a>1.2 文本编码配置</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示 status 编码</span></span><br><span class="line">git config --global core.quotepath false   </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">图形界面编码</span></span><br><span class="line">git config --global gui.encoding utf-8      </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">提交信息编码</span></span><br><span class="line">git config --global i18n.commit.encoding utf-8</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">输出 <span class="built_in">log</span> 编码</span></span><br><span class="line">git config --global i18n.logoutputencoding utf-8 </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">因为 git <span class="built_in">log</span> 默认使用 less 分页，所以需要 bash 对 less 命令进行 utf-8 编码</span></span><br><span class="line">export LESSCHARSET=utf-8</span><br></pre></td></tr></table></figure><h4 id="1-3-SSH-配置"><a href="#1-3-SSH-配置" class="headerlink" title="1.3 SSH 配置"></a>1.3 SSH 配置</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">生成公钥</span></span><br><span class="line">ssh-keygen -t rsa -C [邮箱]</span><br></pre></td></tr></table></figure><p>​之后将生成的公钥文件添加到对应的网站中</p><h3 id="2-Git-基本命令"><a href="#2-Git-基本命令" class="headerlink" title="2. Git 基本命令"></a>2. Git 基本命令</h3><h4 id="2-1"><a href="#2-1" class="headerlink" title="2.1"></a>2.1</h4>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Mac 终端指令</title>
      <link href="/2022/08/08/Mac-%E7%BB%88%E7%AB%AF%E6%8C%87%E4%BB%A4/"/>
      <url>/2022/08/08/Mac-%E7%BB%88%E7%AB%AF%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<ul><li><p><code>whoami</code></p><p>显示当前的用户昵称</p></li><li><p><code>sudo -i</code></p><p>进入临时 root 权限</p></li><li><p><code>sudo spctl --master-disable</code></p><p>允许安装任何来源的软件</p></li><li><p><code>rm [拖入文件] 或 sudo rm [拖入文件]</code></p><p>删除顽固文件</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>1408. 数组中的字符串匹配</title>
      <link href="/2022/08/06/1408-%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D/"/>
      <url>/2022/08/06/1408-%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D/</url>
      
        <content type="html"><![CDATA[<h3 id="1408-数组中的字符串匹配"><a href="#1408-数组中的字符串匹配" class="headerlink" title="1408. 数组中的字符串匹配"></a><a href="https://leetcode.cn/problems/string-matching-in-an-array/">1408. 数组中的字符串匹配</a></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;String&gt; <span class="title function_">stringMatching</span><span class="params">(String[] words)</span> &#123;</span><br><span class="line">        List&lt;String&gt; strs = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; words.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; words.length ; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(words[j].contains(words[i]) &amp;&amp; j != i) &#123;</span><br><span class="line">                    strs.add(words[i]);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> strs;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>623. 在二叉树中增加一行</title>
      <link href="/2022/08/05/623-%E5%9C%A8%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E5%A2%9E%E5%8A%A0%E4%B8%80%E8%A1%8C/"/>
      <url>/2022/08/05/623-%E5%9C%A8%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E5%A2%9E%E5%8A%A0%E4%B8%80%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<h3 id="623-在二叉树中增加一行"><a href="#623-在二叉树中增加一行" class="headerlink" title="623. 在二叉树中增加一行"></a><a href="https://leetcode.cn/problems/add-one-row-to-tree/">623. 在二叉树中增加一行</a></h3><ul><li>BFS</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int val, TreeNode left, TreeNode right) &#123;</span></span><br><span class="line"><span class="comment"> *         this.val = val;</span></span><br><span class="line"><span class="comment"> *         this.left = left;</span></span><br><span class="line"><span class="comment"> *         this.right = right;</span></span><br><span class="line"><span class="comment"> *     &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> TreeNode <span class="title function_">addOneRow</span><span class="params">(TreeNode root, <span class="type">int</span> val, <span class="type">int</span> depth)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(depth == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="type">TreeNode</span> <span class="variable">newNode</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TreeNode</span>(val);</span><br><span class="line">            newNode.left = root;</span><br><span class="line">            <span class="keyword">return</span> newNode;</span><br><span class="line">        &#125;</span><br><span class="line">        Deque&lt;TreeNode&gt; dq = <span class="keyword">new</span> <span class="title class_">ArrayDeque</span>&lt;&gt;();</span><br><span class="line">        dq.addLast(root);</span><br><span class="line">        <span class="type">int</span> <span class="variable">cur</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(!dq.isEmpty()) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">sz</span> <span class="operator">=</span> dq.size();</span><br><span class="line">            <span class="keyword">while</span>(sz-- &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="type">TreeNode</span> <span class="variable">node</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TreeNode</span>();</span><br><span class="line">                node = dq.pollFirst();</span><br><span class="line">                <span class="keyword">if</span>(cur == depth - <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="type">TreeNode</span> <span class="variable">newLeft</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TreeNode</span>(val);</span><br><span class="line">                    <span class="type">TreeNode</span> <span class="variable">newRight</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TreeNode</span>(val);</span><br><span class="line">                    newLeft.left = node.left;</span><br><span class="line">                    newRight.right = node.right;</span><br><span class="line">                    node.left = newLeft;</span><br><span class="line">                    node.right = newRight;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (node.left != <span class="literal">null</span>) dq.addLast(node.left);</span><br><span class="line">                    <span class="keyword">if</span> (node.right != <span class="literal">null</span>) dq.addLast(node.right);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            cur++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Spotify 专辑封面</title>
      <link href="/2022/08/05/Spotify-%E4%B8%93%E8%BE%91%E5%B0%81%E9%9D%A2/"/>
      <url>/2022/08/05/Spotify-%E4%B8%93%E8%BE%91%E5%B0%81%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<ol><li><p>复制<code>歌曲链接</code></p></li><li><p><a href="https://open.spotify.com/oembed?url=%60%E6%AD%8C%E6%9B%B2%E9%93%BE%E6%8E%A5%60">https://open.spotify.com/oembed?url=`歌曲链接`</a></p></li><li><p>“thumbnail_url”:”封面的地址”</p><p>打不开就换换节点</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>1403. 非递增顺序的最小子序列</title>
      <link href="/2022/08/04/1403-%E9%9D%9E%E9%80%92%E5%A2%9E%E9%A1%BA%E5%BA%8F%E7%9A%84%E6%9C%80%E5%B0%8F%E5%AD%90%E5%BA%8F%E5%88%97/"/>
      <url>/2022/08/04/1403-%E9%9D%9E%E9%80%92%E5%A2%9E%E9%A1%BA%E5%BA%8F%E7%9A%84%E6%9C%80%E5%B0%8F%E5%AD%90%E5%BA%8F%E5%88%97/</url>
      
        <content type="html"><![CDATA[<ul><li><p>都用 List 好处理一些</p></li><li><p><code>getSum(res) &gt; getSum(newNums) - getSum(res)</code></p><p>剩下子序列的值用原来的全部和减去提出去的子序列和</p></li><li><p>只要把原来的数组从大到小排序，然后遍历就可以了</p></li><li><p>不过代码写的太复杂了，时间复杂度太高</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Integer&gt; <span class="title function_">minSubsequence</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        List&lt;Integer&gt; res = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        List&lt;Integer&gt; newNums = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        newNums = Arrays.stream(nums).boxed().collect(Collectors.toList());</span><br><span class="line">        newNums.sort(Comparator.comparing(Integer::intValue));</span><br><span class="line">        Collections.reverse(newNums);</span><br><span class="line">        <span class="keyword">for</span> (Integer integer : newNums) &#123;</span><br><span class="line">            res.add(integer);</span><br><span class="line">            <span class="keyword">if</span> (getSum(res) &gt; getSum(newNums) - getSum(res)) &#123;</span><br><span class="line">                <span class="keyword">return</span> res;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getSum</span><span class="params">(List&lt;Integer&gt;list)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> list.stream().mapToInt(Integer::intValue).sum();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>看别的题解</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Array;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Integer&gt; <span class="title function_">minSubsequence</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        List&lt;Integer&gt; res = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">cur</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> nums.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            sum += nums[i];</span><br><span class="line">        &#125; </span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        <span class="keyword">while</span>(cur &lt;= sum - cur) &#123;</span><br><span class="line">            cur += nums[index];</span><br><span class="line">            res.add(nums[index--]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Mac 端口查看与杀死</title>
      <link href="/2022/07/28/Mac-%E7%AB%AF%E5%8F%A3%E6%9F%A5%E7%9C%8B%E4%B8%8E%E6%9D%80%E6%AD%BB/"/>
      <url>/2022/07/28/Mac-%E7%AB%AF%E5%8F%A3%E6%9F%A5%E7%9C%8B%E4%B8%8E%E6%9D%80%E6%AD%BB/</url>
      
        <content type="html"><![CDATA[<ol><li><p>查看对应端口进程，这里用 <code>8080</code> 为例</p><p><code>lsof -i:8080</code></p></li><li><p>杀死进程</p><p><code>kill -9 pid</code></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode 每日一题</title>
      <link href="/2022/07/27/LeetCode-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
      <url>/2022/07/27/LeetCode-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h3 id="2022-07-28-1331-数组序号转换"><a href="#2022-07-28-1331-数组序号转换" class="headerlink" title="2022.07.28 1331. 数组序号转换"></a>2022.07.28 <a href="https://leetcode.cn/problems/rank-transform-of-an-array/">1331. 数组序号转换</a></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] arrayRankTransform(<span class="type">int</span>[] arr) &#123;</span><br><span class="line">        <span class="keyword">if</span> (arr.length == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        HashMap&lt;Integer, Integer&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">int</span>[] tempArr = Arrays.copyOf(arr,arr.length);</span><br><span class="line">        Arrays.sort(tempArr);</span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        hashMap.put(tempArr[<span class="number">0</span>],index++);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; tempArr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (tempArr[i] != tempArr[i-<span class="number">1</span>]) &#123;</span><br><span class="line">                hashMap.put(tempArr[i], index++);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Iterator&lt;Map.Entry&lt;Integer, Integer&gt;&gt; iterator = hashMap.entrySet().iterator();</span><br><span class="line"><span class="comment">//        while(iterator.hasNext())&#123;</span></span><br><span class="line"><span class="comment">//            Map.Entry&lt;Integer, Integer&gt; next = iterator.next();</span></span><br><span class="line"><span class="comment">//            System.out.print(&quot;next.getKey() = &quot; + next.getKey() + &quot; &quot;);</span></span><br><span class="line"><span class="comment">//            System.out.println(&quot;next.getValue() = &quot; + next.getValue());</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        <span class="type">int</span>[] res = <span class="keyword">new</span> <span class="title class_">int</span>[arr.length];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            res[i] = hashMap.get(arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2022-07-29-593-有效的正方形"><a href="#2022-07-29-593-有效的正方形" class="headerlink" title="2022.07.29 593. 有效的正方形"></a>2022.07.29 <a href="https://leetcode.cn/problems/valid-square/">593. 有效的正方形</a></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">validSquare</span><span class="params">(<span class="type">int</span>[] p1, <span class="type">int</span>[] p2, <span class="type">int</span>[] p3, <span class="type">int</span>[] p4)</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">res</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">x1</span> <span class="operator">=</span> p1[<span class="number">0</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">y1</span> <span class="operator">=</span> p1[<span class="number">1</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">x2</span> <span class="operator">=</span> p2[<span class="number">0</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">y2</span> <span class="operator">=</span> p2[<span class="number">1</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">x3</span> <span class="operator">=</span> p3[<span class="number">0</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">y3</span> <span class="operator">=</span> p3[<span class="number">1</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">x4</span> <span class="operator">=</span> p4[<span class="number">0</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">y4</span> <span class="operator">=</span> p4[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> ((x1 == x2 &amp;&amp; y1 == y2) || (x1 == x3 &amp;&amp; y1 == y3) ||(x1 == x4 &amp;&amp; y1 == y4) || (x2 == x3 &amp;&amp; y2 == y3) || (x2 == x4 &amp;&amp; y2 == y4) || (x3 == x4 &amp;&amp; y3 == y4)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span>[] allLength = <span class="keyword">new</span> <span class="title class_">double</span>[<span class="number">6</span>];</span><br><span class="line">        <span class="type">double</span> <span class="variable">a1</span> <span class="operator">=</span> Math.sqrt(Math.pow(x2 - x1, <span class="number">2</span>) + Math.pow(y2 - y1, <span class="number">2</span>));</span><br><span class="line">        <span class="type">double</span> <span class="variable">b1</span> <span class="operator">=</span> Math.sqrt(Math.pow(x3 - x1, <span class="number">2</span>) + Math.pow(y3 - y1, <span class="number">2</span>));</span><br><span class="line">        <span class="type">double</span> <span class="variable">c1</span> <span class="operator">=</span> Math.sqrt(Math.pow(x4 - x1, <span class="number">2</span>) + Math.pow(y4 - y1, <span class="number">2</span>));</span><br><span class="line">        <span class="type">double</span> <span class="variable">a2</span> <span class="operator">=</span> Math.sqrt(Math.pow(x1 - x4, <span class="number">2</span>) + Math.pow(y1 - y4, <span class="number">2</span>));</span><br><span class="line">        <span class="type">double</span> <span class="variable">b2</span> <span class="operator">=</span> Math.sqrt(Math.pow(x2 - x4, <span class="number">2</span>) + Math.pow(y2 - y4, <span class="number">2</span>));</span><br><span class="line">        <span class="type">double</span> <span class="variable">c2</span> <span class="operator">=</span> Math.sqrt(Math.pow(x3 - x4, <span class="number">2</span>) + Math.pow(y3 - y4, <span class="number">2</span>));</span><br><span class="line">        allLength[<span class="number">0</span>] = a1;</span><br><span class="line">        allLength[<span class="number">1</span>] = b1;</span><br><span class="line">        allLength[<span class="number">2</span>] = c1;</span><br><span class="line">        allLength[<span class="number">3</span>] = a2;</span><br><span class="line">        allLength[<span class="number">4</span>] = b2;</span><br><span class="line">        allLength[<span class="number">5</span>] = c2;</span><br><span class="line">        <span class="keyword">if</span> (a1*b1*c1*a2*b2*c2 == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="variable">sideLength</span> <span class="operator">=</span> (a1 &lt; b1) ? (Math.min(a1, c1)) : (Math.min(b1, c1));</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (allLength[i] == sideLength) &#123;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (count != <span class="number">4</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="variable">squareArea</span> <span class="operator">=</span> Math.pow(sideLength,<span class="number">2</span>);</span><br><span class="line">        <span class="type">double</span> triangleArea1,triangleArea2;</span><br><span class="line">        <span class="type">double</span> pp1,pp2;</span><br><span class="line">        pp1 = (a1+b1+c1) / <span class="number">2</span>;</span><br><span class="line">        pp2 = (a2+b2+c2) / <span class="number">2</span>;</span><br><span class="line">        triangleArea1 = Math.sqrt(pp1*(pp1-a1)*(pp1-b1)*(pp1-c1));</span><br><span class="line">        triangleArea2 = Math.sqrt(pp2*(pp2-a2)*(pp2-b2)*(pp2-c2));</span><br><span class="line">        triangleArea1 = Math.round(triangleArea1*<span class="number">100.0</span>)/<span class="number">100.0</span>;</span><br><span class="line">        triangleArea2 = Math.round(triangleArea2*<span class="number">100.0</span>)/<span class="number">100.0</span>;</span><br><span class="line">        squareArea = Math.round(squareArea*<span class="number">100</span>)/<span class="number">100.0</span>;</span><br><span class="line">        <span class="keyword">if</span> (triangleArea1 == triangleArea2 &amp;&amp; (triangleArea1+triangleArea2)==squareArea) &#123;</span><br><span class="line">            res = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>其实不一定要开根，可以都用<strong>距离的平方</strong>来计算，就省去对 <code>double</code> 的处理</li><li>可以开函数进行一些重复性的工作</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">validSquare</span><span class="params">(<span class="type">int</span>[] p1, <span class="type">int</span>[] p2, <span class="type">int</span>[] p3, <span class="type">int</span>[] p4)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> isRightTriangle(p1, p2, p3) &amp;&amp; isRightTriangle(p1, p2, p4) &amp;&amp; isRightTriangle(p1, p3, p4) &amp;&amp; isRightTriangle(p2, p3, p4);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断是不是直角三角形</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isRightTriangle</span><span class="params">(<span class="type">int</span>[] a, <span class="type">int</span>[] b, <span class="type">int</span>[] c)</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">ok</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">len1</span> <span class="operator">=</span> (a[<span class="number">0</span>] - b[<span class="number">0</span>])*(a[<span class="number">0</span>] - b[<span class="number">0</span>]) + (a[<span class="number">1</span>] - b[<span class="number">1</span>])*(a[<span class="number">1</span>] - b[<span class="number">1</span>]);</span><br><span class="line">        <span class="type">int</span> <span class="variable">len2</span> <span class="operator">=</span> (a[<span class="number">0</span>] - c[<span class="number">0</span>])*(a[<span class="number">0</span>] - c[<span class="number">0</span>]) + (a[<span class="number">1</span>] - c[<span class="number">1</span>])*(a[<span class="number">1</span>] - c[<span class="number">1</span>]);</span><br><span class="line">        <span class="type">int</span> <span class="variable">len3</span> <span class="operator">=</span> (c[<span class="number">0</span>] - b[<span class="number">0</span>])*(c[<span class="number">0</span>] - b[<span class="number">0</span>]) + (c[<span class="number">1</span>] - b[<span class="number">1</span>])*(c[<span class="number">1</span>] - b[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ((len1 == len2 &amp;&amp; len1 + len2 == len3) || (len1 == len3 &amp;&amp; len1 + len3 == len2) || (len2 == len3 &amp;&amp; len2 + len3 == len1)) &#123;</span><br><span class="line">            ok = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!ok)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sideLength</span> <span class="operator">=</span> (len1 &lt; len2) ? Math.min(len1, len3) : Math.min(len2, len3);</span><br><span class="line">        <span class="keyword">if</span> (len == -<span class="number">1</span>)&#123;</span><br><span class="line">            len = sideLength;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (len == <span class="number">0</span> || len != sideLength) &#123;</span><br><span class="line">            <span class="comment">// 边长 == 0 或者三角形最短边 != 边长都不行</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2022-07-30-952-按公因数计算最大组件大小"><a href="#2022-07-30-952-按公因数计算最大组件大小" class="headerlink" title="2022.07.30 952. 按公因数计算最大组件大小"></a>2022.07.30 <a href="https://leetcode.cn/problems/largest-component-size-by-common-factor/">952. 按公因数计算最大组件大小</a></h3><ul><li>方法应该没什么问题，但是内存超限</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="comment">// 表示顶点是否被访问过</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span>[] visited;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span>[][] g;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span>[] len ;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> count;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">largestComponentSize</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">this</span>.g = <span class="keyword">new</span> <span class="title class_">int</span>[nums.length][nums.length];</span><br><span class="line">        <span class="built_in">this</span>.visited = <span class="keyword">new</span> <span class="title class_">int</span>[nums.length];</span><br><span class="line">        <span class="built_in">this</span>.len = <span class="keyword">new</span> <span class="title class_">int</span>[nums.length];</span><br><span class="line"><span class="comment">//        for (int i = 0; i &lt; nums.length; i++) &#123;</span></span><br><span class="line"><span class="comment">//            g[i][i] = 1;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; nums.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i == j) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">int</span> <span class="variable">fac</span> <span class="operator">=</span> commonFactor(nums[i], nums[j]);</span><br><span class="line">                <span class="keyword">if</span> (fac &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                    g[i][j] = <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        for (int[] ints : g) &#123;</span></span><br><span class="line"><span class="comment">//            for (int anInt : ints) &#123;</span></span><br><span class="line"><span class="comment">//                System.out.print(anInt + &quot; &quot;);</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//            System.out.println();</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">componentCount</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (visited[i] == <span class="number">0</span>) &#123;</span><br><span class="line">                count = <span class="number">0</span>;</span><br><span class="line">                dfs(i);</span><br><span class="line">                len[j++] = count;</span><br><span class="line">                componentCount++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        for (int value : len) &#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(&quot;value = &quot; + value);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        <span class="keyword">if</span> (componentCount == <span class="number">1</span>) &#123;</span><br><span class="line">            res = nums.length;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            Arrays.sort(len);</span><br><span class="line">            res = len[len.length-<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        System.out.println(&quot;componentCount = &quot; + componentCount);</span></span><br><span class="line"><span class="comment">//        System.out.println(&quot;res = &quot; + res);</span></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dfs</span><span class="params">(<span class="type">int</span> i)</span> &#123;</span><br><span class="line">        <span class="comment">// 表示 i 结点已访问</span></span><br><span class="line">        visited[i] = <span class="number">1</span>;</span><br><span class="line">        count++;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; g.length; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (visited[j] == <span class="number">0</span> &amp;&amp; g[i][j] == <span class="number">1</span>) &#123;</span><br><span class="line">                dfs(j);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">commonFactor</span><span class="params">(<span class="type">int</span> m, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (n &gt; m) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> n;</span><br><span class="line">            n = m;</span><br><span class="line">            m = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> m % n;</span><br><span class="line">        <span class="keyword">if</span> (num == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> n;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> commonFactor(n, num);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span>[] parent = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">100010</span>];</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span>[] rank = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">100010</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">largestComponentSize</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> nums.length;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">100010</span>; i++) &#123;</span><br><span class="line">            parent[i] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> num : nums) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span>; i * i &lt;= num; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (num % i == <span class="number">0</span>) &#123;</span><br><span class="line">                    union(num, i);</span><br><span class="line">                    union(num, num / i);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span>[] count = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">100010</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> num : nums) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">root</span> <span class="operator">=</span> find(num);</span><br><span class="line">            count[root]++;</span><br><span class="line">            res = Math.max(count[root],res);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">find</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (parent[x] != x) &#123;</span><br><span class="line">            parent[x] = find(parent[x]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> parent[x];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">union</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">rootx</span> <span class="operator">=</span> find(x);</span><br><span class="line">        <span class="type">int</span> <span class="variable">rooty</span> <span class="operator">=</span> find(y);</span><br><span class="line">        <span class="keyword">if</span> (rootx != rooty) &#123;</span><br><span class="line">            <span class="keyword">if</span> (rank[rootx] &gt; rank[rooty]) &#123;</span><br><span class="line">                parent[rooty] = rootx;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (rank[rootx] &lt; rank[rooty]) &#123;</span><br><span class="line">                parent[rootx] = rooty;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                parent[rooty] = rootx;</span><br><span class="line">                rank[rootx]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2022-07-31-1161-最大层内元素和"><a href="#2022-07-31-1161-最大层内元素和" class="headerlink" title="2022.07.31 1161. 最大层内元素和"></a>2022.07.31 <a href="https://leetcode.cn/problems/maximum-level-sum-of-a-binary-tree/">1161. 最大层内元素和</a></h3><ul><li>层序遍历二叉树</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int val, TreeNode left, TreeNode right) &#123;</span></span><br><span class="line"><span class="comment"> *         this.val = val;</span></span><br><span class="line"><span class="comment"> *         this.left = left;</span></span><br><span class="line"><span class="comment"> *         this.right = right;</span></span><br><span class="line"><span class="comment"> *     &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">maxLevelSum</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">layer</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">maxValue</span> <span class="operator">=</span> -<span class="number">100010</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        Queue&lt;TreeNode&gt;q = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;TreeNode&gt;();</span><br><span class="line">        q.add(root);</span><br><span class="line">        <span class="keyword">while</span>(!q.isEmpty()) &#123;</span><br><span class="line">            layer++;</span><br><span class="line">            <span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> q.size();</span><br><span class="line">            <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(number &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                TreeNode t=q.poll();</span><br><span class="line">                count += t.val;</span><br><span class="line">                <span class="keyword">if</span>(t.left!=<span class="literal">null</span>)&#123;</span><br><span class="line">                    q.add(t.left);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(t.right!=<span class="literal">null</span>)&#123;</span><br><span class="line">                    q.add(t.right);</span><br><span class="line">                &#125;</span><br><span class="line">                number--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (maxValue &lt; count) &#123;</span><br><span class="line">                res = layer;</span><br><span class="line">                maxValue = count;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2022-08-01-1374-生成每种字符都是奇数个的字符串"><a href="#2022-08-01-1374-生成每种字符都是奇数个的字符串" class="headerlink" title="2022.08.01 1374. 生成每种字符都是奇数个的字符串"></a>2022.08.01 <a href="https://leetcode.cn/problems/generate-a-string-with-characters-that-have-odd-counts/">1374. 生成每种字符都是奇数个的字符串</a></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">generateTheString</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">stringBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n-<span class="number">1</span>; i++) &#123;</span><br><span class="line">                stringBuilder.append(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            stringBuilder.append(<span class="string">&#x27;b&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">                stringBuilder.append(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> stringBuilder.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2022-08-02-622-设计循环队列"><a href="#2022-08-02-622-设计循环队列" class="headerlink" title="2022.08.02 622. 设计循环队列"></a>2022.08.02 <a href="https://leetcode.cn/problems/design-circular-queue/">622. 设计循环队列</a></h3><ul><li>偷懒做法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyCircularQueue</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> ArrayList&lt;Integer&gt; queue = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">maxLen</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyCircularQueue</span><span class="params">(<span class="type">int</span> k)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.maxLen = k;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">enQueue</span><span class="params">(<span class="type">int</span> value)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(queue.size() &lt; maxLen) &#123;</span><br><span class="line">            queue.add(value);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">deQueue</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!queue.isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; queue.size(); i++) &#123;</span><br><span class="line">                queue.set(i-<span class="number">1</span>,queue.get(i));</span><br><span class="line">            &#125;</span><br><span class="line">            queue.remove(queue.size()-<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">Front</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(!queue.isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">return</span> queue.get(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">Rear</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(!queue.isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">return</span> queue.get(queue.size()-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isEmpty</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> queue.isEmpty();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isFull</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(queue.size() &lt; maxLen) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>数组模拟</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyCircularQueue</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">front</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">rear</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> k;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span>[] nums;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyCircularQueue</span><span class="params">(<span class="type">int</span> k)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.k = k;</span><br><span class="line">        nums = <span class="keyword">new</span> <span class="title class_">int</span>[k];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">enQueue</span><span class="params">(<span class="type">int</span> value)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isFull()) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        nums[rear % k] = value;</span><br><span class="line">        rear++;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">deQueue</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        front++;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">Front</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> nums[front % k];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">Rear</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> nums[(rear - <span class="number">1</span>) % k];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isEmpty</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> front == rear;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isFull</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> rear - front == k;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2022-08-02-899-有序队列"><a href="#2022-08-02-899-有序队列" class="headerlink" title="2022.08.02 899. 有序队列"></a>2022.08.02 <a href="https://leetcode.cn/problems/orderly-queue/">899. 有序队列</a></h3><ul><li>当 <code>k == 1</code> 时，把第一个字符移动到最后，将每次的结果存入到数组中，最后进行排序</li><li>当 <code>k &gt; 1</code> 时，只需要直接排序即可（不太理解，看别人的题解的）</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">orderlyQueue</span><span class="params">(String s, <span class="type">int</span> k)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (k == <span class="number">1</span>) &#123;</span><br><span class="line">            String[] strs = <span class="keyword">new</span> <span class="title class_">String</span>[s.length()];</span><br><span class="line">            <span class="type">StringBuilder</span> <span class="variable">stringBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(s);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; s.length(); i++) &#123;</span><br><span class="line">                strs[i] = stringBuilder.toString();</span><br><span class="line">                stringBuilder.append(s.charAt(<span class="number">0</span>)).deleteCharAt(<span class="number">0</span>);</span><br><span class="line">                s = stringBuilder.toString();</span><br><span class="line">            &#125;</span><br><span class="line">            Arrays.sort(strs);</span><br><span class="line">            <span class="keyword">return</span> strs[<span class="number">0</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">char</span>[] chars = s.toCharArray();</span><br><span class="line">            Arrays.sort(chars);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>(chars);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>⚠️ 思考了一下都写在一个 markdown 文件中，后期文本量太大，还是决定拆分出来，每道题单独一个 markdown</p>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>SQL dialect is not configured.</title>
      <link href="/2022/07/16/SQL-dialect-is-not-configured/"/>
      <url>/2022/07/16/SQL-dialect-is-not-configured/</url>
      
        <content type="html"><![CDATA[<ul><li><p>原因：没有配置数据库</p></li><li><p>解决办法：</p><ol><li>打开 IDEA 设置</li><li>Language &amp; Frameworks</li><li>SQL Dialects</li><li>配置对应的数据库</li></ol><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220716101323.png" alt="截屏2022-07-16 10.12.00"></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>21. 合并两个有序链表</title>
      <link href="/2022/07/14/21-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8/"/>
      <url>/2022/07/14/21-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="21-合并两个有序链表"><a href="#21-合并两个有序链表" class="headerlink" title="21. 合并两个有序链表"></a><a href="https://leetcode.cn/problems/merge-two-sorted-lists/solution/yi-kan-jiu-hui-yi-xie-jiu-fei-xiang-jie-di-gui-by-/">21. 合并两个有序链表</a></h3><h4 id="迭代"><a href="#迭代" class="headerlink" title="迭代"></a>迭代</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> ListNode <span class="title function_">mergeTwoLists</span><span class="params">(ListNode list1, ListNode list2)</span> &#123;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">res</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ListNode</span>(-<span class="number">1</span>);</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">p</span> <span class="operator">=</span> res;</span><br><span class="line">        <span class="keyword">while</span>(list1 != <span class="literal">null</span> &amp;&amp; list2 != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (list1.val &lt;= list2.val) &#123;</span><br><span class="line">                p.next = list1;</span><br><span class="line">                list1 = list1.next;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                p.next = list2;</span><br><span class="line">                list2 = list2.next;</span><br><span class="line">            &#125;</span><br><span class="line">            p = p.next;</span><br><span class="line">        &#125;</span><br><span class="line">        p.next = list1 == <span class="literal">null</span> ? list2 : list1;</span><br><span class="line">        <span class="keyword">return</span> res.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>141. 环形链表</title>
      <link href="/2022/07/14/141-%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8/"/>
      <url>/2022/07/14/141-%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<p>快慢指针，<code>slow</code> 每次移动 <code>1</code>，<code>fast</code> 每次移动 <code>2</code>，如果存在环，二者一定会在环内相遇</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hasCycle</span><span class="params">(ListNode head)</span> &#123;</span><br><span class="line">       <span class="type">ListNode</span> <span class="variable">slow</span> <span class="operator">=</span> head;</span><br><span class="line">       <span class="type">ListNode</span> <span class="variable">fast</span> <span class="operator">=</span> head;</span><br><span class="line">       <span class="keyword">while</span>(fast != <span class="literal">null</span> &amp;&amp; fast.next != <span class="literal">null</span>) &#123;</span><br><span class="line">           slow = slow.next;</span><br><span class="line">           fast = fast.next.next;</span><br><span class="line">           <span class="keyword">if</span> (slow == fast) &#123;</span><br><span class="line">               <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>350. 两个数组的交集 II</title>
      <link href="/2022/07/10/350-%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E4%BA%A4%E9%9B%86-II/"/>
      <url>/2022/07/10/350-%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E4%BA%A4%E9%9B%86-II/</url>
      
        <content type="html"><![CDATA[<h4 id="哈希表"><a href="#哈希表" class="headerlink" title="哈希表"></a>哈希表</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] intersect(<span class="type">int</span>[] nums1, <span class="type">int</span>[] nums2) &#123;</span><br><span class="line">        <span class="type">int</span>[] count1 = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1001</span>];</span><br><span class="line">        <span class="type">int</span>[] count2 = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1002</span>];</span><br><span class="line">        HashMap&lt;Integer, Integer&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums1.length; i++) &#123;</span><br><span class="line">            count1[nums1[i]]++;</span><br><span class="line">            hashMap.put(nums1[i],<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums2.length; i++) &#123;</span><br><span class="line">            count2[nums2[i]]++;</span><br><span class="line">            <span class="keyword">if</span> (hashMap.containsKey(nums2[i])) &#123;</span><br><span class="line">                hashMap.put(nums2[i], <span class="number">2</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span>[] res = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1000</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        Iterator&lt;Map.Entry&lt;Integer, Integer&gt;&gt; iterator = hashMap.entrySet().iterator();</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">            Map.Entry&lt;Integer,Integer&gt; next =  iterator.next();</span><br><span class="line">            <span class="keyword">if</span> (next.getValue() == <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> Math.min(count1[next.getKey()],count2[next.getKey()]);</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">                    res[j++] = next.getKey();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        res = Arrays.copyOf(res,j);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] intersect(<span class="type">int</span>[] nums1, <span class="type">int</span>[] nums2) &#123;</span><br><span class="line">        HashMap&lt;Integer, Integer&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        ArrayList&lt;Integer&gt; arrayList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i : nums1) &#123;</span><br><span class="line">            <span class="type">Integer</span> <span class="variable">value</span> <span class="operator">=</span> map.get(i);</span><br><span class="line">            map.put(i, value == <span class="literal">null</span> ? <span class="number">1</span> : value + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums2.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (map.containsKey(nums2[i])) &#123;</span><br><span class="line">                <span class="type">Integer</span> <span class="variable">value</span> <span class="operator">=</span> map.get(nums2[i]);</span><br><span class="line">                <span class="keyword">if</span> (value &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                    arrayList.add(nums2[i]);</span><br><span class="line">                    value--;</span><br><span class="line">                    map.put(nums2[i], value);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// ArrayList to int[]</span></span><br><span class="line">        <span class="type">int</span>[] res = arrayList.stream().mapToInt(i -&gt; i).toArray();</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>88. 合并两个有序数组</title>
      <link href="/2022/07/08/88-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/"/>
      <url>/2022/07/08/88-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h3 id="88-合并两个有序数组"><a href="#88-合并两个有序数组" class="headerlink" title="88. 合并两个有序数组"></a><a href="https://leetcode.cn/problems/merge-sorted-array/">88. 合并两个有序数组</a></h3><h4 id="开新数组"><a href="#开新数组" class="headerlink" title="开新数组"></a>开新数组</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">merge</span><span class="params">(<span class="type">int</span>[] nums1, <span class="type">int</span> m, <span class="type">int</span>[] nums2, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">index1</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">index2</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span>[] res = <span class="keyword">new</span> <span class="title class_">int</span>[m + n];</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (index1 &lt; m &amp;&amp; index2 &lt; n) &#123;</span><br><span class="line">            <span class="keyword">if</span> (nums1[index1] &lt;= nums2[index2]) &#123;</span><br><span class="line">                res[i++] = nums1[index1++];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                res[i++] = nums2[index2++];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (index1 &lt; m) &#123;</span><br><span class="line">            res[i++] = nums1[index1++];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (index2 &lt; n) &#123;</span><br><span class="line">            res[i++] = nums2[index2++];</span><br><span class="line">        &#125;</span><br><span class="line">        System.arraycopy(res, <span class="number">0</span>, nums1, <span class="number">0</span>, res.length);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="双指针"><a href="#双指针" class="headerlink" title="双指针"></a>双指针</h4><ul><li>注意这里要从 <code>nums1</code> 的末尾开始赋值，所以在比较大小时，较大的一方放入 <code>nums1</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">merge</span><span class="params">(<span class="type">int</span>[] nums1, <span class="type">int</span> m, <span class="type">int</span>[] nums2, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">p1</span> <span class="operator">=</span> m - <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">p2</span> <span class="operator">=</span> n - <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> m + n - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (p1 &gt;= <span class="number">0</span> &amp;&amp; p2 &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (nums1[p1] &gt;= nums2[p2]) &#123;</span><br><span class="line">                nums1[len--] = nums1[p1--];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                nums1[len--] = nums2[p2--];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (p1 &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            nums1[len--] = nums1[p1--];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (p2 &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            nums1[len--] = nums2[p2--];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>53. 最大子数组和</title>
      <link href="/2022/07/07/53-%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C/"/>
      <url>/2022/07/07/53-%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<h4 id="贪心算法"><a href="#贪心算法" class="headerlink" title="贪心算法"></a>贪心算法</h4><p>如果当前和已经为负数 ➡️ 直接抛弃，因为负数只会拖累后续的和 ➡️ 从 nums[i+1] 开始重新计算</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">maxSubArray</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> nums[<span class="number">0</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> sum;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (sum &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                sum = nums[i];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                sum += nums[i];</span><br><span class="line">            &#125;</span><br><span class="line">            res = Math.max(sum,res);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h4><ol><li><p>确定 dp 数组（dp table）以及下标的含义</p><p>dp[i] ➡️ 到 i 下标为止的最大连续子序列和</p></li><li><p>确定递推公式</p><ul><li>dp[i-1] &gt; 0 ➡️ dp[i] &#x3D; dp[i-1] + nums[i]</li><li>dp[i-1] &lt; 0 ➡️ dp[i] &#x3D; nums[i]</li></ul></li><li><p>dp 数组如何初始化</p><p>dp[0] &#x3D; nums[0]</p></li><li><p>确定遍历顺序</p><p>从前向后</p></li><li><p>举例推导 dp 数组</p><p>示例：nums &#x3D; [-2, 1, -3, 4, -1, 2, 1, -5, 4]</p><p>对应的 dp 数组：dp &#x3D; [-2, 1, -2, 4, 3, 5, 6, 1, 5]</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">maxSubArray</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">dp</span> <span class="operator">=</span> nums[<span class="number">0</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> dp;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (dp &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                dp = nums[i];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                dp += nums[i];</span><br><span class="line">            &#125;</span><br><span class="line">            res = Math.max(res,dp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>217. 存在重复元素</title>
      <link href="/2022/07/07/217-%E5%AD%98%E5%9C%A8%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0/"/>
      <url>/2022/07/07/217-%E5%AD%98%E5%9C%A8%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="217-存在重复元素"><a href="#217-存在重复元素" class="headerlink" title="217. 存在重复元素"></a><a href="https://leetcode.cn/problems/contains-duplicate/">217. 存在重复元素</a></h3><ul><li>利用 HashSet 的元素唯一特性</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">containsDuplicate</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        HashSet&lt;Integer&gt; integers = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Integer value : nums) &#123;</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">contains</span> <span class="operator">=</span> integers.contains(value);</span><br><span class="line">            <span class="keyword">if</span> (contains) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            integers.add(value);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>牛客 Java 专项练习合集</title>
      <link href="/2022/07/05/%E7%89%9B%E5%AE%A2-Java-%E4%B8%93%E9%A1%B9%E7%BB%83%E4%B9%A0%E5%90%88%E9%9B%86/"/>
      <url>/2022/07/05/%E7%89%9B%E5%AE%A2-Java-%E4%B8%93%E9%A1%B9%E7%BB%83%E4%B9%A0%E5%90%88%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h4 id="java-的-4-类流程控制语句"><a href="#java-的-4-类流程控制语句" class="headerlink" title="java 的 4 类流程控制语句"></a>java 的 4 类流程控制语句</h4><ol><li>循环语句：while，for，do while</li><li>选择语句（分支语句）：if,switch</li><li>跳转语句：break,continue,break,label</li><li>异常处理语句：try catch finally，throw</li></ol><h4 id="hashCode"><a href="#hashCode" class="headerlink" title="hashCode"></a>hashCode</h4><p>将对象的地址值映射为 integer 类型的哈希值。但 <code>hashCode()</code> 并不完全可靠的，有时候不同的对象他们生成的 hashcode 也会一样，因此 <code>hashCode()</code> 只能说是<strong>大部分时候可靠</strong> ➡️ 所以需要重写 <code>equals()</code></p><p>但是重写的效率又不如直接用 <code>hashCode()</code> 来的高 ➡️ 所以一般先比较 hashCode，hashCode 不同肯定是不同对象，如果 hashCode 相同，再启用 <code>equals()</code></p><h4 id="构造方法的调用"><a href="#构造方法的调用" class="headerlink" title="构造方法的调用"></a>构造方法的调用</h4><ol><li>在类内部可以用户可以使用关键字 <code>this. 构造方法名 ()</code> 调用（ 参数决定调用的是本类对应的构造方法）</li><li>在子类中用户可以通过关键字 <code>super. 父类构造方法名 ()</code> 调用（ 参数决定调用的是父类对应的构造方法。）</li><li>反射机制对于任意一个类，都能够知道这个类的所有属性和方法，包括类的构造方法。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>14. 最长公共前缀</title>
      <link href="/2022/07/04/14-%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80/"/>
      <url>/2022/07/04/14-%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80/</url>
      
        <content type="html"><![CDATA[<h3 id="14-最长公共前缀"><a href="#14-最长公共前缀" class="headerlink" title="14. 最长公共前缀"></a><a href="https://leetcode.cn/problems/longest-common-prefix/">14. 最长公共前缀</a></h3><ul><li>若字符串数组为空，则直接 <code>return</code></li><li>若不为空，则把 <code>strs[0]</code> 赋值给 <code>res</code>，进行循环判断</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">longestCommonPrefix</span><span class="params">(String[] strs)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (strs.length == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">String</span> <span class="variable">res</span> <span class="operator">=</span> strs[<span class="number">0</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; res.length(); i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt; strs.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i &gt;= strs[j].length()) &#123;</span><br><span class="line">                    <span class="keyword">return</span> res.substring(<span class="number">0</span>,i);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (res.charAt(i) != strs[j].charAt(i)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> res.substring(<span class="number">0</span>,i);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>项目：用户中心</title>
      <link href="/2022/07/03/%E9%A1%B9%E7%9B%AE%EF%BC%9A%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83/"/>
      <url>/2022/07/03/%E9%A1%B9%E7%9B%AE%EF%BC%9A%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83/</url>
      
        <content type="html"><![CDATA[<h1 id="用户中心"><a href="#用户中心" class="headerlink" title="用户中心"></a>用户中心</h1><h2 id="1-前期纲要"><a href="#1-前期纲要" class="headerlink" title="1. 前期纲要"></a>1. 前期纲要</h2><h3 id="1-1-项目流程"><a href="#1-1-项目流程" class="headerlink" title="1.1 项目流程"></a>1.1 项目流程</h3><p>需求分析 ➡️ 设计（概要设计、详细设计）➡️ 技术选型 ➡️ 初始化 &#x2F; 引入需要的技术 ➡️ 写 demo ➡️ 写代码（实现业务逻辑）➡️ 测试（单元测试）➡️ 代码提交 &#x2F; code review ➡️ 部署 ➡️ 发布</p><h3 id="1-2-需求分析"><a href="#1-2-需求分析" class="headerlink" title="1.2 需求分析"></a>1.2 需求分析</h3><ol><li>登录 &#x2F; 注册</li><li>用户管理（仅管理员可见）</li><li>用户校验</li></ol><h3 id="1-3-技术选型"><a href="#1-3-技术选型" class="headerlink" title="1.3 技术选型"></a>1.3 技术选型</h3><ul><li>前端：三件套 + React + Ant Design + Umi + Ant Design Pro （现成管理系统）</li><li>后端：<ul><li>Java</li><li>Spring（依赖注入框架，帮助你管理 Java 对象，集成一些其他的内容）</li><li>SpringMVC (web 框架，提供接口访问、restful 接口等能力）</li><li>MyBatis（Java 操作数据库的框架，持久层框架，对jdbc 的封装）</li><li>MyBatis-Plus （对 mybatis 的增强，不用写 sql 也能实现增删改查）</li><li>SpringBoot（快速启动 &#x2F; 快速集成项目。不用自己管理 Spring 配置，不用自己整合各种框架）</li><li>Junit 单元测试库</li><li>MySQL</li></ul></li><li>部署：服务器 &#x2F; 容器</li></ul><h2 id="2-前端"><a href="#2-前端" class="headerlink" title="2. 前端"></a>2. 前端</h2><h2 id="3-后端"><a href="#3-后端" class="headerlink" title="3. 后端"></a>3. 后端</h2><h3 id="3-1-项目目录"><a href="#3-1-项目目录" class="headerlink" title="3.1 项目目录"></a>3.1 项目目录</h3><ul><li>controller ➡️ 请求层，协同请求，不做任何业务处理</li><li>service ➡️ 业务逻辑</li><li>mapper ➡️ 数据访问层（crud）</li><li>model ➡️ 对应数据库中的模型</li><li>utils ➡️ 工具类</li></ul><h3 id="3-2-代码"><a href="#3-2-代码" class="headerlink" title="3.2 代码"></a>3.2 代码</h3><ul><li>根据数据库中的表，自动生成 model ➡️ plugin：MyBatisX</li><li>Lombox?</li><li>鼠标放在类名、接口名上，按 <code>alt + enter</code></li><li>plugin：sonarlint ➡️ 检查代码中不规范的地方</li><li>plugin：GenerateAllSetter ➡️ 一键生成对象的所有 Set 方法</li><li><code>ctrl + p</code> 查看方法中的参数</li><li>数据库字段用下划线会规范一些</li><li><code>prsf</code>：快速输入 <code>private static final</code></li></ul><h4 id="登录接口"><a href="#登录接口" class="headerlink" title="登录接口"></a>登录接口</h4><ul><li>接受参数：用户账户、米啊吗</li><li>请求类型：POST</li><li>请求体：JSON</li><li>返回值：用户信息（脱敏）</li></ul><h4 id="登录逻辑"><a href="#登录逻辑" class="headerlink" title="登录逻辑"></a>登录逻辑</h4><p>tips：别急着写，多思考后再写</p><ul><li>校验账户名和密码是否合法</li><li>校验账户名和密码是否正确（和数据中的数据对比）</li><li>记录用户的登录态（session），存放到服务器上（Tomcat）</li><li>返回用户信息</li></ul><h4 id="如何知道是哪个用户登录"><a href="#如何知道是哪个用户登录" class="headerlink" title="如何知道是哪个用户登录"></a>如何知道是哪个用户登录</h4><ol><li><p>连接服务器端后，得到一个 session 状态（匿名会话），返回给前端</p></li><li><p>登录成功后，得到了登录成功的 session，并且给该 session 设置一些值（比如用户信息），返回给前端一个设置 cookie 的 ”命令“ </p><p><strong>session &#x3D;&gt; cookie</strong> </p></li><li><p>前端接收到后端的命令后，设置 cookie，保存到浏览器内</p></li><li><p>前端再次请求后端的时候（相同的域名），在请求头中带上cookie去请求</p></li><li><p>后端拿到前端传来的 cookie，找到对应的 session</p></li><li><p>后端从 session 中可以取出基于该 session 存储的变量（用户的登录信息、登录名）</p></li></ol><h4 id="UserController"><a href="#UserController" class="headerlink" title="UserController"></a>UserController</h4><ul><li>@<code>RestController</code>：适用于编写 restful 风格的 api，返回值默认为 json 类型</li><li>plugin：Auto fill… 自动填充方法参数</li></ul><h4 id="用户管理接口"><a href="#用户管理接口" class="headerlink" title="用户管理接口"></a>用户管理接口</h4><ul><li>必须鉴权</li><li>查询用户<ul><li>根据用户名查询</li></ul></li><li>删除用户（管理员权限，<code>role</code> 字段为 <code>1</code>）</li></ul><h4 id="写代码流程"><a href="#写代码流程" class="headerlink" title="写代码流程"></a>写代码流程</h4><ul><li>设计</li><li>代码实现</li><li>持续优化（<ul><li>复用代码</li><li>提取公共逻辑</li><li>常量：会有多处代码引用的资源，应作为公共常量提取出来</li></ul></li></ul><h4 id="代理"><a href="#代理" class="headerlink" title="代理"></a>代理</h4><ul><li>正向代理：替客户端向服务器发送请求</li><li>反向代理：替服务接受请求</li></ul><hr><h3 id="2022-年-7-月-30-日"><a href="#2022-年-7-月-30-日" class="headerlink" title="2022 年 7 月 30 日"></a>2022 年 7 月 30 日</h3><h4 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h4><ul><li><p>mapper（dao）：访问数据库，进行 <code>crud</code></p></li><li><p>controller：接收前端页面传递过来的请求，调用 service 层的方法</p></li><li><p>service：调用数据层，进行业务逻辑的编写，比如&#x3D;&#x3D;登录&#x3D;&#x3D;、&#x3D;&#x3D;注册&#x3D;&#x3D;</p></li><li><p>model：数据库中的字段 ➡️ Java 类</p></li><li><p>utils：存放工具类</p></li><li><p>在 SpringBoot 的引导类中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@MapperScan(&quot;com.example.mapper&quot;)</span></span><br></pre></td></tr></table></figure><p>可以将该 mapper 包下的所有接口所动态生成的代理类，交给 IOC 容器来管理</p><p>IOC 中只能存放类的 bean，不能存放接口的 bean</p></li><li><p>Wrapper：MyBatis-Plus 的条件构造器</p></li><li><p>输出 List 集合</p><p><code>list.forEach(System.out::println);</code></p></li><li><p><code>@TableName(&quot;表名&quot;)</code></p><p>MyBatis 访问的表名</p></li><li><p>设置访问表名的前缀</p><p>配置文件中：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span> </span><br><span class="line">  <span class="attr">global-config:</span> </span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="attr">table-prefix:</span> <span class="string">&quot;xx&quot;</span></span><br></pre></td></tr></table></figure></li><li><p><code>@TableId</code>：指定某个字段为主键</p></li><li><p><code>@TableField(&quot;列名&quot;)</code>：指定属性所对应表中的字段名</p></li><li><p><code>@TableLogic</code>：逻辑删除</p></li><li><p>Wrapper</p></li><li><p>Controller 中复杂的逻辑就可以不断优化到 Service 中</p></li><li></li></ul><h4 id="用户的注册逻辑"><a href="#用户的注册逻辑" class="headerlink" title="用户的注册逻辑"></a>用户的注册逻辑</h4><ul><li>用户在前端输入账户和密码、以及校验码</li><li>校验用户的账户、密码、校验密码，是否符合要求<ul><li>非空</li><li>账户长度 不小于 4位</li><li>密码就 不小于 8位</li><li>账户不能重复</li><li>账户不包含特殊字符</li><li>密码和校验密码相同</li></ul></li><li>对密码进行加密（密码千万不要直接以明文存储到数据库中）</li><li>向数据库插入用戶数据</li></ul>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>个人 Mac 清理</title>
      <link href="/2022/07/02/%E4%B8%AA%E4%BA%BA-Mac-%E6%B8%85%E7%90%86/"/>
      <url>/2022/07/02/%E4%B8%AA%E4%BA%BA-Mac-%E6%B8%85%E7%90%86/</url>
      
        <content type="html"><![CDATA[<ol><li>使用 <a href="https://github.com/mac-cleanup/mac-cleanup-sh">mac-cleanup-sh</a></li><li><a href="https://pretty-clean.github.io/">PrettyClean</a></li><li><a href="https://daisydiskapp.com/index.html">DaisyDisk</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ON JAVA 读书笔记</title>
      <link href="/2022/07/02/ON%20JAVA%20%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/07/02/ON%20JAVA%20%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>“我的语言之局限，即我的世界之局限。” —— Ludwig Wittgenstein</p></blockquote><h1 id="0-导读"><a href="#0-导读" class="headerlink" title="0. 导读"></a>0. 导读</h1><ul><li>把一切都封装成对象其实是有些激进的</li><li>每一种语言都存在一定的设计缺陷，了解这些设计缺陷，了解这门语言的局限性，能帮助你更好的使用这门语言</li></ul><h1 id="1-什么是对象？"><a href="#1-什么是对象？" class="headerlink" title="1. 什么是对象？"></a>1. 什么是对象？</h1><ul><li>OOP：Object-Oriented Programming</li><li>所有的编程语言都是一种抽象，我们能够解决问题的复杂程度往往就取决于抽象的类型和质量</li><li>每一个对象都有状态，并且可以执行一些特定的操作</li></ul><h1 id="13-函数式编程"><a href="#13-函数式编程" class="headerlink" title="13. 函数式编程"></a>13. 函数式编程</h1>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>求职</title>
      <link href="/2022/07/01/%E6%B1%82%E8%81%8C/"/>
      <url>/2022/07/01/%E6%B1%82%E8%81%8C/</url>
      
        <content type="html"><![CDATA[<h3 id="1-求职三件套"><a href="#1-求职三件套" class="headerlink" title="1. 求职三件套"></a>1. 求职三件套</h3><h4 id="1-1-基础"><a href="#1-1-基础" class="headerlink" title="1.1 基础"></a>1.1 基础</h4><p>一门语言 + 数据结构 + 操作系统 + 计算机网络，简单来说就是背<strong>八股文</strong></p><p>​个人认为，应届生找工作，基础真的是重中之重，不追求过多的技能栈，已学的技能掌握越扎实越好，面试官总能在一个问题上一直深挖，如果你能一直答下去，这差距就拉开了。</p><h4 id="1-2-算法"><a href="#1-2-算法" class="headerlink" title="1.2 算法"></a>1.2 算法</h4><p>猛刷题（LeetCode or 牛客）</p><ul><li><a href="https://articles.zsxq.com/id_ravfnzgmxlnv.html">LeetCode 刷题攻略</a></li></ul><h4 id="1-3-项目"><a href="#1-3-项目" class="headerlink" title="1.3 项目"></a>1.3 项目</h4><p>1 ～ 2 个非常熟悉的项目，可以体现自身的技术栈</p><ul><li><a href="https://wx.zsxq.com/dweb2/index/topic_detail/415444118114528">选择项目时的注意事项</a></li></ul><h3 id="2-进度规划"><a href="#2-进度规划" class="headerlink" title="2. 进度规划"></a>2. 进度规划</h3><h4 id="2-1-前期"><a href="#2-1-前期" class="headerlink" title="2.1 前期"></a>2.1 前期</h4><p>找工作的时间点：</p><ul><li>秋招提前批：六、七月（最早的一批，好机会）</li><li>秋招大概是金九银十 (也就是每年的九月和十月)</li><li>春招大概是金三银四 (也就是每年的三月和四月，但春招招聘的岗位相比较秋招来说会比较少)</li></ul><p><a href="https://articles.zsxq.com/id_hnplsj7wzmp6.html">秋招经验分享贴 – 大虾</a></p><p><a href="https://wx.zsxq.com/dweb2/index/topic_detail/415414182812188">如何优化自己简历上的项目</a></p><h3 id="3-找工作软件"><a href="#3-找工作软件" class="headerlink" title="3. 找工作软件"></a>3. 找工作软件</h3><ul><li>实习僧（主要是实习）</li><li>牛客网</li><li>公司官网或公司微信招聘公众号（牛客和这个会有一些内推信息，还可以</li><li>智联招聘</li><li>boss 直聘</li><li>前程无忧</li><li>拉勾招聘</li></ul>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>刷题</title>
      <link href="/2022/06/28/%E5%88%B7%E9%A2%98-md/"/>
      <url>/2022/06/28/%E5%88%B7%E9%A2%98-md/</url>
      
        <content type="html"><![CDATA[<ul><li>从【学习板块 LeetBook】刷起，从【简单的】刷起，从【通过率高】的刷起！</li><li>看看 <a href="https://leetcode.cn/leetbook/">LeetBook</a>？</li><li>可以打一打牛客、LeetCode 的周赛</li><li><a href="https://www.programmercarl.com/">代码随想录</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Homebrew MySQL</title>
      <link href="/2022/06/28/Homebrew-MySQL/"/>
      <url>/2022/06/28/Homebrew-MySQL/</url>
      
        <content type="html"><![CDATA[<ul><li><p>to connet run</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot</span><br></pre></td></tr></table></figure></li><li><p>If you need to have <a href="mailto:&#109;&#x79;&#x73;&#x71;&#108;&#64;&#x35;&#46;&#x37;">mysql@5.7</a> first in your PATH, run:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;export PATH=&quot;/opt/homebrew/opt/mysql@5.7/bin:$PATH&quot;&#x27; &gt;&gt; ~/.zshrc</span><br></pre></td></tr></table></figure></li><li><p>For compilers to find <a href="mailto:&#x6d;&#x79;&#x73;&#113;&#x6c;&#64;&#53;&#x2e;&#55;">mysql@5.7</a> you may need to set:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export LDFLAGS=&quot;-L/opt/homebrew/opt/mysql@5.7/lib&quot;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export CPPFLAGS=&quot;-I/opt/homebrew/opt/mysql@5.7/include&quot;</span><br></pre></td></tr></table></figure></li><li><p>后台启动 MySQL</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew services start mysql</span><br></pre></td></tr></table></figure><p>前台启动 mysql (关闭控制台，服务停止)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql.server start</span><br></pre></td></tr></table></figure><p>To restart <a href="mailto:&#x6d;&#x79;&#115;&#x71;&#x6c;&#64;&#x35;&#46;&#x37;">mysql@5.7</a> after an upgrade:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew services restart mysql@5.7</span><br></pre></td></tr></table></figure></li><li><p>if you don’t want&#x2F;need a background service you can just run:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/homebrew/opt/mysql@5.7/bin/mysqld_safe --datadir=/opt/homebrew/var/mysql</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/homebrew/opt/mysql/bin/mysqld_safe --datadir=/opt/homebrew/var/mysql</span><br></pre></td></tr></table></figure></li><li><p>连接 MySQL</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure></li><li><p>查看 MySQL 的端口号</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">global</span> variables <span class="keyword">like</span> <span class="string">&#x27;port&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>检查MySQL是否正在运行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql.server status</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>8. 字符串转换整数 (atoi)</title>
      <link href="/2022/06/26/8-%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%95%B4%E6%95%B0-atoi/"/>
      <url>/2022/06/26/8-%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%95%B4%E6%95%B0-atoi/</url>
      
        <content type="html"><![CDATA[<h3 id="8-字符串转换整数-atoi"><a href="#8-字符串转换整数-atoi" class="headerlink" title="8. 字符串转换整数 (atoi)"></a><a href="https://leetcode.cn/problems/string-to-integer-atoi/">8. 字符串转换整数 (atoi)</a></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">myAtoi</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">res</span> <span class="operator">=</span> <span class="number">0</span>; <span class="comment">// 用 long 不够</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> s.length();</span><br><span class="line">        <span class="type">char</span>[] chars = s.toCharArray();</span><br><span class="line">        <span class="comment">// 去除前导空格</span></span><br><span class="line">        <span class="keyword">while</span>(index &lt; len) &#123;</span><br><span class="line">            <span class="keyword">if</span> (chars[index] == <span class="string">&#x27; &#x27;</span>) &#123;</span><br><span class="line">                index++;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// s = &quot;     &quot;</span></span><br><span class="line">        <span class="keyword">if</span> (index == len) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 判断正负</span></span><br><span class="line">        <span class="keyword">if</span> (chars[index] == <span class="string">&#x27;-&#x27;</span>) &#123;</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">            index++;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (chars[index] == <span class="string">&#x27;+&#x27;</span>) &#123;</span><br><span class="line">            index++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (index &lt; len) &#123;</span><br><span class="line">            <span class="keyword">if</span> (chars[index] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; chars[index] &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">                res = res * <span class="number">10</span> + (chars[index] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            index++;</span><br><span class="line">        &#125;</span><br><span class="line">        res = flag ? res : -res;</span><br><span class="line">        <span class="keyword">if</span> (res &gt; Integer.MAX_VALUE) &#123;</span><br><span class="line">            res = Integer.MAX_VALUE;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (res &lt; Integer.MIN_VALUE) &#123;</span><br><span class="line">            res = Integer.MIN_VALUE;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (<span class="type">int</span>) res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>7. 整数反转</title>
      <link href="/2022/06/23/7-%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC/"/>
      <url>/2022/06/23/7-%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC/</url>
      
        <content type="html"><![CDATA[<h4 id="字符串反转"><a href="#字符串反转" class="headerlink" title="字符串反转"></a>字符串反转</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">reverse</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">        <span class="type">long</span> <span class="variable">ans</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">stringBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        stringBuilder.append(x);</span><br><span class="line">        <span class="keyword">if</span> (stringBuilder.charAt(<span class="number">0</span>) == <span class="string">&#x27;-&#x27;</span>) &#123;</span><br><span class="line">            stringBuilder = <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(stringBuilder.substring(<span class="number">1</span>, stringBuilder.length()));</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        stringBuilder.reverse();</span><br><span class="line">        ans = Long.parseLong(stringBuilder.toString());</span><br><span class="line">        <span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">            ans = -ans;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">compareNum</span> <span class="operator">=</span> (<span class="type">int</span>)ans;</span><br><span class="line">        <span class="keyword">if</span> (compareNum != ans) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> compareNum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="数学方法"><a href="#数学方法" class="headerlink" title="数学方法"></a>数学方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">reverse</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">        <span class="type">long</span> <span class="variable">res</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (x != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> x % <span class="number">10</span>;</span><br><span class="line">            res = res * <span class="number">10</span> + temp;</span><br><span class="line">            x /= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (<span class="type">int</span>)res == res? (<span class="type">int</span>)res : <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>6. Z 字形变换</title>
      <link href="/2022/06/22/6-Z-%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/"/>
      <url>/2022/06/22/6-Z-%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<h3 id="6-Z-字形变换"><a href="#6-Z-字形变换" class="headerlink" title="6. Z 字形变换"></a><a href="https://leetcode.cn/problems/zigzag-conversion/">6. Z 字形变换</a></h3><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>题解 1：二维数组模拟</p><p>题解 2：</p><h4 id="题解-1"><a href="#题解-1" class="headerlink" title="题解 1"></a>题解 1</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">convert</span><span class="params">(String s, <span class="type">int</span> numRows)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (numRows == <span class="number">0</span> || numRows == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> s;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">res</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="type">char</span>[][] chars = <span class="keyword">new</span> <span class="title class_">char</span>[numRows][<span class="number">1000</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>, k = <span class="number">0</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; s.length(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (j == numRows) &#123;</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">                j = numRows - <span class="number">2</span>;</span><br><span class="line">                k++;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (j == -<span class="number">1</span>) &#123;</span><br><span class="line">                k--;</span><br><span class="line">                j = <span class="number">1</span>;</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">                chars[j++][k] = s.charAt(i);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                chars[j--][k++] = s.charAt(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span>[] aChar : chars) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">char</span> c : aChar) &#123;</span><br><span class="line">                <span class="keyword">if</span> (c != <span class="number">0</span>) &#123;</span><br><span class="line">                    res.append(c);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>5. 最长回文子串</title>
      <link href="/2022/06/20/5-%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2-1/"/>
      <url>/2022/06/20/5-%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2-1/</url>
      
        <content type="html"><![CDATA[<h4 id="双循环暴力解"><a href="#双循环暴力解" class="headerlink" title="双循环暴力解"></a>双循环暴力解</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">longestPalindrome</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">res</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (s.length() == <span class="number">1</span> || isPalindrome(s)) &#123;</span><br><span class="line">            <span class="keyword">return</span> s;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; s.length() - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i + <span class="number">1</span>; j &lt; s.length() + <span class="number">1</span>; j++) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">subString</span> <span class="operator">=</span> s.substring(i, j);</span><br><span class="line">                <span class="keyword">if</span> (subString.length() &gt;= res.length()) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (isPalindrome(subString)) &#123;</span><br><span class="line">                        res = subString;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Boolean <span class="title function_">isPalindrome</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">halfOfLength</span> <span class="operator">=</span> s.length() / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>, j = s.length() - <span class="number">1</span>; i &lt;= halfOfLength; i++, j--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (s.charAt(i) != s.charAt(j)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="找规律"><a href="#找规律" class="headerlink" title="找规律"></a>找规律</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">convert</span><span class="params">(String s, <span class="type">int</span> numRows)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (numRows == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> s;</span><br><span class="line">        &#125;</span><br><span class="line">        String[] stringArray = <span class="keyword">new</span> <span class="title class_">String</span>[numRows];</span><br><span class="line">        Arrays.fill(stringArray, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        System.out.println(stringArray);</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">stringBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="type">char</span>[] chars = s.toCharArray();</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">period</span> <span class="operator">=</span> numRows * <span class="number">2</span> - <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; chars.length; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">mod</span> <span class="operator">=</span> i % period;</span><br><span class="line">            <span class="keyword">if</span> (mod &lt; numRows) &#123;</span><br><span class="line">                stringArray[mod] += chars[i];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                stringArray[period - mod] += chars[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (String str:stringArray</span><br><span class="line">             ) &#123;</span><br><span class="line">            stringBuilder.append(str);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> stringBuilder.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Google 搜索 tips</title>
      <link href="/2022/06/20/Google-%E6%90%9C%E7%B4%A2-tips/"/>
      <url>/2022/06/20/Google-%E6%90%9C%E7%B4%A2-tips/</url>
      
        <content type="html"><![CDATA[<ul><li><code>“”</code>：完全匹配</li><li><code>-</code>：排除内容</li><li><code>*</code>：通配符或未知字词，比如一串命令中间忘记是什么，可以用 <code>*</code> 代替</li><li><code>year1..year2</code>：指定搜索结果的日期范围</li><li>OR&#x2F;AND：逻辑或&#x2F;逻辑与拼接关键词</li><li><code>site:+ 网址 + 关键词</code>：站内搜索</li><li><code>define: 关键字</code>：查询关键字的定义</li></ul>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>关于无法 git clone 问题</title>
      <link href="/2022/06/20/%E5%85%B3%E4%BA%8E%E6%97%A0%E6%B3%95-git-clone-%E9%97%AE%E9%A2%98/"/>
      <url>/2022/06/20/%E5%85%B3%E4%BA%8E%E6%97%A0%E6%B3%95-git-clone-%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>事情是这样</p><p>我在看一篇 blog 中提到的一个 <code>oh-my-zsh</code> 的插件，想 clone 下来用一下，命令如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions</span><br></pre></td></tr></table></figure><p>然后发现怎么试都没有办法 clone 下来，即使我已经配置了终端代理环境</p><p>最后看了一圈，解决办法是把命令中的 <code>git://</code> 替换成 <code>https://</code></p><p>建议同时修改一下 <code>git</code> 的全局配置，避免以后在同样的事情上浪费时间</p><p>全局 git 配置文件路径：<code>~/.gitconfig</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global url.&quot;https://&quot;.insteadOf git://</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>3. 无重复字符的最长子串</title>
      <link href="/2022/06/19/3-%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2-1/"/>
      <url>/2022/06/19/3-%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2-1/</url>
      
        <content type="html"><![CDATA[<h3 id="3-无重复字符的最长子串"><a href="#3-无重复字符的最长子串" class="headerlink" title="3. 无重复字符的最长子串"></a><a href="https://leetcode.cn/problems/longest-substring-without-repeating-characters/">3. 无重复字符的最长子串</a></h3><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>遍历字符串，将字符作为 <code>key</code>，下标作为 <code>value</code>，存入 <code>HashMap</code> 中</p><p>当发现重复字符时，就从 <code>HashMap</code> 中取出该字符的下标 <code>x</code>，之后清空 <code>HashMap</code>，从下标 <code>x</code> 处重新开始遍历</p><h4 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">lengthOfLongestSubstring</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (s.length() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        HashMap&lt;Character, Integer&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">int</span> <span class="variable">maxLength</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; s.length();) &#123;</span><br><span class="line">            <span class="keyword">if</span> (hashMap.containsKey(s.charAt(i))) &#123;</span><br><span class="line">                i = hashMap.get(s.charAt(i));</span><br><span class="line">                hashMap.clear();</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                hashMap.put(s.charAt(i),i);</span><br><span class="line">            &#125;</span><br><span class="line">            i++;</span><br><span class="line">            maxLength = Math.max(hashMap.size(),maxLength);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> maxLength;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Mac 心得</title>
      <link href="/2022/06/19/Mac-%E5%BF%83%E5%BE%97/"/>
      <url>/2022/06/19/Mac-%E5%BF%83%E5%BE%97/</url>
      
        <content type="html"><![CDATA[<h4 id="值得一看的博客"><a href="#值得一看的博客" class="headerlink" title="值得一看的博客"></a>值得一看的博客</h4><ul><li><a href="https://imageslr.com/2020/03/19/mac-initialization.html">从零开始配置高效 Mac 开发环境</a></li><li></li></ul>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>2. 两数相加</title>
      <link href="/2022/06/19/2-%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0/"/>
      <url>/2022/06/19/2-%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="2-两数相加"><a href="#2-两数相加" class="headerlink" title="2. 两数相加"></a><a href="https://leetcode.cn/problems/add-two-numbers/">2. 两数相加</a></h3><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>因为给的链表已经是倒序的，所以按序取数相加</p><p>主要是进位问题，最后一次的进位需要再结束循环时额外处理一下</p><p>注意添加结点的方式，先 <code>new</code> 尾结点的 <code>next</code>，然后再移动尾结点</p><h4 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> ListNode <span class="title function_">addTwoNumbers</span><span class="params">(ListNode l1, ListNode l2)</span> &#123;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">p1</span> <span class="operator">=</span> l1;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">p2</span> <span class="operator">=</span> l2;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">head</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">tail</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">carry</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(p1 != <span class="literal">null</span> || p2 != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">n1</span> <span class="operator">=</span> p1 != <span class="literal">null</span> ? p1.val : <span class="number">0</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">n2</span> <span class="operator">=</span> p2 != <span class="literal">null</span> ? p2.val : <span class="number">0</span>;</span><br><span class="line">            <span class="type">int</span> sum;</span><br><span class="line">            sum = n1 + n2 + carry;</span><br><span class="line">            carry = sum / <span class="number">10</span>;</span><br><span class="line">            <span class="keyword">if</span> (head == <span class="literal">null</span>) &#123;</span><br><span class="line">                head = tail = <span class="keyword">new</span> <span class="title class_">ListNode</span>(sum % <span class="number">10</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                tail.next = <span class="keyword">new</span> <span class="title class_">ListNode</span>(sum % <span class="number">10</span>);</span><br><span class="line">                tail = tail.next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (p1 != <span class="literal">null</span>) &#123;</span><br><span class="line">                p1 = p1.next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (p2 != <span class="literal">null</span>) &#123;</span><br><span class="line">                p2 = p2.next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (carry &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            tail.next = <span class="keyword">new</span> <span class="title class_">ListNode</span>(carry);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Mac 关闭 IPv6</title>
      <link href="/2022/06/17/Mac-%E5%85%B3%E9%97%AD-IPv6/"/>
      <url>/2022/06/17/Mac-%E5%85%B3%E9%97%AD-IPv6/</url>
      
        <content type="html"><![CDATA[<ol><li><p>查看当前使用的网络类型</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">networksetup -listallnetworkservices</span><br></pre></td></tr></table></figure></li><li><p>关闭对应网络类型的 IPv6</p><p>这里以关闭 <code>Wi-Fi</code> 的 IPv6 示意</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">networksetup -setv6off Wi-Fi</span><br></pre></td></tr></table></figure></li><li><p>查看是否关闭成功</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220617171436.png" alt="image-20220617171435908"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>关于 Mac 勿扰模式菜单栏时间变色问题</title>
      <link href="/2022/06/13/%E5%85%B3%E4%BA%8E-Mac-%E5%8B%BF%E6%89%B0%E6%A8%A1%E5%BC%8F%E8%8F%9C%E5%8D%95%E6%A0%8F%E6%97%B6%E9%97%B4%E5%8F%98%E8%89%B2%E9%97%AE%E9%A2%98/"/>
      <url>/2022/06/13/%E5%85%B3%E4%BA%8E-Mac-%E5%8B%BF%E6%89%B0%E6%A8%A1%E5%BC%8F%E8%8F%9C%E5%8D%95%E6%A0%8F%E6%97%B6%E9%97%B4%E5%8F%98%E8%89%B2%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>开启勿扰模式后，菜单栏中该图标变为灰色</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220613182451.png" alt="image-20220613182451414"></p><p>如果菜单栏中没有勿扰模式的图标，按住 ⌥ 然后点击右上角的时间，可以进入勿扰模式，此时菜单栏时间会变为灰色</p><p>重新将勿扰模式的图标放回菜单栏，即可接触时间变灰的问题</p><p>之后只要不使用 <code>⌥ + 左键时间</code> 则不会再次变灰，无论勿扰模式图标是否在菜单栏</p>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>不错的项目集合</title>
      <link href="/2022/05/23/%E4%B8%8D%E9%94%99%E7%9A%84%E9%A1%B9%E7%9B%AE%E9%9B%86%E5%90%88/"/>
      <url>/2022/05/23/%E4%B8%8D%E9%94%99%E7%9A%84%E9%A1%B9%E7%9B%AE%E9%9B%86%E5%90%88/</url>
      
        <content type="html"><![CDATA[<h4 id="1-前端项目"><a href="#1-前端项目" class="headerlink" title="1. 前端项目"></a>1. 前端项目</h4><ul><li><p><a href="https://github.com/animate-css/animate.css">Animate.css</a></p><p>前端 css 样式集</p></li></ul><h4 id="2-后端项目"><a href="#2-后端项目" class="headerlink" title="2. 后端项目"></a>2. 后端项目</h4><ul><li><p><a href="https://github.com/google/guava">Guava</a></p><p>Java 工具集</p></li><li></li></ul>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>18. 四数之和</title>
      <link href="/2022/05/10/18-%E5%9B%9B%E6%95%B0%E4%B9%8B%E5%92%8C/"/>
      <url>/2022/05/10/18-%E5%9B%9B%E6%95%B0%E4%B9%8B%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<h4 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fourSum</span><span class="params">(nums []<span class="type">int</span>, target <span class="type">int</span>)</span></span> [][]<span class="type">int</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> res [][]<span class="type">int</span></span><br><span class="line">    </span><br><span class="line">    sort.Ints(nums)</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">0</span>; i &lt; <span class="built_in">len</span>(nums); &#123;</span><br><span class="line">        threeSumRes := threeSum(nums,i+<span class="number">1</span>,target-nums[i])</span><br><span class="line">         <span class="keyword">if</span> <span class="built_in">len</span>(threeSumRes) &gt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">for</span> j := <span class="number">0</span>; j &lt; <span class="built_in">len</span>(threeSumRes); j++ &#123;</span><br><span class="line"><span class="keyword">var</span> row []<span class="type">int</span></span><br><span class="line">row = <span class="built_in">append</span>(row, nums[i])</span><br><span class="line">row = <span class="built_in">append</span>(row, threeSumRes[j][<span class="number">0</span>])</span><br><span class="line">row = <span class="built_in">append</span>(row, threeSumRes[j][<span class="number">1</span>])</span><br><span class="line">                row = <span class="built_in">append</span>(row, threeSumRes[j][<span class="number">2</span>])</span><br><span class="line">res = <span class="built_in">append</span>(res, row)</span><br><span class="line">row = <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">flag := <span class="literal">false</span></span><br><span class="line"><span class="keyword">for</span> j := i + <span class="number">1</span>; j &lt; <span class="built_in">len</span>(nums); j++ &#123;</span><br><span class="line"><span class="keyword">if</span> nums[j] != nums[i] &#123;</span><br><span class="line">i = j</span><br><span class="line">flag = <span class="literal">true</span></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> !flag &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">twoSum</span><span class="params">(nums []<span class="type">int</span>, start <span class="type">int</span>, target <span class="type">int</span>)</span></span> [][]<span class="type">int</span> &#123;</span><br><span class="line"><span class="keyword">var</span> res [][]<span class="type">int</span></span><br><span class="line"><span class="keyword">var</span> row []<span class="type">int</span></span><br><span class="line">left := start          <span class="comment">// 左指针</span></span><br><span class="line">right := <span class="built_in">len</span>(nums) - <span class="number">1</span> <span class="comment">// 右指针</span></span><br><span class="line"><span class="keyword">for</span> left &lt; right &#123;</span><br><span class="line">sum := nums[left] + nums[right]</span><br><span class="line">lastLeft := nums[left]</span><br><span class="line">lastRight := nums[right]</span><br><span class="line"><span class="keyword">if</span> sum &lt; target &#123;</span><br><span class="line"><span class="keyword">for</span> left &lt; right &amp;&amp; nums[left] == lastLeft &#123;</span><br><span class="line">left++</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> sum &gt; target &#123;</span><br><span class="line"><span class="keyword">for</span> left &lt; right &amp;&amp; nums[right] == lastRight &#123;</span><br><span class="line">right--</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">row = <span class="built_in">append</span>(row, nums[left])</span><br><span class="line">row = <span class="built_in">append</span>(row, nums[right])</span><br><span class="line">res = <span class="built_in">append</span>(res, row)</span><br><span class="line">row = <span class="literal">nil</span></span><br><span class="line"><span class="keyword">for</span> left &lt; right &amp;&amp; nums[left] == lastLeft &#123;</span><br><span class="line">left++</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> left &lt; right &amp;&amp; nums[right] == lastRight &#123;</span><br><span class="line">right--</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">threeSum</span><span class="params">(nums []<span class="type">int</span>, start <span class="type">int</span>, target <span class="type">int</span>)</span></span> [][]<span class="type">int</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> res [][]<span class="type">int</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="keyword">for</span> i := start; i &lt; <span class="built_in">len</span>(nums); &#123;</span><br><span class="line">twoSumRes := twoSum(nums, i+<span class="number">1</span>, target-nums[i])</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(twoSumRes) &gt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">for</span> j := <span class="number">0</span>; j &lt; <span class="built_in">len</span>(twoSumRes); j++ &#123;</span><br><span class="line"><span class="keyword">var</span> row []<span class="type">int</span></span><br><span class="line">row = <span class="built_in">append</span>(row, nums[i])</span><br><span class="line">row = <span class="built_in">append</span>(row, twoSumRes[j][<span class="number">0</span>])</span><br><span class="line">row = <span class="built_in">append</span>(row, twoSumRes[j][<span class="number">1</span>])</span><br><span class="line">res = <span class="built_in">append</span>(res, row)</span><br><span class="line">row = <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">flag := <span class="literal">false</span></span><br><span class="line"><span class="keyword">for</span> j := i + <span class="number">1</span>; j &lt; <span class="built_in">len</span>(nums); j++ &#123;</span><br><span class="line"><span class="keyword">if</span> nums[j] != nums[i] &#123;</span><br><span class="line">i = j</span><br><span class="line">flag = <span class="literal">true</span></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> !flag &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>17. 电话号码的字母组合</title>
      <link href="/2022/05/09/17-%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E7%9A%84%E5%AD%97%E6%AF%8D%E7%BB%84%E5%90%88/"/>
      <url>/2022/05/09/17-%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E7%9A%84%E5%AD%97%E6%AF%8D%E7%BB%84%E5%90%88/</url>
      
        <content type="html"><![CDATA[<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p><a href="https://www.programmercarl.com/0017.%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E7%9A%84%E5%AD%97%E6%AF%8D%E7%BB%84%E5%90%88.html#go">回溯</a></p><h4 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">letterCombinations</span><span class="params">(digits <span class="type">string</span>)</span></span> []<span class="type">string</span> &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(digits) == <span class="number">0</span> || <span class="built_in">len</span>(digits) &gt; <span class="number">4</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> res []<span class="type">string</span></span><br><span class="line">numbers := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">byte</span>]<span class="type">string</span>)</span><br><span class="line">numbers[<span class="string">&#x27;2&#x27;</span>] = <span class="string">&quot;abc&quot;</span></span><br><span class="line">numbers[<span class="string">&#x27;3&#x27;</span>] = <span class="string">&quot;def&quot;</span></span><br><span class="line">numbers[<span class="string">&#x27;4&#x27;</span>] = <span class="string">&quot;ghi&quot;</span></span><br><span class="line">numbers[<span class="string">&#x27;5&#x27;</span>] = <span class="string">&quot;jkl&quot;</span></span><br><span class="line">numbers[<span class="string">&#x27;6&#x27;</span>] = <span class="string">&quot;mno&quot;</span></span><br><span class="line">numbers[<span class="string">&#x27;7&#x27;</span>] = <span class="string">&quot;pqrs&quot;</span></span><br><span class="line">numbers[<span class="string">&#x27;8&#x27;</span>] = <span class="string">&quot;tuv&quot;</span></span><br><span class="line">numbers[<span class="string">&#x27;9&#x27;</span>] = <span class="string">&quot;wxyz&quot;</span></span><br><span class="line">backTracking(<span class="string">&quot;&quot;</span>, digits, <span class="number">0</span>, numbers, &amp;res)</span><br><span class="line"><span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">backTracking</span><span class="params">(tempString <span class="type">string</span>, digits <span class="type">string</span>, index <span class="type">int</span>, numbers <span class="keyword">map</span>[<span class="type">byte</span>]<span class="type">string</span>, res *[]<span class="type">string</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(tempString) == <span class="built_in">len</span>(digits) &#123;</span><br><span class="line">*res = <span class="built_in">append</span>(*res, tempString)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">letters := numbers[digits[index]]</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(letters); i++ &#123;</span><br><span class="line">tempString = tempString + <span class="type">string</span>(letters[i])</span><br><span class="line"><span class="comment">// ⚠️这里是 index+1，不是 i+1</span></span><br><span class="line">backTracking(tempString, digits, index+<span class="number">1</span>, numbers, res)</span><br><span class="line">tempString = tempString[:<span class="built_in">len</span>(tempString)<span class="number">-1</span>]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>16. 最接近的三数之和</title>
      <link href="/2022/05/08/16-%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9A%84%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/"/>
      <url>/2022/05/08/16-%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9A%84%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>和上一题差不多</p><h4 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">threeSumClosest</span><span class="params">(nums []<span class="type">int</span>, target <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">sort.Ints(nums)</span><br><span class="line"><span class="keyword">var</span> res <span class="type">int</span></span><br><span class="line">delta := math.MaxInt32</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(nums)<span class="number">-2</span>; i++ &#123;</span><br><span class="line">sum := twoSumClosest(nums, i+<span class="number">1</span>, target-nums[i]) + nums[i]</span><br><span class="line"><span class="keyword">if</span> abs(sum-target) &lt; delta &#123;</span><br><span class="line">delta = abs(sum - target)</span><br><span class="line">res = sum</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">twoSumClosest</span><span class="params">(nums []<span class="type">int</span>, start <span class="type">int</span>, target <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">left := start</span><br><span class="line">right := <span class="built_in">len</span>(nums) - <span class="number">1</span></span><br><span class="line">delta := math.MaxInt32</span><br><span class="line"><span class="keyword">var</span> res <span class="type">int</span></span><br><span class="line"><span class="keyword">for</span> left &lt; right &#123;</span><br><span class="line">sum := nums[left] + nums[right]</span><br><span class="line"><span class="keyword">if</span> abs(target-sum) &lt; delta &#123;</span><br><span class="line">delta = abs(target - sum)</span><br><span class="line">res = sum</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> sum &lt; target &#123;</span><br><span class="line">left++</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">right--</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">abs</span><span class="params">(num <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line"><span class="keyword">if</span> num &lt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> -num</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> num</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>15. 三数之和</title>
      <link href="/2022/05/07/15-%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/"/>
      <url>/2022/05/07/15-%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p><a href="https://mp.weixin.qq.com/s/fSyJVvggxHq28a0SdmZm6Q">思路参考</a></p><h4 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">twoSum</span><span class="params">(nums []<span class="type">int</span>, start <span class="type">int</span>, target <span class="type">int</span>)</span></span> [][]<span class="type">int</span> &#123;</span><br><span class="line"><span class="keyword">var</span> res [][]<span class="type">int</span></span><br><span class="line"><span class="keyword">var</span> row []<span class="type">int</span></span><br><span class="line">left := start          <span class="comment">// 左指针</span></span><br><span class="line">right := <span class="built_in">len</span>(nums) - <span class="number">1</span> <span class="comment">// 右指针</span></span><br><span class="line"><span class="keyword">for</span> left &lt; right &#123;</span><br><span class="line">sum := nums[left] + nums[right]</span><br><span class="line">lastLeft := nums[left]</span><br><span class="line">lastRight := nums[right]</span><br><span class="line"><span class="keyword">if</span> sum &lt; target &#123;</span><br><span class="line"><span class="keyword">for</span> left &lt; right &amp;&amp; nums[left] == lastLeft &#123;</span><br><span class="line">left++</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> sum &gt; target &#123;</span><br><span class="line"><span class="keyword">for</span> left &lt; right &amp;&amp; nums[right] == lastRight &#123;</span><br><span class="line">right--</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">row = <span class="built_in">append</span>(row, nums[left])</span><br><span class="line">row = <span class="built_in">append</span>(row, nums[right])</span><br><span class="line">res = <span class="built_in">append</span>(res, row)</span><br><span class="line">row = <span class="literal">nil</span></span><br><span class="line"><span class="keyword">for</span> left &lt; right &amp;&amp; nums[left] == lastLeft &#123;</span><br><span class="line">left++</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> left &lt; right &amp;&amp; nums[right] == lastRight &#123;</span><br><span class="line">right--</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">threeSum</span><span class="params">(nums []<span class="type">int</span>)</span></span> [][]<span class="type">int</span> &#123;</span><br><span class="line"><span class="keyword">var</span> res [][]<span class="type">int</span></span><br><span class="line">sort.Ints(nums)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(nums); &#123;</span><br><span class="line">target := <span class="number">0</span> - nums[i]</span><br><span class="line">start := i + <span class="number">1</span></span><br><span class="line">tempRes := twoSum(nums, start, target)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(tempRes) &gt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">for</span> j := <span class="number">0</span>; j &lt; <span class="built_in">len</span>(tempRes); j++ &#123;</span><br><span class="line"><span class="keyword">var</span> row []<span class="type">int</span></span><br><span class="line">row = <span class="built_in">append</span>(row, nums[i])</span><br><span class="line">row = <span class="built_in">append</span>(row, tempRes[j][<span class="number">0</span>])</span><br><span class="line">row = <span class="built_in">append</span>(row, tempRes[j][<span class="number">1</span>])</span><br><span class="line">res = <span class="built_in">append</span>(res, row)</span><br><span class="line">row = <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">flag := <span class="literal">false</span></span><br><span class="line"><span class="keyword">for</span> j := i + <span class="number">1</span>; j &lt; <span class="built_in">len</span>(nums); j++ &#123;</span><br><span class="line"><span class="keyword">if</span> nums[j] != nums[i] &#123;</span><br><span class="line">i = j</span><br><span class="line">flag = <span class="literal">true</span></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> !flag &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>13. 罗马数字转整数</title>
      <link href="/2022/05/06/13-%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97%E8%BD%AC%E6%95%B4%E6%95%B0/"/>
      <url>/2022/05/06/13-%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97%E8%BD%AC%E6%95%B4%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h4 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">romanToInt</span><span class="params">(s <span class="type">string</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    roman := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>]<span class="type">int</span>)</span><br><span class="line">roman[<span class="string">&quot;I&quot;</span>] = <span class="number">1</span></span><br><span class="line">roman[<span class="string">&quot;IV&quot;</span>] = <span class="number">4</span></span><br><span class="line">roman[<span class="string">&quot;V&quot;</span>] = <span class="number">5</span></span><br><span class="line">roman[<span class="string">&quot;IX&quot;</span>] = <span class="number">9</span></span><br><span class="line">roman[<span class="string">&quot;X&quot;</span>] = <span class="number">10</span></span><br><span class="line">roman[<span class="string">&quot;XL&quot;</span>] = <span class="number">40</span></span><br><span class="line">roman[<span class="string">&quot;L&quot;</span>] = <span class="number">50</span></span><br><span class="line">roman[<span class="string">&quot;XC&quot;</span>] = <span class="number">90</span></span><br><span class="line">roman[<span class="string">&quot;C&quot;</span>] = <span class="number">100</span></span><br><span class="line">roman[<span class="string">&quot;CD&quot;</span>] = <span class="number">400</span></span><br><span class="line">roman[<span class="string">&quot;D&quot;</span>] = <span class="number">500</span></span><br><span class="line">roman[<span class="string">&quot;CM&quot;</span>] = <span class="number">900</span></span><br><span class="line">roman[<span class="string">&quot;M&quot;</span>] = <span class="number">1000</span></span><br><span class="line">    <span class="keyword">var</span> lastRoman <span class="type">int</span></span><br><span class="line">    <span class="keyword">var</span> nowRoman <span class="type">int</span></span><br><span class="line">    res := <span class="number">0</span></span><br><span class="line">res += roman[<span class="type">string</span>(s[<span class="number">0</span>])]</span><br><span class="line">    lastRoman = roman[<span class="type">string</span>(s[<span class="number">0</span>])]</span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">1</span>; i &lt; <span class="built_in">len</span>(s); i++ &#123;</span><br><span class="line">        nowRoman = roman[<span class="type">string</span>(s[i])]</span><br><span class="line">        <span class="keyword">if</span> nowRoman &gt; lastRoman &#123;</span><br><span class="line">            res += nowRoman - lastRoman - lastRoman</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            res += nowRoman</span><br><span class="line">        &#125; </span><br><span class="line">        lastRoman = nowRoman</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>12. 整数转罗马数字</title>
      <link href="/2022/05/05/12-%E6%95%B4%E6%95%B0%E8%BD%AC%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97/"/>
      <url>/2022/05/05/12-%E6%95%B4%E6%95%B0%E8%BD%AC%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97/</url>
      
        <content type="html"><![CDATA[<h4 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">intToRoman</span><span class="params">(num <span class="type">int</span>)</span></span> <span class="type">string</span> &#123;</span><br><span class="line">res := <span class="string">&quot;&quot;</span></span><br><span class="line">roman := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">int</span>]<span class="type">string</span>)</span><br><span class="line">roman[<span class="number">1</span>] = <span class="string">&quot;I&quot;</span></span><br><span class="line">roman[<span class="number">4</span>] = <span class="string">&quot;IV&quot;</span></span><br><span class="line">roman[<span class="number">5</span>] = <span class="string">&quot;V&quot;</span></span><br><span class="line">roman[<span class="number">9</span>] = <span class="string">&quot;IX&quot;</span></span><br><span class="line">roman[<span class="number">10</span>] = <span class="string">&quot;X&quot;</span></span><br><span class="line">roman[<span class="number">40</span>] = <span class="string">&quot;XL&quot;</span></span><br><span class="line">roman[<span class="number">50</span>] = <span class="string">&quot;L&quot;</span></span><br><span class="line">roman[<span class="number">90</span>] = <span class="string">&quot;XC&quot;</span></span><br><span class="line">roman[<span class="number">100</span>] = <span class="string">&quot;C&quot;</span></span><br><span class="line">roman[<span class="number">400</span>] = <span class="string">&quot;CD&quot;</span></span><br><span class="line">roman[<span class="number">500</span>] = <span class="string">&quot;D&quot;</span></span><br><span class="line">roman[<span class="number">900</span>] = <span class="string">&quot;CM&quot;</span></span><br><span class="line">roman[<span class="number">1000</span>] = <span class="string">&quot;M&quot;</span></span><br><span class="line">nums := []<span class="type">int</span>&#123;<span class="number">1000</span>, <span class="number">900</span>, <span class="number">500</span>, <span class="number">400</span>, <span class="number">100</span>, <span class="number">90</span>, <span class="number">50</span>, <span class="number">40</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">1</span>&#125;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(nums); &#123;</span><br><span class="line"><span class="keyword">if</span> num &gt;= nums[i] &#123;</span><br><span class="line">num -= nums[i]</span><br><span class="line">res += roman[nums[i]]</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">i++</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>11. 盛最多水的容器</title>
      <link href="/2022/05/04/11-%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8/"/>
      <url>/2022/05/04/11-%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>双指针</p><p>每次移动较矮的那一边</p><h4 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">maxArea</span><span class="params">(height []<span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    res := <span class="number">0</span></span><br><span class="line">    left,right := <span class="number">0</span>, <span class="built_in">len</span>(height) - <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> left != right &#123;</span><br><span class="line">        temp := minHeight(height[left],height[right]) * (right - left)</span><br><span class="line">        res = maxAns(res,temp)</span><br><span class="line">        <span class="keyword">if</span> height[left] &gt; height[right] &#123;</span><br><span class="line">            right--</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            left++</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">maxAns</span><span class="params">(a,b <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> a &gt; b &#123;</span><br><span class="line">        <span class="keyword">return</span> a</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">minHeight</span><span class="params">(a,b <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> a &gt; b &#123;</span><br><span class="line">        <span class="keyword">return</span> b</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>zshrc 备份</title>
      <link href="/2022/05/03/zshrc-%E5%A4%87%E4%BB%BD/"/>
      <url>/2022/05/03/zshrc-%E5%A4%87%E4%BB%BD/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># If you come from bash you might have to change your $PATH.</span></span><br><span class="line"><span class="comment"># export PATH=$HOME/bin:/usr/local/bin:$PATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Path to your oh-my-zsh installation.</span></span><br><span class="line"><span class="built_in">export</span> ZSH=<span class="string">&quot;<span class="variable">$HOME</span>/.oh-my-zsh&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set name of the theme to load --- if set to &quot;random&quot;, it will</span></span><br><span class="line"><span class="comment"># load a random theme each time oh-my-zsh is loaded, in which case,</span></span><br><span class="line"><span class="comment"># to know which specific one was loaded, run: echo $RANDOM_THEME</span></span><br><span class="line"><span class="comment"># See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes</span></span><br><span class="line">ZSH_THEME=<span class="string">&quot;robbyrussell&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set list of themes to pick from when loading at random</span></span><br><span class="line"><span class="comment"># Setting this variable when ZSH_THEME=random will cause zsh to load</span></span><br><span class="line"><span class="comment"># a theme from this variable instead of looking in $ZSH/themes/</span></span><br><span class="line"><span class="comment"># If set to an empty array, this variable will have no effect.</span></span><br><span class="line"><span class="comment"># ZSH_THEME_RANDOM_CANDIDATES=( &quot;robbyrussell&quot; &quot;agnoster&quot; )</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to use case-sensitive completion.</span></span><br><span class="line"><span class="comment"># CASE_SENSITIVE=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to use hyphen-insensitive completion.</span></span><br><span class="line"><span class="comment"># Case-sensitive completion must be off. _ and - will be interchangeable.</span></span><br><span class="line"><span class="comment"># HYPHEN_INSENSITIVE=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment one of the following lines to change the auto-update behavior</span></span><br><span class="line"><span class="comment"># zstyle &#x27;:omz:update&#x27; mode disabled  # disable automatic updates</span></span><br><span class="line"><span class="comment"># zstyle &#x27;:omz:update&#x27; mode auto      # update automatically without asking</span></span><br><span class="line"><span class="comment"># zstyle &#x27;:omz:update&#x27; mode reminder  # just remind me to update when it&#x27;s time</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to change how often to auto-update (in days).</span></span><br><span class="line"><span class="comment"># zstyle &#x27;:omz:update&#x27; frequency 13</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line if pasting URLs and other text is messed up.</span></span><br><span class="line"><span class="comment"># DISABLE_MAGIC_FUNCTIONS=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to disable colors in ls.</span></span><br><span class="line"><span class="comment"># DISABLE_LS_COLORS=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to disable auto-setting terminal title.</span></span><br><span class="line"><span class="comment"># DISABLE_AUTO_TITLE=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to enable command auto-correction.</span></span><br><span class="line"><span class="comment"># ENABLE_CORRECTION=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to display red dots whilst waiting for completion.</span></span><br><span class="line"><span class="comment"># You can also set it to another string to have that shown instead of the default red dots.</span></span><br><span class="line"><span class="comment"># e.g. COMPLETION_WAITING_DOTS=&quot;%F&#123;yellow&#125;waiting...%f&quot;</span></span><br><span class="line"><span class="comment"># Caution: this setting can cause issues with multiline prompts in zsh &lt; 5.7.1 (see #5765)</span></span><br><span class="line"><span class="comment"># COMPLETION_WAITING_DOTS=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line if you want to disable marking untracked files</span></span><br><span class="line"><span class="comment"># under VCS as dirty. This makes repository status check for large repositories</span></span><br><span class="line"><span class="comment"># much, much faster.</span></span><br><span class="line"><span class="comment"># DISABLE_UNTRACKED_FILES_DIRTY=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line if you want to change the command execution time</span></span><br><span class="line"><span class="comment"># stamp shown in the history command output.</span></span><br><span class="line"><span class="comment"># You can set one of the optional three formats:</span></span><br><span class="line"><span class="comment"># &quot;mm/dd/yyyy&quot;|&quot;dd.mm.yyyy&quot;|&quot;yyyy-mm-dd&quot;</span></span><br><span class="line"><span class="comment"># or set a custom format using the strftime function format specifications,</span></span><br><span class="line"><span class="comment"># see &#x27;man strftime&#x27; for details.</span></span><br><span class="line"><span class="comment"># HIST_STAMPS=&quot;mm/dd/yyyy&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Would you like to use another custom folder than $ZSH/custom?</span></span><br><span class="line"><span class="comment"># ZSH_CUSTOM=/path/to/new-custom-folder</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Which plugins would you like to load?</span></span><br><span class="line"><span class="comment"># Standard plugins can be found in $ZSH/plugins/</span></span><br><span class="line"><span class="comment"># Custom plugins may be added to $ZSH_CUSTOM/plugins/</span></span><br><span class="line"><span class="comment"># Example format: plugins=(rails git textmate ruby lighthouse)</span></span><br><span class="line"><span class="comment"># Add wisely, as too many plugins slow down shell startup.</span></span><br><span class="line">plugins=(git zsh-syntax-highlighting) </span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> <span class="variable">$ZSH</span>/oh-my-zsh.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># User configuration</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># export MANPATH=&quot;/usr/local/man:$MANPATH&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># You may need to manually set your language environment</span></span><br><span class="line"><span class="comment"># export LANG=en_US.UTF-8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Preferred editor for local and remote sessions</span></span><br><span class="line"><span class="comment"># if [[ -n $SSH_CONNECTION ]]; then</span></span><br><span class="line"><span class="comment">#   export EDITOR=&#x27;vim&#x27;</span></span><br><span class="line"><span class="comment"># else</span></span><br><span class="line"><span class="comment">#   export EDITOR=&#x27;mvim&#x27;</span></span><br><span class="line"><span class="comment"># fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Compilation flags</span></span><br><span class="line"><span class="comment"># export ARCHFLAGS=&quot;-arch x86_64&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set personal aliases, overriding those provided by oh-my-zsh libs,</span></span><br><span class="line"><span class="comment"># plugins, and themes. Aliases can be placed here, though oh-my-zsh</span></span><br><span class="line"><span class="comment"># users are encouraged to define aliases within the ZSH_CUSTOM folder.</span></span><br><span class="line"><span class="comment"># For a full list of active aliases, run `alias`.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Example aliases</span></span><br><span class="line"><span class="comment"># alias zshconfig=&quot;mate ~/.zshrc&quot;</span></span><br><span class="line"><span class="comment"># alias ohmyzsh=&quot;mate ~/.oh-my-zsh&quot;</span></span><br><span class="line"><span class="built_in">alias</span> updateblog=<span class="string">&quot;cd /Users/ritsu/study/hexo/source/_posts&amp;&amp;hexo clean &amp;&amp; hexo g &amp;&amp; hexo d&quot;</span></span><br><span class="line"><span class="built_in">alias</span> writeblog=<span class="string">&quot;cd /Users/ritsu/study/hexo/source/_posts&quot;</span></span><br><span class="line"><span class="built_in">alias</span> typora=<span class="string">&quot;open -a typora&quot;</span></span><br><span class="line"><span class="built_in">alias</span> cl=<span class="string">&quot;cd ~ &amp;&amp; clear&quot;</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">command</span> -v pyenv 1&gt;/dev/null 2&gt;&amp;1; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">eval</span> <span class="string">&quot;<span class="subst">$(pyenv init -)</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;~/.pyenv/bin:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># proxy</span></span><br><span class="line"><span class="built_in">export</span> http_proxy=<span class="string">&quot;http://127.0.0.1:7890&quot;</span></span><br><span class="line"><span class="built_in">export</span> https_proxy=<span class="variable">$http_proxy</span></span><br><span class="line"><span class="built_in">export</span> socks5_proxy=<span class="string">&quot;socks5://127.0.0.1:7890&quot;</span></span><br><span class="line"><span class="function"><span class="title">proxy</span></span> () &#123;</span><br><span class="line">  <span class="built_in">export</span> http_proxy=<span class="string">&quot;http://127.0.0.1:7890&quot;</span></span><br><span class="line">  <span class="built_in">export</span> https_proxy=<span class="variable">$http_proxy</span></span><br><span class="line">  <span class="built_in">export</span> socks5_proxy=<span class="string">&quot;socks5://127.0.0.1:7890&quot;</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;HTTP Proxy on&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># noproxy</span></span><br><span class="line"><span class="function"><span class="title">proxyoff</span></span> () &#123;</span><br><span class="line">  <span class="built_in">unset</span> http_proxy</span><br><span class="line">  <span class="built_in">unset</span> https_proxy</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;HTTP Proxy off&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>5. 最长回文子串</title>
      <link href="/2022/05/02/5-%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/"/>
      <url>/2022/05/02/5-%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<h4 id="暴力解"><a href="#暴力解" class="headerlink" title="暴力解"></a>暴力解</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">longestPalindrome</span><span class="params">(s <span class="type">string</span>)</span></span> <span class="type">string</span> &#123;</span><br><span class="line"><span class="keyword">if</span> IsPalindrome(s) &#123;</span><br><span class="line"><span class="keyword">return</span> s</span><br><span class="line">&#125;</span><br><span class="line">maxLength := <span class="number">0</span></span><br><span class="line"><span class="keyword">var</span> ans <span class="type">string</span></span><br><span class="line"><span class="keyword">for</span> width := <span class="number">1</span>; width &lt; <span class="built_in">len</span>(s); width++ &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(s)-width+<span class="number">1</span>; i++ &#123;</span><br><span class="line">temp := s[i : i+width]</span><br><span class="line"><span class="keyword">if</span> IsPalindrome(temp) &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(temp) &gt; maxLength &#123;</span><br><span class="line">maxLength = <span class="built_in">len</span>(temp)</span><br><span class="line">ans = temp</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">IsPalindrome</span><span class="params">(s <span class="type">string</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(s) == <span class="number">0</span> || <span class="built_in">len</span>(s) == <span class="number">1</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">i := <span class="number">0</span></span><br><span class="line">j := <span class="built_in">len</span>(s) - <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i &lt; (<span class="built_in">len</span>(s) / <span class="number">2</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> s[i] != s[j] &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line">i++</span><br><span class="line">j--</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>3. 无重复字符的最长子串</title>
      <link href="/2022/04/30/3-%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/"/>
      <url>/2022/04/30/3-%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<h4 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">lengthOfLongestSubstring</span><span class="params">(s <span class="type">string</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    lengthOfString := <span class="built_in">len</span>(s)</span><br><span class="line">    left,right := <span class="number">0</span>,<span class="number">0</span></span><br><span class="line">    ans := <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> lengthOfString == <span class="number">0</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> lengthOfString == <span class="number">1</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> left=<span class="number">0</span>; left &lt; lengthOfString;left++&#123;</span><br><span class="line">        maps := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">byte</span>]<span class="type">int</span>)</span><br><span class="line">        <span class="keyword">for</span> right = left;right &lt; lengthOfString; right++ &#123;</span><br><span class="line">            <span class="keyword">if</span> maps[s[right]] == <span class="number">0</span> &#123;</span><br><span class="line">                maps[s[right]]++</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ans = max(ans, right - left)</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">max</span><span class="params">(a, b <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line"><span class="keyword">if</span> a &gt; b &#123;</span><br><span class="line"><span class="keyword">return</span> a</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> b</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>macOS 自定义 Typora 快捷键</title>
      <link href="/2022/04/26/macOS-%E8%87%AA%E5%AE%9A%E4%B9%89-Typora-%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
      <url>/2022/04/26/macOS-%E8%87%AA%E5%AE%9A%E4%B9%89-Typora-%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      
        <content type="html"><![CDATA[<p>macOS 上行内代码的快捷键上在输入法时中文模式下，没办法用，这样快捷键就失去意义了，还在 macOS 可以自定义快捷键。</p><ol><li><p>打开设置如下</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220426004806.png" alt="image-20220426004806422"></p></li><li><p>点击 “+”，选择 <code>Typora.app</code>，菜单标题选择<code>代码</code></p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220426005606.png" alt="image-20220426005605813"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>在终端用 Typora 打开 markdown 文件</title>
      <link href="/2022/04/26/%E5%9C%A8%E7%BB%88%E7%AB%AF%E7%94%A8-Typora-%E6%89%93%E5%BC%80-markdown-%E6%96%87%E4%BB%B6/"/>
      <url>/2022/04/26/%E5%9C%A8%E7%BB%88%E7%AB%AF%E7%94%A8-Typora-%E6%89%93%E5%BC%80-markdown-%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>用 Hexo 写博客时，一般需要在终端先 new 一下 markdown 文件，然后再写。这时候切到 Finder 或 Typora 再去打开就很麻烦，于是进行如下操作。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open -a typora 文件名</span><br></pre></td></tr></table></figure><p>其中 <code>open -a typora</code> ➡️ 用 Typora 打开某文件</p><p>为方便使用，将 <code>open -a typora</code> 设置为别名</p><p>我用的 zsh，故以 zsh 为例</p><ol><li><p>打开 <code>~/.zshrc</code></p></li><li><p>可以看到如下部分</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220426010843.png" alt="image-20220426010843495"></p><p>这是 zsh 给的例子，不妨在这之后添加自用的命令别名</p></li><li><p>将如下代码写入 <code>.zshrc</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alias typora=&quot;open -a typora&quot;</span><br></pre></td></tr></table></figure></li><li><p>让配置文件立刻生效</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~.zshrc</span><br></pre></td></tr></table></figure></li><li><p>查看当前的命令别名</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>macOS 隐藏文件夹</title>
      <link href="/2022/04/26/macOS-%E9%9A%90%E8%97%8F%E6%96%87%E4%BB%B6%E5%A4%B9/"/>
      <url>/2022/04/26/macOS-%E9%9A%90%E8%97%8F%E6%96%87%E4%BB%B6%E5%A4%B9/</url>
      
        <content type="html"><![CDATA[<ol><li><p>打开终端</p></li><li><p>输入如下代码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chflags hidden+空格</span><br></pre></td></tr></table></figure></li><li><p>将需要隐藏的文件夹拖入终端</p></li><li><p><code>Shift + Command + . </code> 可显示隐藏文件夹</p></li><li><p>文件同理</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>更换 Mac 软件图标</title>
      <link href="/2022/04/25/%E6%9B%B4%E6%8D%A2-Mac-%E8%BD%AF%E4%BB%B6%E5%9B%BE%E6%A0%87/"/>
      <url>/2022/04/25/%E6%9B%B4%E6%8D%A2-Mac-%E8%BD%AF%E4%BB%B6%E5%9B%BE%E6%A0%87/</url>
      
        <content type="html"><![CDATA[<h4 id="1-如何更换"><a href="#1-如何更换" class="headerlink" title="1. 如何更换"></a>1. 如何更换</h4><ol><li><p>在对应网址中搜索 app 名称</p><p><a href="https://macosicons.com/#/">https://macosicons.com/#/</a></p></li><li><p>下载图标</p></li><li><p><code>Finder</code> ➡️ 应用程序 ➡️ 找到对应 app 右键 ➡️ 显示简介 ➡️ 将下载好的图标拖拽到原图标上，即可完成替换</p></li></ol><h4 id="2-常见问题"><a href="#2-常见问题" class="headerlink" title="2. 常见问题"></a>2. 常见问题</h4><ol><li><p>dock 栏上没有更新图标</p><p>可能是点了<code>在程序坞中保留</code>，暂时先将该选项去掉，然后完全退出应用，再次打开应该没有问题</p></li><li><p>如何换回原图标</p><p><code>Finder</code> ➡️ 应用程序 ➡️ 找到对应 app 右键 ➡️ 显示简介 ➡️  在图标上按<code>退格键</code></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>仓库与本地内容不一致问题</title>
      <link href="/2022/04/20/%E4%BB%93%E5%BA%93%E4%B8%8E%E6%9C%AC%E5%9C%B0%E5%86%85%E5%AE%B9%E4%B8%8D%E4%B8%80%E8%87%B4%E9%97%AE%E9%A2%98/"/>
      <url>/2022/04/20/%E4%BB%93%E5%BA%93%E4%B8%8E%E6%9C%AC%E5%9C%B0%E5%86%85%E5%AE%B9%E4%B8%8D%E4%B8%80%E8%87%B4%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>今天发现一个问题，当我在本地仓库更新目录结构后，push 到 GitHub，但是远程仓库并没有发现对应的修改。于是在网上找该问题的解决办法，发现修改 <code>.gitignore</code> 文件内容后，再次 push 就成功了，暂时不清楚原因，所以先记录一下， <code>.gitignore</code> 内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># OS generated files #</span><br><span class="line">######################</span><br><span class="line">.DS_Store</span><br><span class="line">.DS_Store?</span><br><span class="line">._*</span><br><span class="line">.Spotlight-V100</span><br><span class="line">.Trashes</span><br><span class="line">ehthumbs.db</span><br><span class="line">Thumbs.db </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>通过 Amazon 获取图书的封面</title>
      <link href="/2022/03/31/%E9%80%9A%E8%BF%87-Amazon-%E8%8E%B7%E5%8F%96%E5%9B%BE%E4%B9%A6%E7%9A%84%E5%B0%81%E9%9D%A2/"/>
      <url>/2022/03/31/%E9%80%9A%E8%BF%87-Amazon-%E8%8E%B7%E5%8F%96%E5%9B%BE%E4%B9%A6%E7%9A%84%E5%B0%81%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<h4 id="1-打开亚马逊官网"><a href="#1-打开亚马逊官网" class="headerlink" title="1. 打开亚马逊官网"></a>1. 打开亚马逊官网</h4><p>地址：<a href="https://www.amazon.cn/">https://www.amazon.cn/</a></p><h4 id="2-搜索图书"><a href="#2-搜索图书" class="headerlink" title="2. 搜索图书"></a>2. 搜索图书</h4><p>这里以《ARKit 原生开发 入门精粹》为例</p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220331224718.png" alt="image-20220331224718125" style="zoom:25%;" /><h4 id="3-获取-ASIN-编号"><a href="#3-获取-ASIN-编号" class="headerlink" title="3. 获取 ASIN 编号"></a>3. 获取 ASIN 编号</h4><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220331224733.png" alt="image-20220331224733211" style="zoom:40%;" /><p>该书的 ASIN：B09995RR9H</p><h4 id="4-将-ASIN-填入封面地址"><a href="#4-将-ASIN-填入封面地址" class="headerlink" title="4. 将 ASIN 填入封面地址"></a>4. 将 ASIN 填入封面地址</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">首选</span></span><br><span class="line">https://m.media-amazon.com/images/P/*****.01.MAIN._SCRM_.jpg</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">备选</span></span><br><span class="line">http://s3.cn-north-1.amazonaws.com.cn/sitbweb-cn/content/*****/images/cover.jpg</span><br></pre></td></tr></table></figure><p>事例的封面地址为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://m.media-amazon.com/images/P/B09995RR9H.01.MAIN._SCRM_.jpg</span><br></pre></td></tr></table></figure><p>浏览器打开该链接，即可得到图书封面</p>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>centos 安装 tomcat</title>
      <link href="/2022/03/21/centos-%E5%AE%89%E8%A3%85-tomcat/"/>
      <url>/2022/03/21/centos-%E5%AE%89%E8%A3%85-tomcat/</url>
      
        <content type="html"><![CDATA[<h4 id="1-下载-Tomcat"><a href="#1-下载-Tomcat" class="headerlink" title="1. 下载 Tomcat"></a>1. 下载 Tomcat</h4><p>Tomcat 官网：<a href="https://tomcat.apache.org/">https://tomcat.apache.org/</a></p><p>以 Tomcat9.0 为🌰</p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220321195558.png" alt="截屏2022-03-21 19.55.30" style="zoom:20%;" /><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220321195652.png" alt="截屏2022-03-21 19.56.25" style="zoom:33%;" /><h4 id="2-用-SFTP-工具上传到服务器"><a href="#2-用-SFTP-工具上传到服务器" class="headerlink" title="2. 用 SFTP 工具上传到服务器"></a>2. 用 SFTP 工具上传到服务器</h4><h4 id="3-解压-tar"><a href="#3-解压-tar" class="headerlink" title="3. 解压 tar"></a>3. 解压 tar</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf apache-tomcat-9.0.60.tar.gz</span><br></pre></td></tr></table></figure><h4 id="4-启动-Tomcat"><a href="#4-启动-Tomcat" class="headerlink" title="4. 启动 Tomcat"></a>4. 启动 Tomcat</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd apache-tomcat-9.0.60/</span><br><span class="line">cd bin</span><br><span class="line">bash startup.sh </span><br></pre></td></tr></table></figure><h4 id="5-查看是否启动成功"><a href="#5-查看是否启动成功" class="headerlink" title="5. 查看是否启动成功"></a>5. 查看是否启动成功</h4><p>服务器 IP:8080</p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220321195931.png" alt="image-20220321195931183" style="zoom:33%;" />]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>apple 开发者账户 Bundle Identifier 问题</title>
      <link href="/2022/03/21/apple-%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E6%88%B7-Bundle-Identifier-%E9%97%AE%E9%A2%98/"/>
      <url>/2022/03/21/apple-%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E6%88%B7-Bundle-Identifier-%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>Your maximum App ID limit has been reached. You may create up to 10 App IDs every 7 days.</p><p>意思是免费账户 7 天内只能够创建 10 个 app id</p><p>**解决办法：**每次都用同一个 id</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220321125751.png" alt="image-20220321125750994"></p><p>在这边修改，记得查看一下 Debug 与 Release 中是否也修改为同一个 id</p>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>mac 修改 DNS</title>
      <link href="/2022/03/20/mac-%E4%BF%AE%E6%94%B9-DNS/"/>
      <url>/2022/03/20/mac-%E4%BF%AE%E6%94%B9-DNS/</url>
      
        <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/resolv.conf </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看当前 DNS</span></span><br><span class="line">networksetup -listallnetworkservices </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看网络</span></span><br><span class="line">networksetup -setdnsservers Wi-Fi 223.5.5.5 223.6.6.6 </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置 Wi-Fi 连接的 DNS 为阿里 DNS</span></span><br><span class="line">sudo dscacheutil -flushcache;sudo killall -HUP mDNSResponder; </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">管理员强制刷新</span> </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Failed to instantiate the default view controller for UIMainStoryboardFile &#39;Main&#39; - perhaps the designated entry point is not set?</title>
      <link href="/2022/03/20/Failed-to-instantiate-the-default-view-controller-for-UIMainStoryboardFile-Main-perhaps-the-designated-entry-point-is-not-set/"/>
      <url>/2022/03/20/Failed-to-instantiate-the-default-view-controller-for-UIMainStoryboardFile-Main-perhaps-the-designated-entry-point-is-not-set/</url>
      
        <content type="html"><![CDATA[<p>Failed to instantiate the default view controller for UIMainStoryboardFile ‘Main’ - perhaps the designated entry point is not set?</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220320153150.png" alt="截屏2022-03-20 15.30.34"></p><p>勾选：<code>Is initial View Controller</code></p>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Xcode 依赖添加失败问题</title>
      <link href="/2022/03/19/Xcode-%E4%BE%9D%E8%B5%96%E6%B7%BB%E5%8A%A0%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98/"/>
      <url>/2022/03/19/Xcode-%E4%BE%9D%E8%B5%96%E6%B7%BB%E5%8A%A0%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220319144247.png" alt="image-20220319115723023"></p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220319144248.png" alt="image-20220319142013016"></p><p>我的解决方案：</p><ol><li>魔法工具🪄开<code>全局</code></li><li><code>xcode</code> ➡️ <code>File</code> ➡️ <code>Packages</code> ➡️ <code>Reset Package Caches</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Non-constant range: argument must be an integer literal</title>
      <link href="/2022/03/18/Non-constant-range-argument-must-be-an-integer-literal/"/>
      <url>/2022/03/18/Non-constant-range-argument-must-be-an-integer-literal/</url>
      
        <content type="html"><![CDATA[<p>Non-constant range: argument must be an integer literal</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">ForEach</span>(<span class="number">0</span><span class="operator">..&lt;</span><span class="keyword">self</span>.models.count)</span><br><span class="line"><span class="operator">➡️</span></span><br><span class="line"><span class="type">ForEach</span>(<span class="number">0</span><span class="operator">..&lt;</span><span class="keyword">self</span>.models.count,id:\.<span class="keyword">self</span>)</span><br></pre></td></tr></table></figure><blockquote><p>记录，暂不清楚原因</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>利用腾讯云 COS + PicGo-Core 搭建图床</title>
      <link href="/2022/03/17/%E5%88%A9%E7%94%A8%E8%85%BE%E8%AE%AF%E4%BA%91-COS-PicGo-Core-%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/"/>
      <url>/2022/03/17/%E5%88%A9%E7%94%A8%E8%85%BE%E8%AE%AF%E4%BA%91-COS-PicGo-Core-%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<h4 id="1-安装-PicGo-Core"><a href="#1-安装-PicGo-Core" class="headerlink" title="1. 安装 PicGo-Core"></a>1. 安装 PicGo-Core</h4><ul><li><p>mac 上利用 npm 安装：<code>npm install picgo -g</code></p><p>(没有 npm 的话百度一下很快)</p></li><li><p>windows 上就简单了，设置里直接选择就好了，手边没有 win 的电脑就不截图了</p></li></ul><h4 id="2-购买对象存储服务"><a href="#2-购买对象存储服务" class="headerlink" title="2. 购买对象存储服务"></a>2. 购买对象存储服务</h4><p>其实这里买腾讯云、阿里云等都可以，这里以腾讯云为例</p><h4 id="3-创建存储桶"><a href="#3-创建存储桶" class="headerlink" title="3. 创建存储桶"></a>3. 创建存储桶</h4><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220317221831.png" alt="image-20220317221831480" style="zoom:33%;" /><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220317221920.png" alt="image-20220317221920521" style="zoom: 33%;" /><ul><li>名称创建完就无法更改</li><li>要选择<code>公有读私有写</code></li></ul><h4 id="4-创建腾讯云密钥"><a href="#4-创建腾讯云密钥" class="headerlink" title="4. 创建腾讯云密钥"></a>4. 创建腾讯云密钥</h4><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220317222530.png" alt="image-20220317222530159" style="zoom:33%;" /><p>最底下的密钥管理</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220317222605.png" alt="image-20220317222604985"></p><p>继续使用 ➡️ 新建密钥</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220317222617.png" alt="image-20220317222617207"></p><h4 id="5-进行-PicGo-Core-配置"><a href="#5-进行-PicGo-Core-配置" class="headerlink" title="5. 进行 PicGo-Core 配置"></a>5. 进行 PicGo-Core 配置</h4><ul><li>linux 和 macOS 均为 <code>~/.picgo/config.json</code></li><li>windows 则为 <code>C:\Users\你的用户名\.picgo\config.json</code></li></ul><p>mac 在聚焦中搜索 <code>~/.picgo</code>，可访问该文件夹，打开其中的 config.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;picBed&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;current&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tcyun&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;uploader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tcyun&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tcyun&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;appId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;密钥的 APPID&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;area&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ap-桶的地区&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;bucket&quot;</span><span class="punctuation">:</span> <span class="string">&quot;桶的名字，记得算上 -数字 &quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;customUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;桶的访问链接，在桶的概览中&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;img/&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;secretId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;密钥的 secretId&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;secretKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;密钥的 SecretKey&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;v5&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;picgoPlugins&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>70. 爬楼梯</title>
      <link href="/2022/03/15/70-%E7%88%AC%E6%A5%BC%E6%A2%AF/"/>
      <url>/2022/03/15/70-%E7%88%AC%E6%A5%BC%E6%A2%AF/</url>
      
        <content type="html"><![CDATA[<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>F(n) &#x3D; F(n-1) + F(n-2)</p><p>用递归会超时，所以用循环来写</p><h4 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">climbStairs</span><span class="params">(n <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">1</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">2</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">    &#125;</span><br><span class="line">    i := <span class="number">1</span></span><br><span class="line">    j := <span class="number">2</span></span><br><span class="line">    k := i+j</span><br><span class="line">    <span class="keyword">for</span> m:=<span class="number">3</span>; m &lt;=n; m++ &#123;</span><br><span class="line">        k = i+j</span><br><span class="line">        i = j</span><br><span class="line">        j = k</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> k</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Goland 控制台隐藏多于的信息</title>
      <link href="/2022/03/15/Goland-%E6%8E%A7%E5%88%B6%E5%8F%B0%E9%9A%90%E8%97%8F%E5%A4%9A%E4%BA%8E%E7%9A%84%E4%BF%A1%E6%81%AF/"/>
      <url>/2022/03/15/Goland-%E6%8E%A7%E5%88%B6%E5%8F%B0%E9%9A%90%E8%97%8F%E5%A4%9A%E4%BA%8E%E7%9A%84%E4%BF%A1%E6%81%AF/</url>
      
        <content type="html"><![CDATA[<ol><li><p><code>cmd + shift + A</code></p></li><li><p>输入 <code>Registry</code></p></li><li><p>找到 <code>go.run.process.with.pty</code> 取消前面的勾</p></li><li><p>效果如下</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20230507170338.png" alt="image-20220305111802759"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>BFS</title>
      <link href="/2022/03/15/BFS/"/>
      <url>/2022/03/15/BFS/</url>
      
        <content type="html"><![CDATA[<h4 id="BFS-伪代码"><a href="#BFS-伪代码" class="headerlink" title="BFS 伪代码"></a>BFS 伪代码</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">while queue 非空:</span><br><span class="line">node = queue.pop()</span><br><span class="line">    <span class="keyword">for</span> node 的所有相邻结点 m:</span><br><span class="line">        <span class="keyword">if</span> m 未访问过:</span><br><span class="line">            queue.push(m)</span><br></pre></td></tr></table></figure><h4 id="求无权最短路径的-BFS-伪代码"><a href="#求无权最短路径的-BFS-伪代码" class="headerlink" title="求无权最短路径的  BFS 伪代码"></a>求无权最短路径的  BFS 伪代码</h4><p>求 A 点到 B 点的最短距离，就是看 A 点到 B 点有多少层，所以需要修改代码，记录层数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">depth = <span class="number">0</span> # 记录遍历到第几层</span><br><span class="line">while queue 非空:</span><br><span class="line">    depth++</span><br><span class="line">    n = queue 中的元素个数</span><br><span class="line">    循环 n 次:</span><br><span class="line">        node = queue.pop()</span><br><span class="line">        <span class="keyword">for</span> node 的所有相邻结点 m:</span><br><span class="line">            <span class="keyword">if</span> m 未访问过:</span><br><span class="line">                queue.push(m)</span><br></pre></td></tr></table></figure><h4 id="Golang-实现"><a href="#Golang-实现" class="headerlink" title="Golang 实现"></a>Golang 实现</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> griph [][]<span class="type">int</span>,</span><br><span class="line">visited := <span class="built_in">make</span>([]<span class="type">bool</span>, <span class="built_in">len</span>(graph))</span><br><span class="line">visited[<span class="number">0</span>] = <span class="literal">true</span> <span class="comment">// 是否访问</span></span><br><span class="line">depth := <span class="number">0</span> <span class="comment">// 层</span></span><br><span class="line">queue := <span class="built_in">make</span>([]<span class="type">int</span>, <span class="number">0</span>) <span class="comment">// 模拟队列</span></span><br><span class="line">queue = <span class="built_in">append</span>(queue, <span class="number">0</span>)</span><br><span class="line">dist := <span class="built_in">make</span>([]<span class="type">int</span>, <span class="built_in">len</span>(graph)) <span class="comment">// 0 节点到每个节点的距离</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">len</span>(queue) != <span class="number">0</span> &#123;</span><br><span class="line">depth++</span><br><span class="line">n := <span class="built_in">len</span>(queue)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">node := queue[<span class="number">0</span>]</span><br><span class="line">queue = <span class="built_in">append</span>(queue[:<span class="number">0</span>], queue[<span class="number">1</span>:]...)</span><br><span class="line"><span class="keyword">for</span> j := <span class="number">0</span>; j &lt; <span class="built_in">len</span>(graph); j++ &#123;</span><br><span class="line"><span class="keyword">if</span> graph[node][j] == <span class="number">1</span> &#123;</span><br><span class="line"><span class="keyword">if</span> visited[j] == <span class="literal">false</span> &#123;</span><br><span class="line">visited[j] = <span class="literal">true</span></span><br><span class="line">queue = <span class="built_in">append</span>(queue, j)</span><br><span class="line">dist[j] = depth</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo 搭建博客并部署到 GitHub Page</title>
      <link href="/2022/03/14/hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%B9%B6%E9%83%A8%E7%BD%B2%E5%88%B0-GitHub-Page/"/>
      <url>/2022/03/14/hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%B9%B6%E9%83%A8%E7%BD%B2%E5%88%B0-GitHub-Page/</url>
      
        <content type="html"><![CDATA[<h4 id="1-确保电脑有-node-环境"><a href="#1-确保电脑有-node-环境" class="headerlink" title="1. 确保电脑有 node 环境"></a>1. 确保电脑有 node 环境</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>输出如下：</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20230507170108.png" alt="image-20220314213607755"></p><p>没有 node 环境就百度装下，很快</p><h4 id="2-安装-hexo"><a href="#2-安装-hexo" class="headerlink" title="2. 安装 hexo"></a>2. 安装 hexo</h4><blockquote><p>中文官网地址：<a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h4 id="3-在你喜欢的位置新建一个文件夹"><a href="#3-在你喜欢的位置新建一个文件夹" class="headerlink" title="3. 在你喜欢的位置新建一个文件夹"></a>3. 在你喜欢的位置新建一个文件夹</h4><p>该文件夹用于存储 hexo 文件，以后本地上的博客内容也在里面</p><p>&#x3D;&#x3D;命令行进入该文件夹&#x3D;&#x3D;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20230507170115.png" alt="image-20220314214019975"></p><p>需要等待亿小会</p><h4 id="4-安装部署插件"><a href="#4-安装部署插件" class="headerlink" title="4. 安装部署插件"></a>4. 安装部署插件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h4 id="5-测试本机-ssh-key"><a href="#5-测试本机-ssh-key" class="headerlink" title="5. 测试本机 ssh key"></a>5. 测试本机 ssh key</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com </span><br></pre></td></tr></table></figure><p>若输出 <code>Hi ...</code>，则说明本机 ssh 配置完成</p><p>若输出其他，表示未配置 ssh</p><p><a href="https://segmentfault.com/a/1190000017986794">如何配置可参考该文章</a></p><h4 id="6-在-GitHub-上创建仓库"><a href="#6-在-GitHub-上创建仓库" class="headerlink" title="6. 在 GitHub 上创建仓库"></a>6. 在 GitHub 上创建仓库</h4><p>仓库名为：<code>你的用户名.github.io</code></p><p>比如我的用户名为 liskarmw，则仓库名为 <code>liskarmw.github.io</code></p><p>&#x3D;&#x3D;不可更改&#x3D;&#x3D;</p><h4 id="7-打开-hexo-本地文件夹，修改-config-yml-配置"><a href="#7-打开-hexo-本地文件夹，修改-config-yml-配置" class="headerlink" title="7. 打开 hexo 本地文件夹，修改 _config.yml 配置"></a>7. 打开 hexo 本地文件夹，修改 _config.yml 配置</h4><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20230507170123.png" alt="截屏2022-03-14 21.45.50"></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span></span><br><span class="line">    <span class="attr">github:</span> <span class="string">此处为仓库</span> <span class="string">ssh</span> <span class="string">链接</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><h4 id="8-命令行输入命令测试"><a href="#8-命令行输入命令测试" class="headerlink" title="8. 命令行输入命令测试"></a>8. 命令行输入命令测试</h4><p>依次输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>等待 push 完成，在浏览器地址栏输入刚刚的仓库名，测试是否能正常访问</p><h4 id="9-开始写作"><a href="#9-开始写作" class="headerlink" title="9. 开始写作"></a>9. 开始写作</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;文章名&quot;</span><br></pre></td></tr></table></figure><p>文章路径为 <code>source/_post</code></p><p>推送</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><h4 id="10-自用主题"><a href="#10-自用主题" class="headerlink" title="10. 自用主题"></a>10. 自用主题</h4><p><a href="https://butterfly.js.org/">https://butterfly.js.org/</a></p>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<p>​—<br>title: tags<br>date: 2024-06-26 00:29:25<br>type: “about”<br>categories:<br>tags:<br>​—</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/friends/index.html"/>
      <url>/friends/index.html</url>
      
        <content type="html"><![CDATA[<p>​—<br>title: tags<br>date: 2024-06-26 00:29:20<br>type: “friends”<br>categories:<br>tags:<br>​—</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[<p>​—<br>title: tags<br>date: 2024-06-26 00:29:29<br>type: “categories”<br>categories:<br>tags:<br>​—</p>]]></content>
      
    </entry>
    
    
  
</search>
